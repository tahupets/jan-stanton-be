ServerModule:
  Name:               CNSPROD
  Target Platform:    Windows/IBM i/Linux

  Multilingual Details:
  - ENG:
      Description:        "Storefront Products"

  Source: |
    * ========================================================
    * Copyright       : © Lansa Commerce Edition 2024
    * Type            : Server Module
    * Platform        : REST APIs
    * Name            : CNSPROD
    * Identifier      : CNSPROD
    * Ancestor        : PRIM_SRVM
    * Written By      : Jan Metica
    * Written On      : 2nd October 2024
    * Description     : Storefront Products
    * =======================================================
    * Modification Log
    * -------------------------------------------------------
    * User       : Date       : Description (Inc GitLab #)
    * -------------------------------------------------------
    *
    * =======================================================
    
    Begin_Com Role(*EXTENDS #PRIM_SRVM)
    
    * =======================================================
    * Global Definitions
    * =======================================================
    
    Define_Com Class(#CNRDTAMD) Name(#Global_DataModel) Desc('Global Data Model') Help('Global Data Model') Scope(*APPLICATION)
    Define_Com Class(#LW3CNTGL) Name(#Global_Constants) Desc('Global Constants') Help('Global Constants') Scope(*APPLICATION)
    
    * =======================================================
    * Utilities
    * =======================================================
    
    Define_Com Class(#CERGNUTL) Name(#Utility_General) Desc('CE General Utility') Help('CE General Utility') Scope(*APPLICATION)
    Define_Com Class(#CERSSUTL) Name(#Utility_SystemSettings) Desc('System Settings Utility') Help('System Settings Utility') Scope(*APPLICATION)
    Define_Com Class(#CNRCODES) Name(#Utility_Codes) Desc('Code Table Utility') Help('Code Table Utility') Scope(*APPLICATION)
    Define_Com Class(#CERMLUTL) Name(#Utility_Multilinguals) Desc('Multilingual Utility') Help('Multilinguals Utility') Scope(*APPLICATION)
    
    * =======================================================
    * Processors
    * =======================================================
    
    Define_Com Class(#CNRWSSPR) Name(#Processor_Session) Desc('Web Session Processor') Help('Web Session Processor') Scope(*APPLICATION)
    * * * Define_Com Class(#CERIAUTL) Name(#Processor_ProductAttributes) Desc('Product Attributes Processor')
    Define_Com Class(#CNRAPILG) Name(#Processor_ApiLog) Desc('API Log Processor') Scope(*APPLICATION)
    Define_Com Class(#CNRPRDPR) Name(#Processor_Products) Desc('Products Processor') Scope(*APPLICATION)
    
    * =======================================================
    * Collections
    * =======================================================
    
    Define_Com Class(#PRIM_KCOL<#LW3FLTDSC #LW3FLTNCD>) Name(#Collection_Categories) Style(Collection)
    
    * =======================================================
    * Simple Field Definitions
    * =======================================================
    
    Define Field(#W_LCOUNT2) Reffld(#LISTCOUNT) Desc('WL_PRDLST Counter')
    Define Field(#W_LSITEMSCOUNT) Reffld(#LISTCOUNT) Desc('Item List Count')
    
    Define Field(#W_SEARCHRELEVANCEPRIORITY) Type(*DEC) Length(5) Decimals(0) Desc('Search Relevance Priority')
    
    * =======================================================
    * Local Variable Definitions
    * =======================================================
    
    * =======================================================
    * List Definitions
    * =======================================================
    
    * Passed to LW3STPR - Product Retrieval API List
    Def_List Name(#WL_PRDLST) Fields(#LW3ROWTYP #L00DVBR #L00PCAT #L00CNAME #L00STYLE #L00COLOR #L00SIZE #L00BACK #L00PTYP #L00SDESC #L00CDESC #L00WTHFT #L00WTHIN #L00BDESC #L00STDLTH #L00PRDG #L00F2F #L00DROP #L00DROPDT #L00PROPRI #L00PROPCU #L00PROPB2 #L00CLR1 #L00CLR2 #L00PATRNR #L00CONSTR #L00LOOK #L00USAGE #L00FIBER1 #L00FIBER2 #L00FIBER3 #L00PATERN #L00PAT001 #L00FIBRLB #L00CPYRGT #L00MXWTHF #L00MXWTHI #L00SKUSEQ #L00INTROD #L00IMGFLA #L00IMGPRO #L00RMSCEN #L00RMS001 #L00RMS002 #L00IMGGRO #L00FLATCL #L00FLATRN #L00PROFCL #L00PROFRN #L00RM1CLR #L00RM1RNK #L00RM2CLR #L00RM2RNK #L00RM3CLR #L00RM3RNK #L00GROPCL #L00GROPRN #L00ROLONL #L00RPC #L00PATPRD #L00CHAR1 #L00CHAR2 #L00CHAR3 #L00CHAR4 #L00CHAR5 #L00FLAG1 #L00FLAG2 #L00FLAG3 #L00FLAG4 #L00FLAG5 #L00INT1 #L00INT2 #L00INT3 #L00INT4 #L00INT5 #L00DEC1 #L00DEC2 #L00DEC3 #L00DEC4 #L00DEC5 #L00COLCD #L00ROOMTY #L00ROO001 #L00ROO002 #L00WDTIN #L00LTHIN #P010RPRC #P010CPRC #P010UOM #P010SMPRC #P010SHPRC #F55ROLL #F55DLOT #F55WTHF #F55WTHI #F55LTHF #F55LTHI #F55UPRICE #LW3ROLCNT #LW3SLDOUT #F340CCODE #LW3TYPFLR) Counter(#W_LCOUNT2) Type(*WORKING) Entrys(*MAX)
    * Passed to LW3STPR - Search Attribute List
    Def_List Name(#WL_SRCATTRLST) Fields(#LW3FLTNAM #LW3FLTVAL) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#LS_ENDNODE) Fields(#LW3CATID #LW3CATNAM) Type(*WORKING)
    Def_List Name(#LS_PARENTNODE) Fields(#LW3CATID #LW3CATNAM) Type(*WORKING)
    
    Def_List Name(#LS_ITEMS) Fields(#LW3ITEMCD #LW3CATID #LW3CATNAM #W_SEARCHRELEVANCEPRIORITY) Counter(#W_LSITEMSCOUNT) Type(*WORKING) Entrys(*MAX)
    * * * Def_List Name(#LS_PRODUCTDETAILS) Fields(#LW3ITEMCD #LW3IDESC #LW3LPRICE #LW3URL #LW3IMAGE #LW3STKAVL #LW3CATNAM #W_AVLQTY #W_FLAGP #W_PDFLINK #D_LPRICE #LW3CATID #W_LOFT #W_RGHTHND #W_LEFTHND #W_BRAND #LW3ABTXT #LW3UM) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#LS_CATEGORIES) Fields(#LW3CATID #LW3CATNAM) Type(*WORKING) Entrys(*MAX)
    
    * Filter Related Data
    Def_List Name(#LS_FILTERTYPES) Fields(#LW3FLTSLF #LW3FLTSEQ #LW3FLTESQ #LW3FLTTYP #LW3FLTACD #LW3FLTNCD #LW3FLTDSC #LW3FLTECN) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#LS_FILTERDATA) Fields(#LW3FLTSLF #LW3FLTSEQ #LW3FLTESQ #LW3FLTTYP #LW3FLTACD #LW3FLTNCD #LW3FLTDSC #LW3FLTECN) Type(*WORKING) Entrys(*MAX)
    
    * list of key words
    Def_List Name(#LS_KEYLIST) Fields(#lw3kword) Type(*WORKING) Entrys(*MAX)
    * list of misspellings
    Def_List Name(#LS_MISSPELLINGS) Fields(#lw3kword) Type(*WORKING) Entrys(*MAX)
    
    * =======================================================
    * Srvroutine Definitions
    * =======================================================
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/products
    * Operation: PostProducts
    *
    * Request
    *    Parameter: JSON body
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) responseObject
    *             : (ER)
    *
    * Action  : Build the list of products for the passed in category and its sub-categories
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usPostProducts) Response(*HTTP #uContext) Desc('Get Product List')
    
    * API Definition
    Define_Com Class(#Com_Home.PostProducts) Name(#Operation)
    Define_Com Class(#Com_Home.requestFilterObject) Name(#Array_RequestFilter)
    Define_Com Class(#Com_Home.productsArray) Name(#Array_Products) Reference(*DYNAMIC)
    Define_Com Class(#Com_Home.PostProducts.Response.ContentJson.Object) Name(#Object_Response) Reference(*DYNAMIC)
    
    Define_Com Class(#PRIM_NMBR) Name(#L_NumberOfProductsFound)
    Define_Com Class(#PRIM_BOLN) Name(#L_AuthSuccess) Value(False)
    
    #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    
    #uContext.Response.HttpStatus := 500
    
    * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    If (#Operation.TryBind( #uContext ))
    
    If_Ref Com(#uContext.Request.Headers<'Authorization'>) Is(*NULL)
    * No authorization passed so get Storefront Details from the passed in domain
    #Global_DataModel.umGetStorefrontDetails Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    If Cond(#LW3RETCOD = 'OK')
    #L_AuthSuccess := True
    Endif
    
    Else
    * Authorization has been passed so authenticate the access token
    If Cond(#Processor_Session.umVerifyUserTokens( #uContext #uContext.Request.Headers<'Authorization'>.Value #LW3GUID ))
    #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    If Cond(#LW3RETCOD = 'OK')
    #L_AuthSuccess := True
    Endif
    Endif
    
    Endif
    
    If Cond(#L_AuthSuccess)
    
    * Create array of products instance
    Set_Ref Com(#Array_Products) To(*CREATE_AS #COM_Home.productsArray)
    
    #COM_OWNER.umPrepProductSearch Isearchtype(#Operation.Request.ContentJson.type) Inewarrivalsflag(#Operation.Request.ContentJson.new) Idroppedflag(#Operation.Request.ContentJson.dropped) Irequestobject(#Operation.Request.ContentJson) Iresponseproducts(#Array_Products) Onumberofproductsfound(#L_NumberOfProductsFound) Oreturncode(#LW3RETCOD)
    
    * Create response object instance
    Set_Ref Com(#Object_Response) To(*CREATE_AS #Com_Home.PostProducts.Response.ContentJson.Object)
    
    * Set the response object's products array data
    #Object_Response.products <= #Array_Products
    
    * Set the copy of the response object as the content returned by this endpoint
    #Operation.Response.SetContentJson Content(#Object_Response)
    
    Endif
    
    Endif
    
    Endroutine
    
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/filters
    * Operation: GetFacetedFilters
    *
    * Request
    *    Parameter: JSON body
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) responseObject
    *             : (ER)
    *
    * Action  : Build the list of faceted filters for the selected search type
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usGetFacetedFilters) Response(*HTTP #uContext) Desc('Get Faceted Filters')
    
    * API Definition
    Define_Com Class(#Com_Home.GetFacetedFilters) Name(#Operation)
    Define_Com Class(#Com_Home.requestFilterObject) Name(#Object_RequestFilter)
    * Define_Com Class(#Com_Home.responseFilterObject) Name(#Object_ResponseFilter)
    * Define_Com Class(#Com_Home.GetFacetedFilters.Response.ContentJson.Object) Name(#Object_Response) Reference(*DYNAMIC)
    Define_Com Class(#Com_Home.GetFacetedFilters.Response.ContentJson.Object) Name(#Object_Response) Reference(*DYNAMIC)
    Define_Com Class(#Com_Home.httpResponseArray) Name(#Array_HttpResponse)
    
    Define_Com Class(#Com_Home.GetFacetedFilters.Response.NoContent.Object) Name(#Object_NoContent) Reference(*DYNAMIC)
    * * * Define_Com Class(#Com_Home.GetFacetedFilters.Response.Resp401.Object) Name(#Object_Resp401) Reference(*DYNAMIC)
    
    Define_Com Class(#PRIM_BOLN) Name(#L_AuthSuccess) Value(False)
    
    #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    
    #uContext.Response.HttpStatus := 500
    
    * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    If (#Operation.TryBind( #uContext ))
    
    If_Ref Com(#uContext.Request.Headers<'Authorization'>) Is(*NULL)
    * No authorization passed so get Storefront Details from the passed in domain
    #Global_DataModel.umGetStorefrontDetails Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    If Cond(#LW3RETCOD = 'OK')
    #L_AuthSuccess := True
    Endif
    
    Else
    * Authorization has been passed so authenticate the access token
    If Cond(#Processor_Session.umVerifyUserTokens( #uContext #uContext.Request.Headers<'Authorization'>.Value #LW3GUID ))
    #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    If Cond(#LW3RETCOD = 'OK')
    #L_AuthSuccess := True
    Endif
    Endif
    
    Endif
    
    If Cond(#L_AuthSuccess)
    
    Set_Ref Com(#Object_Response) To(*CREATE_AS #Com_Home.GetFacetedFilters.Response.ContentJson.Object)
    
    #COM_OWNER.umBuildProductFilters Isearchtype(#Operation.Request.type) Inewarrivalsflag(#Operation.Request.new) Idroppedflag(#Operation.Request.dropped) Irequestfilters(#Object_RequestFilter) Iresponsefilters(#Object_Response.filters) Oreturncode(#LW3RETCOD)
    
    If Cond(#LW3RETCOD = 'OK')
    #Operation.Response.SetContentJson Content(#Object_Response)
    
    Else
    
    Set_Ref Com(#Object_NoContent) To(*CREATE_AS #Com_Home.GetFacetedFilters.Response.NoContent.Object)
    Set Com(#Object_NoContent) Messages(#Array_HttpResponse)
    #Operation.Response.SetNoContent Content(#Object_NoContent)
    
    Endif
    
    Endif
    
    #Processor_ApiLog.umUpdateLog Iresponse(#uContext.Response.ContentStringUnicode) Iresponsestatus(#uContext.Response.HttpStatus)
    
    Endif
    
    Endroutine
    
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/category/{category}
    * Operation: GetCategory
    *
    * Request
    *    Parameter: category (String) - Category URL
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) responseObject
    *             : (ER)
    *
    * Action  : Build the list of products for the passed in category and its sub-categories
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usGetProducts) Response(*HTTP #uContext) Desc('Get Product List')
    
    * API Definition
    Define_Com Class(#Com_Home.GetCategory) Name(#Operation)
    Define_Com Class(#Com_Home.productsArray) Name(#Array_Products)
    * * * Define_Com Class(#Com_Home.filterArray) Name(#Array_Filter)
    * * * Define_Com Class(#Com_Home.filterSelectionsArray) Name(#Array_FilterSelections)
    * * * Define_Com Class(#Com_Home.responseObject) Name(#Object_Response)
    * * * Define_Com Class(#Com_Home.httpResponseArray) Name(#Array_HttpResponse)
    * * * Define_Com Class(#Com_Home.GetCategory.Response.NoContent.Object) Name(#Object_NoContent) Reference(*DYNAMIC)
    * * * Define_Com Class(#Com_Home.GetCategory.Response.Resp401.Object) Name(#Object_Resp401) Reference(*DYNAMIC)
    
    * * * #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    * * *
    * * * #uContext.Response.HttpStatus := 500
    * * *
    * * * * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    * * * If (#Operation.TryBind( #uContext ))
    * * *
    * * * If Cond(#Processor_Session.umVerifyUserTokens( #uContext #Operation.Request.Security.HTTPBearer.Value #LW3GUID ))
    * * *
    * * * #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    * * * #Processor_ProductAttributes.umGetImagePath Ivariablename('PRODUCT_IMAGE_PATH')
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * *
    * * * #COM_OWNER.umGetEndNodeCategories Icategoryurl(#Operation.Request.category)
    * * * #COM_OWNER.umBuildProductList
    * * *
    * * * #COM_OWNER.umBuildPrdLstResponse Iarray_Products(#Array_Products) Iarray_Filter(#Array_Filter) Iobject_Response(#Object_Response)
    * * *
    * * * If Cond(#Object_Response.products.Count > 0)
    * * *
    * * * #Operation.Response.SetContentJson Content(#Object_Response)
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgNoRecordsFound') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('No products retrieved for the search criteria.')
    * * * Set_Ref Com(#Object_NoContent) To(*CREATE_AS #Com_Home.GetCategory.Response.NoContent.Object)
    * * * Set Com(#Object_NoContent) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetNoContent Content(#Object_NoContent)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgSessionIsExpired') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Session id is not valid')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetCategory.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgUnauthorizedAccess') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Access Token verification failed')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetCategory.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Endif
    * * *
    * * * #Processor_ApiLog.umUpdateLog Iresponse(#uContext.Response.ContentStringUnicode) Iresponsestatus(#uContext.Response.HttpStatus)
    
    Endroutine
    
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/products
    * Operation: GetProductSearch
    *
    * Request
    *    Parameter: search (String) - Search Keyword
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) responseObject
    *             : (ER)
    *
    * Action  : Build the list of products based on a search keyword
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usGetProductSearch) Response(*HTTP #uContext) Desc('Search By Keyword') Help('Use this to search for products using a keyword')
    
    * API Definition
    Define_Com Class(#Com_Home.GetProductSearch) Name(#Operation)
    Define_Com Class(#Com_Home.productsArray) Name(#Array_Products)
    * * * Define_Com Class(#Com_Home.filterArray) Name(#Array_Filter)
    * * * Define_Com Class(#Com_Home.filterSelectionsArray) Name(#Array_FilterSelections)
    * * * Define_Com Class(#Com_Home.responseObject) Name(#Object_Response)
    * * * Define_Com Class(#Com_Home.httpResponseArray) Name(#Array_HttpResponse)
    * * * Define_Com Class(#Com_Home.GetProductSearch.Response.NoContent.Object) Name(#Object_NoContent) Reference(*DYNAMIC)
    * * * Define_Com Class(#Com_Home.GetProductSearch.Response.Resp401.Object) Name(#Object_Resp401) Reference(*DYNAMIC)
    * * *
    * * * #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    * * *
    * * * #uContext.Response.HttpStatus := 500
    * * *
    * * * * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    * * * If (#Operation.TryBind( #uContext ))
    * * *
    * * * If Cond(#Processor_Session.umVerifyUserTokens( #uContext #Operation.Request.Security.HTTPBearer.Value #LW3GUID ))
    * * *
    * * * #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    * * * #Processor_ProductAttributes.umGetImagePath Ivariablename('PRODUCT_IMAGE_PATH')
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * *
    * * * #COM_OWNER.umParseSearchKeyword Isearchedkeyword(#Operation.Request.search)
    * * * #COM_OWNER.umCorrectMisspellings
    * * * #COM_OWNER.umPerformKeywordSearch
    * * *
    * * * Selectlist Named(#LS_ITEMS)
    * * * #COM_OWNER.umGetProductDetails Iitemcode(#LW3ITEMCD)
    * * * Endselect
    * * *
    * * * Sort_List Named(#LS_FILTERTYPES) By_Fields(#LW3FLTSEQ)
    * * * Sort_List Named(#LS_FILTERDATA) By_Fields(#LW3FLTSEQ #LW3FLTESQ)
    * * *
    * * * #COM_OWNER.umBuildPrdLstResponse Iarray_Products(#Array_Products) Iarray_Filter(#Array_Filter) Iobject_Response(#Object_Response)
    * * *
    * * * If Cond(#Object_Response.products.Count > 0)
    * * * #Operation.Response.SetContentJson Content(#Object_Response)
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgNoRecordsFound') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('No products retrieved for the search criteria.')
    * * * Set_Ref Com(#Object_NoContent) To(*CREATE_AS #Com_Home.GetProductSearch.Response.NoContent.Object)
    * * * Set Com(#Object_NoContent) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetNoContent Content(#Object_NoContent)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgSessionIsExpired') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Session id is not valid')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductSearch.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgUnauthorizedAccess') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Access Token verification failed')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductSearch.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Endif
    * * *
    * * * #Processor_ApiLog.umUpdateLog Iresponse(#uContext.Response.ContentStringUnicode) Iresponsestatus(#uContext.Response.HttpStatus)
    
    Endroutine
    
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/products/suggestions
    * Operation: GetProductSuggestions
    *
    * Request
    *    Parameter: search (String) - Search Keyword
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) productSuggestionArray
    *             : (ER)
    *
    * Action  : Build a list of item codes based on the entered search keyword
    *           Used in search autocomplete
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usGetProdSuggestions) Response(*HTTP #uContext) Desc('Get product suggestions')
    
    * API Definition
    Define_Com Class(#Com_Home.GetProductSuggestions) Name(#Operation)
    Define_Com Class(#Com_Home.suggestionResponseObject) Name(#Array_SuggestionsResponse)
    
    Define_Com Class(#Com_Home.httpResponseArray) Name(#Array_HttpResponse)
    Define_Com Class(#Com_Home.GetProductSuggestions.Response.NoContent.Object) Name(#Object_NoContent) Reference(*DYNAMIC)
    Define_Com Class(#Com_Home.GetProductSuggestions.Response.Resp401.Object) Name(#Object_Resp401) Reference(*DYNAMIC)
    
    * * * #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    * * *
    * * * #uContext.Response.HttpStatus := 500
    * * *
    * * * * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    * * * If (#Operation.TryBind( #uContext ))
    * * *
    * * * If Cond(#Processor_Session.umVerifyUserTokens( #uContext #Operation.Request.Security.HTTPBearer.Value #LW3GUID ))
    * * *
    * * * #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * *
    * * * #COM_OWNER.umParseSearchKeyword Isearchedkeyword(#Operation.Request.search)
    * * * #COM_OWNER.umCorrectMisspellings
    * * * #COM_OWNER.umPerformKeywordSearch
    * * *
    * * * #Collection_Categories.RemoveAll
    * * *
    * * * Selectlist Named(#LS_ITEMS)
    * * * #COM_OWNER.umGetProductDetails Iitemcode(#LW3ITEMCD)
    * * * Endselect
    * * *
    * * * Selectlist Named(#LS_FILTERDATA) Where(#LW3FLTSEQ = 1)
    * * * Set_Ref Com(#Collection_Categories<#LW3FLTNCD>) To(*CREATE_AS #LW3FLTDSC)
    * * * #Collection_Categories<#LW3FLTNCD> := #LW3FLTDSC
    * * * Endselect
    * * *
    * * * For Each(#Category) In(#Collection_Categories) Key(#CategoryId)
    * * * #LW3CATNAM := #Category.Value
    * * * #LW3CATID := #CategoryId
    * * * Add_Entry To_List(#LS_CATEGORIES)
    * * * Endfor
    * * *
    * * * Sort_List Named(#LS_PRODUCTDETAILS) By_Fields(#LW3ITEMCD)
    * * * Sort_List Named(#LS_CATEGORIES) By_Fields(#LW3CATNAM)
    * * *
    * * * Selectlist Named(#LS_PRODUCTDETAILS)
    * * * Add_Entry To_List(#Array_SuggestionsResponse.product)
    * * * Endselect
    * * *
    * * * Selectlist Named(#LS_CATEGORIES)
    * * * Add_Entry To_List(#Array_SuggestionsResponse.category)
    * * * Endselect
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * * #Operation.Response.SetContentJson Content(#Array_SuggestionsResponse)
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgNoResultsFromSearch') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('No results for searched product.') Isubstitutionvariable1(#Operation.Request.search)
    * * * Set_Ref Com(#Object_NoContent) To(*CREATE_AS #Com_Home.GetProductSuggestions.Response.NoContent.Object)
    * * * Set Com(#Object_NoContent) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetNoContent Content(#Object_NoContent)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgSessionIsExpired') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Session id is not valid')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductSuggestions.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgUnauthorizedAccess') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Access Token verification failed')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductSuggestions.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Endif
    * * *
    * * * #Processor_ApiLog.umUpdateLog Iresponse(#uContext.Response.ContentStringUnicode) Iresponsestatus(#uContext.Response.HttpStatus)
    
    Endroutine
    
    * =================================== API SUMMARY ==========================================
    *
    * Path     : /CNSPROD/product/{itemcode}
    * Operation: GetProductDetails
    *
    * Request
    *    Parameter: itemcode (String) - Item Code
    *    Schema   : none
    *
    * Response
    *    Schema   : (OK) productsObject
    *             : (ER)
    *
    * Action  : Build the details for the product being accessed
    *
    * -------------------------------- MODIFICATION LOG ----------------------------------------
    *
    * ------------------------------------------------------------------------------------------
    * ==========================================================================================
    Srvroutine Name(usGetProductDetails) Response(*HTTP #uContext) Desc('Get product details')
    
    * API Definition
    Define_Com Class(#Com_Home.GetProductDetails) Name(#Operation)
    Define_Com Class(#Com_Home.productsObject) Name(#Object_Products)
    
    Define_Com Class(#Com_Home.httpResponseArray) Name(#Array_HttpResponse)
    Define_Com Class(#Com_Home.GetProductDetails.Response.NoContent.Object) Name(#Object_NoContent) Reference(*DYNAMIC)
    Define_Com Class(#Com_Home.GetProductDetails.Response.Resp401.Object) Name(#Object_Resp401) Reference(*DYNAMIC)
    
    * * * #Processor_ApiLog.umWriteLog Icontext(#uContext) Iobjectname(#COM_OWNER.Name)
    * * *
    * * * #uContext.Response.HttpStatus := 500
    * * *
    * * * * Bind the Request and Response (#Operation) to the supplied Http Context (#uContext)
    * * * If (#Operation.TryBind( #uContext ))
    * * *
    * * * If Cond(#Processor_Session.umVerifyUserTokens( #uContext #Operation.Request.Security.HTTPBearer.Value #LW3GUID ))
    * * *
    * * * #Global_DataModel.umGetSessionInformation Iguid(#LW3GUID) Ihttpheaders(#uContext.Request.Headers) Oreturncode(#LW3RETCOD)
    * * * #Processor_ProductAttributes.umGetImagePath Ivariablename('PRODUCT_IMAGE_PATH')
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * *
    * * * #COM_OWNER.umGetProductDetails Iitemcode(#Operation.Request.itemcode) Igetdetailsonly(True) Oreturncode(#LW3RETCOD)
    * * *
    * * * If Cond(#LW3RETCOD = 'OK')
    * * *
    * * * #COM_OWNER.umGetProductAttributeTabs Iobject_Products(#Object_Products)
    * * *
    * * * Set Com(#Object_Products) Com_Fields(*ALL)
    * * * #Operation.Response.SetContentJson Content(#Object_Products)
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgProductNotFound') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Product could not be found.')
    * * * Set_Ref Com(#Object_NoContent) To(*CREATE_AS #Com_Home.GetProductDetails.Response.NoContent.Object)
    * * * Set Com(#Object_NoContent) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetNoContent Content(#Object_NoContent)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgSessionIsExpired') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Session id is not valid')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductDetails.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Else
    * * * #COM_OWNER.umSetHttpResponseMessages Ivariablename('MsgUnauthorizedAccess') Imessagetype('error') Iarray_Httpresponse(#Array_HttpResponse) Imessagedetails('Access Token verification failed')
    * * * Set_Ref Com(#Object_Resp401) To(*CREATE_AS #Com_Home.GetProductDetails.Response.Resp401.Object)
    * * * Set Com(#Object_Resp401) Messages(#Array_HttpResponse)
    * * * #Operation.Response.SetResp401 Content(#Object_Resp401)
    * * *
    * * * Endif
    * * *
    * * * Endif
    * * *
    * * * #Processor_ApiLog.umUpdateLog Iresponse(#uContext.Response.ContentStringUnicode) Iresponsestatus(#uContext.Response.HttpStatus)
    
    Endroutine
    
    * =======================================================
    * Method Definitions
    * =======================================================
    * =======================================================
    * Mthroutine ....: umBuildProductFilters
    * Description....: Build Product Filters
    * =======================================================
    Mthroutine Name(umBuildProductFilters) Desc('Build Product Filters')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iNewArrivalsFlag)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iDroppedFlag)
    Define_Map For(*INPUT) Class(#Com_Home.requestFilterObject) Name(#iRequestFilters) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#Com_Home.responseFilterObject) Name(#iResponseFilters) Pass(*BY_REFERENCE)
    Define_Map For(*OUTPUT) Class(#LW3RETCOD) Name(#oReturnCode)
    
    Define_Com Class(#LW3CDES) Name(#L_CodeDescription) Desc('Code Description')
    Define_Com Class(#PRIM_ALPH) Name(#CRPTWTHFT) Desc('Carpet Width Feet')
    Define_Com Class(#PRIM_ALPH) Name(#CRPTWTHIN) Desc('Carpet Width Inches')
    Define_Com Class(#L00PTYP) Name(#CRPTWTHTYP) Desc('Carpet Width Type')
    Define_Com Class(#LW3CODE) Name(#CRPTWTHCOD) Desc('Carpet Width Code')
    Define_Com Class(#LW3CDES) Name(#CRPTWTHDES) Desc('Carpet Width Description')
    Define_Com Class(#PRIM_NMBR) Name(#SELFLRCNT) Desc('Selected Flooring Type Count')
    
    Define_Com Class(#LW3CODE) Name(#L_HardSurfaceWidthCode) Desc('Carpet Width Code')
    Define_Com Class(#LW3CDES) Name(#L_HardSurfaceWidthDesc) Desc('Carpet Width Description')
    Define_Com Class(#LW3CODE) Name(#L_PrimaryFiberCode) Desc('Primary Fiber Code')
    Define_Com Class(#PRIM_NMBR) Name(#L_LoopCount) Desc('Loop Counter')
    
    Define_Com Class(#PRIM_BOLN) Name(#L_IsHardSurfacePlanksSeleced)
    Define_Com Class(#PRIM_BOLN) Name(#L_IsRecordAddedToList)
    
    #COM_OWNER.umInitializeSearchParameters Ocustomernumber(#FXCUSID) Ocustomerindicator(#FXCUSIND) Ostorefrontid(#FXSFID) Ouserid(#LW3WEBUSR) Oactivepricingfile(#LW3ACTFIL) Oreturncode(#oReturnCode)
    
    #FXPRDRTP := 'FLT'
    #FXNEWPRDF := #iNewArrivalsFlag
    
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    
    * !NC! - 06/18/2025 - Jan - Ignore B2B for now for the POC
    
    * * * #COM_OWNER.umGetDataForfiltersB2B
    * * *
    * * * * check value of field #LW3CRDVIS
    * * * If Cond(#LW3CRDVIS *EQ 'Y')
    * * * #F55UPRICE #F55UPRCCA #P010SHPRC #P010SMPRC #P010CPRC #P010RPRC := 0
    * * * Endif
    * * *
    * * * #FXRETCD := 'OK'
    
    Else
    * Populates the work list WL_PRDLST
    #COM_OWNER.umGetDataForfiltersB2C Isearchtype(#iSearchType) Idroppedflag(#iDroppedFlag) Inewproductsflag(#FXNEWPRDF)
    
    #FXRETCD := 'OK'
    Endif
    
    If Cond(#FXRETCD <> 'OK')
    Message Msgtxt(#FXRETMSG)
    Endif
    
    * -----------------------------------------
    * START: Build Flooring Type Filter
    Case Of_Field(#iSearchType)
    
    When Value_Is(= 'RESIDENTIAL')
    Select_Sql Fields(#LW3CODE #LW3CDES) From_Files((LW3CODES)) Where("LW3CTYPE = 'FTYPED' And LW3CODE In ('C', 'N', 'B', 'X', 'R') And LW3LNGCOD = '" + #Global_DataModel.upCurrentLanguage + "'") Order_By(#LW3CSEQ) Io_Error(*NEXT)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endselect
    
    When Value_Is(= 'COMMERCIAL')
    
    Select_Sql Fields(#LW3CODE #LW3CDES) From_Files((LW3CODES)) Where("LW3CTYPE = 'FTYPED' And LW3CODE In ('C', 'P', 'T', 'COMMERCIAL') And LW3LNGCOD = '" + #Global_DataModel.upCurrentLanguage + "'") Order_By(#LW3CSEQ) Io_Error(*NEXT)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endselect
    
    When Value_Is(= 'HARD_SURFACE')
    * G#131 - Remove SHS, load only I+A and I+B
    Select_Sql Fields(#LW3CODE #LW3CDES) From_Files((LW3CODES)) Where("LW3CTYPE = 'FTYPED' And LW3CODE In ('I+A', 'I+B') And LW3LNGCOD = '" + #Global_DataModel.upCurrentLanguage + "'") Order_By(#LW3CSEQ) Io_Error(*NEXT)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endselect
    
    When Value_Is(= #Global_Constants.upUrlFilter_WPC)
    * Flooring Type - Retrieve from logical keyed by Code Type and Sequence
    #LW3CODE := 'I+A'
    Fetch Fields(#LW3CDES) From_File(LW3CODES) With_Key('FTYPED' #LW3CODE #Global_DataModel.upCurrentLanguage) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endif
    
    When Value_Is(= #Global_Constants.upUrlFilter_SPC)
    * Flooring Type - Retrieve from logical keyed by Code Type and Sequence
    #LW3CODE := 'I+B'
    Fetch Fields(#LW3CDES) From_File(LW3CODES) With_Key('FTYPED' #LW3CODE #Global_DataModel.upCurrentLanguage) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endif
    
    When Value_Is(= #Global_Constants.upUrlFilter_FineHardwood)
    Fetch Fields(#LW3CDES) From_File(LW3CODES) With_Key('FTYPED' 'K' #Global_DataModel.upCurrentLanguage) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endif
    
    When Value_Is(= 'STOCKEDRUG')
    Fetch Fields(#LW3CDES) From_File(LW3CODES) With_Key('FTYPED' 'R' #Global_DataModel.upCurrentLanguage) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endif
    
    When Value_Is(= #Global_Constants.upUrlFilter_Laminate)
    Fetch Fields(#LW3CDES) From_File(LW3CODES) With_Key('FTYPED' 'L' #Global_DataModel.upCurrentLanguage) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    Endif
    
    When Value_Is(= 'MOLDING_TRIM' = #Global_Constants.upUrlFilter_Bullnose)
    * Do not build Flooring Type filter on both B2B and B2C
    
    When Value_Is(= #Global_Constants.upUrlFilter_Porcelain)
    #LW3CODE := #Global_Constants.upUrlFilter_Porcelain /* PORCELAIN */
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #Global_Constants.upUrlFilter_Porcelain )
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    
    When Value_Is(= #Global_Constants.upUrlFilter_Ceramic)
    #LW3CODE := #Global_Constants.upUrlFilter_Ceramic /* CERAMIC */
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #Global_Constants.upUrlFilter_Ceramic )
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    
    When Value_Is(= #Global_Constants.upUrlFilter_GlassMosaic)
    #LW3CODE := #Global_Constants.upUrlFilter_GlassMosaic /* GLASS_MOSAIC */
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    
    When Value_Is(= #Global_Constants.upUrlFilter_RecycledGlass)
    #LW3CODE := #Global_Constants.upUrlFilter_RecycledGlass /* RECYCLED_GLASS */
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    
    * 06/19/2024 - Jan - Adding Laminate Menu
    When Value_Is(= #Global_Constants.upUrlFilter_Laminate)
    #LW3CODE := #Global_Constants.upUrlFilter_Laminate /* LAMINATE */
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    
    Otherwise
    
    * G#276 - DisplayTile Flooring type for Porcelain/Ceramic/Glass Mosaic/Recycled Glass for the F2K brand
    * * * If Cond(#W_BRAND = 'F2K')
    * * * #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #Global_Constants.upUrlFilter_Porcelain )
    * * * #LW3CODE := #Global_Constants.upUrlFilter_Porcelain /* PORCELAIN */
    * * * #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    * * *
    * * * #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #Global_Constants.upUrlFilter_Ceramic )
    * * * #LW3CODE := #Global_Constants.upUrlFilter_Ceramic /* CERAMIC */
    * * * #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    * * *
    * * * #LW3CODE := #Global_Constants.upUrlFilter_GlassMosaic /* GLASS_MOSAIC */
    * * * #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    * * * #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    * * *
    * * * #LW3CODE := #Global_Constants.upUrlFilter_RecycledGlass /* RECYCLED_GLASS */
    * * * #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    * * * #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    * * *
    * * * * Github #122 - 06/21/2024 - For Floors 2000, show Laminate as a filter under Flooring Type
    * * * #LW3CODE := #Global_Constants.upPrdTyp_Laminate /* LAMINATE */
    * * * #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' #LW3CODE )
    * * * #COM_OWNER.umAddToFlooringTypeFilter Isearchtype(#iSearchType) Iresponsefilters(#iResponseFilters)
    * * *
    * * * Else
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('FTYPED') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    #L_CodeDescription := #LW3CDES
    #LW3IMAGE := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPEI' #LW3CODE )
    #LW3CDES := #L_CodeDescription
    
    * If B2B, only show filter options for the available products for this customer
    If Cond((#Global_DataModel.upStorefrontIndicator = 'B'))
    * * * * 03/18/2020 - If the code is greater than 1, just add
    * * * Case Of_Field(#LW3CODE)
    * * *
    * * * When Value_Is(= 'COMMERCIAL')
    * * * Loc_Entry In_List(#WL_PRDLST) Where(((#L00PTYP = 'C') Or (#L00PTYP = 'P') Or (#L00PTYP = 'T')) And (#L00USAGE = 'COMMERCIAL')) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * If Cond(#FXURLFLT = 'COMMERCIAL')
    * * * #LW3SELECT := 'Y'
    * * * Endif
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * Otherwise
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = #LW3CODE) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * Endcase
    
    Else
    Add_Entry To_List(#iResponseFilters.floorings)
    
    #iResponseFilters.floorings.CurrentItem.select := (#LW3CODE = C) And ((#iSearchType = 'COMMERCIAL') Or (#iSearchType = 'RESIDENTIAL'))
    #iResponseFilters.floorings.CurrentItem.flooring := #LW3CODE
    #iResponseFilters.floorings.CurrentItem.description := #LW3CDES
    
    Endif
    Endselect
    
    * * * Endif
    
    
    Endcase
    * END:   Build Flooring Type Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Build Color Filter
    
    * Color - Retrieve from logical keyed by Code Type and Sequence
    
    * 2022/10/14 - All colors will be pre-selected if the brand filter in the headers are selected (https://gitlab.com/lansa/stanton-carpet/-/issues/230#note_1133088871)
    * * * If Cond((#STDRENTRY = *BLANKS) And ((#Global_Constants.umIsUrlTileOnly( #FXURLFLT )) Or (#FXURLFLT = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = #Global_Constants.upUrlFilter_MoldingTrim) Or (#FXURLFLT = #Global_Constants.upUrlFilter_Bullnose) Or (#FXURLFLT = #Global_Constants.upUrlFilter_Laminate) Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_SPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_FineHardwood) Or (#W_BRAND = 'SHS') Or (#W_BRAND = 'F2K')))
    If Cond(((#Global_Constants.umIsUrlTileOnly( #iSearchType )) Or (#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#iSearchType = #Global_Constants.upUrlFilter_MoldingTrim) Or (#iSearchType = #Global_Constants.upUrlFilter_Bullnose) Or (#iSearchType = #Global_Constants.upUrlFilter_Laminate) Or (#iSearchType = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC) Or (#iSearchType = #Global_Constants.upUrlFilter_FineHardwood)))
    #LW3SELECT := 'Y'
    Endif
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('COLOR') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00CLR1 = #LW3CDES) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    
    Add_Entry To_List(#iResponseFilters.colors)
    #iResponseFilters.colors.CurrentItem.color := #LW3CODE
    #iResponseFilters.colors.CurrentItem.description := #LW3CDES
    #iResponseFilters.colors.CurrentItem.select := (#LW3SELECT = 'Y')
    Endif
    Endselect
    
    #LW3SELECT := *NULL
    
    * #134 - For Molding trim, we only need to build the Color Filter
    * Modified by Jan - 4th Nov 2022 - GitLab Issue #227
    If Cond((#iSearchType = 'MOLDING_TRIM') Or (#iSearchType = #Global_Constants.upUrlFilter_Bullnose))
    Return
    Endif
    
    * END:   Build Color Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Build Brand Filter
    
    Case Of_Field(#iSearchType)
    
    When Value_Is(= 'HARD_SURFACE')
    
    * Issue #211 - Add F2K for Hard Surfaces
    #LW3SELECT #LW3CDES := *NULL
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) Where(#LW3CODE <> '#') With_Key('HSBRND') Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#LW3CUSIND = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00DVBR = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.brands)
    #iResponseFilters.brands.CurrentItem.brand := #LW3CODE
    #iResponseFilters.brands.CurrentItem.description := #LW3CDES
    Endif
    Else
    Add_Entry To_List(#iResponseFilters.brands)
    #iResponseFilters.brands.CurrentItem.brand := #LW3CODE
    #iResponseFilters.brands.CurrentItem.description := #LW3CDES
    Endif
    Endselect
    
    Otherwise
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('BRAND') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    If Cond(((#iSearchType = #Global_Constants.upUrlFilter_Laminate) Or (#iSearchType = #Global_Constants.upUrlFilter_FineHardwood)) And (#LW3CODE = 'SHS'))
    * Rebrand Stanton DWF to just Stanton for Laminate Products
    #LW3CDES := #Utility_Codes.umGetCodeDescriptionByCode( 'BRAND' 'ST' )
    Endif
    
    Loc_Entry In_List(#WL_PRDLST) Where(#L00DVBR = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.brands)
    #iResponseFilters.brands.CurrentItem.brand := #LW3CODE
    #iResponseFilters.brands.CurrentItem.description := #LW3CDES
    Else
    If Cond(#LW3CODE = 'ALL')
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Continue
    Else
    * All brands is selected immediately for B2C
    Add_Entry To_List(#iResponseFilters.brands)
    #iResponseFilters.brands.CurrentItem.brand := #LW3CODE
    #iResponseFilters.brands.CurrentItem.description := #LW3CDES
    #iResponseFilters.brands.CurrentItem.select := True
    Endif
    Endif
    Endif
    
    Endselect
    
    * G#76 - If under the stock rug search and and SRC brand is present, check all other brands beside stocked rug
    If Cond(#iSearchType = 'STOCKEDRUG')
    #L_LoopCount := 0
    Begin_Loop Using(#L_LoopCount) To(#iResponseFilters.brands.Count)
    If Cond((#iResponseFilters.brands<#L_LoopCount>.brand = 'SRC') Or (#iResponseFilters.brands<#L_LoopCount>.brand = 'ALL'))
    #iResponseFilters.brands<#L_LoopCount>.select := False
    Else
    #iResponseFilters.brands<#L_LoopCount>.select := True
    Endif
    End_Loop
    Endif
    
    Endcase
    
    * END:   Build Brand Filter
    * -----------------------------------------
    
    * * * * This means we have the images in the Website clicked
    * * * If Cond(#T_BRAND *NE *BLANKS)
    * * * * Clear all the selected items in the list
    * * * Selectlist Named(#WL_BRAND)
    * * * #LW3SELECT := ''
    * * * Upd_Entry In_List(#WL_BRAND)
    * * * Endselect
    * * * * Locate the Brand that is wanted
    * * * Loc_Entry In_List(#WL_BRAND) Where(#T_BRAND = #LW3CODE)
    * * * If_Status Is(*OKAY)
    * * * #LW3SELECT := 'Y'
    * * * Upd_Entry In_List(#WL_BRAND)
    * * * Endif
    * * * Endif
    
    * Check for special brand filter
    * Loc_Entry In_List(#WL_BRAND) Where((#LW3CODE = 'SHS') And (#LW3SELECT = 'Y'))
    * If_Status Is(*OKAY)
    * Modified by Jan - 8th Nov 2022 - GitLab Issue #227 - Add new tile types to the condition
    * G#276 - Include Hard Surface Dimension if Brand is F2K OR URL is Tile Only
    * If Cond((#FXURLFLT = 'HARD_SURFACE') Or (#Global_Constants.umIsUrlTileOnly( #FXURLFLT )))
    * 06/19/2024 - Jan - Treat Laminate filters similar to Hard Surfaces
    * G#131 - Add  WPC and SPC in this condition
    * If Cond(((#FXURLFLT = 'HARD_SURFACE') Or (#FXURLFLT = #Global_Constants.upUrlFilter_Laminate)) Or (#Global_Constants.umIsUrlTileOnly( #FXURLFLT )) Or (#W_BRAND = 'F2K') Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_SPC))
    * G#151
    
    
    * * * If Cond(((#FXURLFLT = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = #Global_Constants.upUrlFilter_Laminate)) Or (#Global_Constants.umIsUrlTileOnly( #FXURLFLT )) Or (#W_BRAND = 'F2K') Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_SPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_FineHardwood))
    
    If Cond(((#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#iSearchType = #Global_Constants.upUrlFilter_Laminate)) Or (#Global_Constants.umIsUrlTileOnly( #iSearchType )) Or (#iSearchType = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC) Or (#iSearchType = #Global_Constants.upUrlFilter_FineHardwood))
    
    * * * Clr_List Named(#WL_COLLECTION)
    * * * Clr_List Named(#WL_FIBERTYPE)
    * * * Clr_List Named(#WL_SECONDARYFIBER)
    * * * Clr_List Named(#WL_CONSTRUCTION)
    * * * Clr_List Named(#WL_CARPETWIDTH)
    * * * Clr_List Named(#WL_USAGE)
    * * * Clr_List Named(#WL_PATTERNTYPE)
    * * * Clr_List Named(#WL_LOOKANDFEEL)
    * * * #L_DecorativeWaterProofFilterApplies := True
    
    * -----------------------------------------
    * START: Hard Surface Dimensions Filter
    
    * * * If Cond((#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#iSearchType = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_Laminate) Or (#FXURLFLT = #Global_Constants.upUrlFilter_FineHardwood) Or (#Global_Constants.umIsUrlTileOnly( #iSearchType )) Or (#W_BRAND = 'F2K'))
    
    If Cond((#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#iSearchType = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC) Or (#iSearchType = #Global_Constants.upUrlFilter_Laminate) Or (#iSearchType = #Global_Constants.upUrlFilter_FineHardwood) Or (#Global_Constants.umIsUrlTileOnly( #iSearchType )))
    
    * Check Flooring Type selection
    #L_IsHardSurfacePlanksSeleced := False
    * * * #L_LoopCount := 0
    * * * Begin_Loop Using(#L_LoopCount) To(#iRequestFilters.floorings.Count)
    * * * If Cond(#iRequestFilters.floorings<#L_LoopCount>.AsValue = 'I')
    * * * #L_IsHardSurfacePlanksSeleced := True
    * * * Leave
    * * * Endif
    * * * End_Loop
    
    * Carpet Width - Retrieve from logical keyed by Code Type and Sequence
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('HDSUWT') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    
    * G#112 - Hard Surface Dimensions
    * 05/22/2024 - Removed the "IF" condition to apply the script for both B2B and B2C
    * If B2B, only show filter options for the available products for this customer
    * If Cond(#LW3CUSIND = 'B')
    #L_HardSurfaceWidthCode := #LW3CODE
    #L_HardSurfaceWidthDesc := #LW3CDES
    
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00SIZE = #HSWTHCOD) And ((((#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC)) And (#L00PTYP = #Global_Constants.upPrdTyp_HardSurfacePlank)) Or (#Global_Constants.umIsUrlTileOnly( #iSearchType )) Or (#iSearchType = #Global_Constants.upUrlFilter_Laminate) Or (#FXURLFLT = #Global_Constants.upUrlFilter_FineHardwood) Or ((#W_BRAND = 'F2K') And (#W_BRAND = #L00DVBR))))
    Loc_Entry In_List(#WL_PRDLST) Where((#L00SIZE = #L_HardSurfaceWidthCode) And ((((#iSearchType = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#iSearchType = #Global_Constants.upUrlFilter_SPC)) And (#L00PTYP = #Global_Constants.upPrdTyp_HardSurfacePlank)) Or (#Global_Constants.umIsUrlTileOnly( #iSearchType )) Or (#iSearchType = #Global_Constants.upUrlFilter_Laminate) Or (#FXURLFLT = #Global_Constants.upUrlFilter_FineHardwood)))
    If_Status Is(*OKAY)
    * Check if any Flooring Type filters are selected
    * * * If Cond(#iRequestFilters.floorings.Count > 0)
    * * * If Cond(#L_IsHardSurfacePlanksSeleced)
    * * * Add_Entry To_List(#iResponseFilters.dimensions)
    * * * #iResponseFilters.dimensions.CurrentItem.dimension := #L_HardSurfaceWidthCode
    * * * #iResponseFilters.dimensions.CurrentItem.description := #L_HardSurfaceWidthDesc
    * * * Endif
    * * * Else
    Add_Entry To_List(#iResponseFilters.dimensions)
    #iResponseFilters.dimensions.CurrentItem.dimension := #L_HardSurfaceWidthCode
    #iResponseFilters.dimensions.CurrentItem.description := #L_HardSurfaceWidthDesc
    * * * Endif
    
    Endif
    
    Endselect
    
    Endif
    
    * END:   Hard Surface Dimensions Filter
    * -----------------------------------------
    
    Endif
    
    * -----------------------------------------
    * START: Collections Filter
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('COLLEC') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    * G#53
    Loc_Entry In_List(#WL_PRDLST) Where((#L00CNAME = #LW3CODE) And (((#iDroppedFlag = 'Y') And (#L00DROP = 'Y')) Or ((#iDroppedFlag <> 'Y') And (#L00DROP <> 'Y')))) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.collections)
    #iResponseFilters.collections.CurrentItem.collection := #LW3CODE
    #iResponseFilters.collections.CurrentItem.description := #LW3CDES
    Endif
    
    Else
    
    #LW3COUNT := 0
    #LW3QSEL := "SELECT COUNT(L00CNAME) FROM LFIP100 WHERE L00CNAME = '" + #Utility_General.umEscapeSpecialChars( #LW3CODE ) + "' AND L00FLAG4 = 'I' AND L00DROP <> 'Y'"
    
    Select_Sql Fields(#LW3COUNT) Io_Error(*NEXT) Using(#LW3QSEL)
    Leave
    Endselect
    
    If Cond(#LW3COUNT > 0)
    Add_Entry To_List(#iResponseFilters.collections)
    #iResponseFilters.collections.CurrentItem.collection := #LW3CODE
    #iResponseFilters.collections.CurrentItem.description := #LW3CDES
    Endif
    Endif
    Endselect
    
    * END:   Collections Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Fiber Primary & Secondary Type Filter
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('FIBTYP') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    #L_IsRecordAddedToList := False
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00FIBER1 = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.fiberContents)
    #iResponseFilters.fiberContents.CurrentItem.primary := #Utility_General.umDisplaySpecialChar( #LW3CODE )
    #iResponseFilters.fiberContents.CurrentItem.description := #Utility_General.umDisplaySpecialChar( #LW3CDES )
    #L_IsRecordAddedToList := True
    Endif
    
    Else
    Add_Entry To_List(#iResponseFilters.fiberContents)
    #iResponseFilters.fiberContents.CurrentItem.primary := #Utility_General.umDisplaySpecialChar( #LW3CODE )
    #iResponseFilters.fiberContents.CurrentItem.description := #Utility_General.umDisplaySpecialChar( #LW3CDES )
    #L_IsRecordAddedToList := True
    
    Endif
    
    If Cond(#L_IsRecordAddedToList)
    * Check for Secondary Fibers
    #L_PrimaryFiberCode := #LW3CODE
    
    #LW3QSEL := "Select LW3CODE, LW3CDES From LW3CODES"
    #LW3QSEL += " Where LW3CTYPE = 'SFIBTP' And LW3LNGCOD = '" + #Global_DataModel.upCurrentLanguage + "' And LW3CDES = '" + #L_PrimaryFiberCode + "'"
    #LW3QSEL += " Order By LW3CSEQ"
    
    Select_Sql Fields(#LW3CODE #LW3CDES) Io_Error(*NEXT) Using(#LW3QSEL)
    
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00FIBER2 = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.fiberContents.CurrentItem.secondary)
    #iResponseFilters.fiberContents.CurrentItem.secondary.CurrentItem.code := #Utility_General.umDisplaySpecialChar( #LW3CODE )
    #iResponseFilters.fiberContents.CurrentItem.secondary.CurrentItem.description := #Utility_General.umDisplaySpecialChar( #LW3CDES )
    
    Endif
    
    Else
    Set_Ref Com(#iResponseFilters.fiberContents.CurrentItem.secondary) To(*CREATE_AS #Com_Home.responseFilterObject.fiberContents.Array.Object.secondary.Array)
    
    Add_Entry To_List(#iResponseFilters.fiberContents.CurrentItem.secondary)
    #iResponseFilters.fiberContents.CurrentItem.secondary.CurrentItem.code := #Utility_General.umDisplaySpecialChar( #LW3CODE )
    #iResponseFilters.fiberContents.CurrentItem.secondary.CurrentItem.description := #Utility_General.umDisplaySpecialChar( #LW3CDES )
    
    Endif
    Endselect
    Endif
    
    Endselect
    
    * END:   Fiber Primary & Secondary Type Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Constructions Filter
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('CONSTR') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00CONSTR = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.constructions)
    #iResponseFilters.constructions.CurrentItem.construction := #LW3CODE
    #iResponseFilters.constructions.CurrentItem.description := #LW3CDES
    Endif
    
    Else
    Add_Entry To_List(#iResponseFilters.constructions)
    #iResponseFilters.constructions.CurrentItem.construction := #LW3CODE
    #iResponseFilters.constructions.CurrentItem.description := #LW3CDES
    
    Endif
    Endselect
    
    * END:   Constructions Filter
    * -----------------------------------------
    
    
    * -----------------------------------------
    * START: Carpet Widths Filter
    If Cond(#iSearchType <> 'STOCKEDRUG')
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('CERPWT') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    #CRPTWTHTYP := #LW3CODE.Substring( #LW3CODE.CurSize, 1 )
    #CRPTWTHCOD := #LW3CODE
    #CRPTWTHDES := #LW3CDES
    
    If Cond(#LW3CODE.Contains( 'X' ))
    #CRPTWTHFT := #LW3CODE.Substring( 1, (#LW3CODE.PositionOf( 'X' ) - 1) )
    #CRPTWTHIN := #LW3CODE.Substring( (#LW3CODE.PositionOf( 'X' ) + 1), #LW3CODE.CurSize )
    #CRPTWTHIN := #CRPTWTHIN.Trim()
    #CRPTWTHIN := #CRPTWTHIN.Substring( 1, (#CRPTWTHIN.CurSize - 1) )
    
    * Check if there is available product for this width
    Loc_Entry In_List(#WL_PRDLST) Where((#L00WTHFT.AsString = #CRPTWTHFT) *And (#L00WTHIN.asstring = #CRPTWTHIN) *And (#L00PTYP = #CRPTWTHTYP))
    If_Status Is(*OKAY)
    If Cond(#iRequestFilters.floorings.Count > 0)
    #L_LoopCount := 0
    Begin_Loop To(#iRequestFilters.floorings.Count)
    If Cond(#iRequestFilters.floorings<#L_LoopCount>.asValue = #CRPTWTHTYP)
    Add_Entry To_List(#iResponseFilters.carpetWidths)
    #iResponseFilters.carpetWidths.CurrentItem.carpetWidth := #CRPTWTHCOD
    #iResponseFilters.carpetWidths.CurrentItem.description := #CRPTWTHDES
    Endif
    End_Loop
    
    Else
    Add_Entry To_List(#iResponseFilters.carpetWidths)
    #iResponseFilters.carpetWidths.CurrentItem.carpetWidth := #CRPTWTHCOD
    #iResponseFilters.carpetWidths.CurrentItem.description := #CRPTWTHDES
    Endif
    Endif
    Else
    * Check if there is available product for thuis width
    #CRPTWTHFT := #LW3CODE.Substring( 1, (#LW3CODE.CurSize - 1) )
    
    Loc_Entry In_List(#WL_PRDLST) Where((#L00WTHFT.AsString = #CRPTWTHFT) *And (#L00PTYP = #CRPTWTHTYP))
    If_Status Is(*OKAY)
    If Cond(#iRequestFilters.floorings.Count > 0)
    Begin_Loop To(#iRequestFilters.floorings.Count)
    If Cond(#iRequestFilters.floorings<#L_LoopCount>.asValue = #CRPTWTHTYP)
    Add_Entry To_List(#iResponseFilters.carpetWidths)
    #iResponseFilters.carpetWidths.CurrentItem.carpetWidth := #CRPTWTHCOD
    #iResponseFilters.carpetWidths.CurrentItem.description := #CRPTWTHDES
    Endif
    End_Loop
    Else
    Add_Entry To_List(#iResponseFilters.carpetWidths)
    #iResponseFilters.carpetWidths.CurrentItem.carpetWidth := #CRPTWTHCOD
    #iResponseFilters.carpetWidths.CurrentItem.description := #CRPTWTHDES
    Endif
    Endif
    Endif
    Else
    Add_Entry To_List(#iResponseFilters.carpetWidths)
    #iResponseFilters.carpetWidths.CurrentItem.carpetWidth := #LW3CODE
    #iResponseFilters.carpetWidths.CurrentItem.description := #LW3CDES
    Endif
    Endselect
    
    Endif
    
    * END:   Carpet Widths Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Usages Filter
    If Cond(#iSearchType = 'COMMERCIAL')
    
    Fetch Fields(#LW3CODE #LW3CDES) From_File(LW3CODES) With_Key('USAGE' 'COMMERCIAL') Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00USAGE = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.usages)
    #iResponseFilters.usages.CurrentItem.usage := #LW3CODE
    #iResponseFilters.usages.CurrentItem.description := #LW3CDES
    Endif
    Else
    Add_Entry To_List(#iResponseFilters.usages)
    #iResponseFilters.usages.CurrentItem.usage := #LW3CODE
    #iResponseFilters.usages.CurrentItem.description := #LW3CDES
    Endif
    
    Endif
    
    Else
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('USAGE') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    * * * #LW3IMAGE := '/img/icons/' + #LW3CDES
    * If B2B, only show filter options for the available products for this customer
    
    * Indoor/Outdoor Usage filter is based on Fiber Type
    If Cond(#LW3CODE = 'INDOOR / OUTDOOR')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00FIBER1.UpperCase = 'UV STABILIZED ROYALTRON| POLYPROPYLENE')
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.usages)
    #iResponseFilters.usages.CurrentItem.usage := #LW3CODE
    #iResponseFilters.usages.CurrentItem.description := #LW3CDES
    Endif
    Else
    Loc_Entry In_List(#WL_PRDLST) Where(#L00USAGE = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.usages)
    #iResponseFilters.usages.CurrentItem.usage := #LW3CODE
    #iResponseFilters.usages.CurrentItem.description := #LW3CDES
    Endif
    Endif
    Endselect
    
    Endif
    
    * END:   Usages Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Pattern Types Filter
    
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('STPTTP') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    * * * #LW3IMAGE := #LW3CDES
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00PATERN = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.patterns)
    #iResponseFilters.patterns.CurrentItem.pattern := #LW3CODE
    #iResponseFilters.patterns.CurrentItem.description := #LW3CDES
    Endif
    Else
    Add_Entry To_List(#iResponseFilters.patterns)
    #iResponseFilters.patterns.CurrentItem.pattern := #LW3CODE
    #iResponseFilters.patterns.CurrentItem.description := #LW3CDES
    Endif
    Endselect
    
    * END:   Pattern Types Filter
    * -----------------------------------------
    
    * -----------------------------------------
    * START: Look and Feel Filter
    
    * Look and Feel - Retrieve from logical keyed by Code Type and Sequence
    #LW3CTYPE := 'STLFTP'
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL5) With_Key('STLFTP') Io_Error(*NEXT) Val_Error(*NEXT)
    Continue If(#LW3CODE = '#')
    #LW3IMAGE := #LW3CDES
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    Loc_Entry In_List(#WL_PRDLST) Where(#L00LOOK = #LW3CODE) Ret_Entry(*NO)
    If_Status Is(*OKAY)
    Add_Entry To_List(#iResponseFilters.looksfeels)
    #iResponseFilters.looksfeels.CurrentItem.lookfeel := #LW3CODE
    #iResponseFilters.looksfeels.CurrentItem.description := #LW3CDES
    
    Endif
    Else
    Add_Entry To_List(#iResponseFilters.looksfeels)
    #iResponseFilters.looksfeels.CurrentItem.lookfeel := #LW3CODE
    #iResponseFilters.looksfeels.CurrentItem.description := #LW3CDES
    Endif
    Endselect
    
    * END:   Look and Feel Filter
    * -----------------------------------------
    
    If Cond(#iResponseFilters.ToJsonString.AsValue = *BLANKS)
    #oReturnCode := 'ER'
    Else
    #oReturnCode := 'OK'
    Endif
    
    Endroutine
    
    
    * =======================================================
    * Mthroutine ....: umAddToFlooringTypeFilter
    * Description....: Add entry to flooring type filter
    * =======================================================
    Mthroutine Name(umAddToFlooringTypeFilter) Desc('Add entry to flooring type filter') Help('Add entry to flooring type filter')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*INPUT) Class(#Com_Home.responseFilterObject) Name(#iResponseFilters) Pass(*BY_REFERENCE)
    
    * If B2B, only show filter options for the available products for this customer
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    
    * * * Case Of_Field(#iSearchType)
    * * *
    * * * When Value_Is(= 'COMMERCIAL')
    * * * Loc_Entry In_List(#WL_PRDLST) Where(((#L00PTYP = 'C') Or (#L00PTYP = 'P') Or (#L00PTYP = 'T')) And (#L00USAGE = 'COMMERCIAL')) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * When Value_Is(= 'RESIDENTIAL')
    * * * Loc_Entry In_List(#WL_PRDLST) Where(((#L00PTYP = 'C') Or (#L00PTYP = 'N') Or (#L00PTYP = 'B') Or (#L00PTYP = 'X') Or (#L00PTYP = 'R')) And (#L00USAGE <> 'RESIDENTIAL')) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * * If Cond(#FXURLFLT = 'COMMERCIAL')
    * * * * #LW3SELECT := 'Y'
    * * * * Endif
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * When Value_Is(= 'HARD_SURFACE')
    * * * * G#131 - Load only if there is a record for that flooring type
    * * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = 'H') Or (#L00PTYP = 'I')) Ret_Entry(*NO)
    * * * * If_Status Is(*OKAY)
    * * * * * If Cond(#FXURLFLT = 'HARD_SURFACE')
    * * * * * #LW3SELECT := 'Y'
    * * * * * Endif
    * * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * * Endif
    * * *
    * * * #w_PlusPosition := #LW3CODE.PositionOf( '+' )
    * * * Selectlist Named(#WL_PRDLST)
    * * * If Cond((#L00PTYP = #Global_Constants.upPrdTyp_HardSurfaceTile) Or ((#L00PTYP = #Global_Constants.upPrdTyp_HardSurfacePlank) And (#Product_Processor.umGetSubType( #L00PCAT #L00PTYP #L00STYLE #L00BACK ) = #LW3CODE.Substring( (#w_PlusPosition + 1) ))))
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Leave
    * * * Endif
    * * * Endselect
    * * *
    * * *
    * * * * G#131 - Add SPC into Flooring Type
    * * * When Value_Is(= #Global_Constants.upUrlFilter_SPC)
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = #Global_Constants.upPrdTyp_HardSurfacePlank) And (#Product_Processor.umGetSubType( #L00PCAT #L00PTYP #L00STYLE #L00BACK ) = #Global_Constants.upSubType_SPC)) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * G#131 - Add WPC into Flooring Type
    * * * When Value_Is(= #Global_Constants.upUrlFilter_WPC)
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = #Global_Constants.upPrdTyp_HardSurfacePlank) And (#Product_Processor.umGetSubType( #L00PCAT #L00PTYP #L00STYLE #L00BACK ) = #Global_Constants.upSubType_WPC)) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * G#151
    * * * When Value_Is(= #Global_Constants.upUrlFilter_FineHardwood)
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = #Global_Constants.upPrdTyp_FineHardwood)) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * *
    * * * When Value_Is(= 'STOCKEDRUG')
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = 'R') Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * * If Cond(#FXURLFLT = 'HARD_SURFACE')
    * * * * #LW3SELECT := 'Y'
    * * * * Endif
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * 06/19/2024 - Jan - Adding Laminate Menu
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Laminate)
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = 'L') Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * Added by Jan - 3rd Nov 2022 - GitLab Issue #227
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Porcelain)
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = #Global_Constants.upPrdTyp_Porcelain) And (#F340CCODE <> #Global_Constants.upHS_CoreMat_Ceramic)) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Ceramic)
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00PTYP = #Global_Constants.upPrdTyp_Porcelain) And (#F340CCODE = #Global_Constants.upHS_CoreMat_Ceramic)) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * !NC227! - Confirm if Glass Mosaics is prodct type "J"
    * * * When Value_Is(= #Global_Constants.upUrlFilter_GlassMosaic)
    * * *
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = #Global_Constants.upPrdTyp_GlassMosaic) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * * !NC227! - Confirm what product type Recycled glass would be
    * * * When Value_Is(= #Global_Constants.upUrlFilter_RecycledGlass)
    * * *
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = #Global_Constants.upPrdTyp_GlassMosaic) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Bullnose)
    * * * * Includes all "G" products right now
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = #Global_Constants.upPrdTyp_Bullnose) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * *
    * * *
    * * * Otherwise
    * * * If Cond(#W_BRAND = 'F2K')
    * * * Loc_Entry In_List(#WL_PRDLST) Where((#L00DVBR = 'F2K') And (((#L00PTYP = #Global_Constants.upPrdTyp_Porcelain) And (#F340CCODE <> #Global_Constants.upHS_CoreMat_Ceramic)) Or ((#L00PTYP = #Global_Constants.upPrdTyp_Porcelain) And (#F340CCODE = #Global_Constants.upHS_CoreMat_Ceramic)) Or (#L00PTYP = #Global_Constants.upPrdTyp_GlassMosaic) Or (#L00PTYP = #Global_Constants.upPrdTyp_GlassMosaic))) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * * Else
    * * *
    * * * Loc_Entry In_List(#WL_PRDLST) Where(#L00PTYP = #LW3CODE) Ret_Entry(*NO)
    * * * If_Status Is(*OKAY)
    * * * Add_Entry To_List(#WL_FLOORINGTYPE)
    * * * Endif
    * * * Endif
    * * *
    * * * Endcase
    
    Else
    Add_Entry To_List(#iResponseFilters.floorings)
    
    #iResponseFilters.floorings.CurrentItem.select := False
    #iResponseFilters.floorings.CurrentItem.flooring := #LW3CODE
    #iResponseFilters.floorings.CurrentItem.description := #LW3CDES
    
    Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umInitializeSearchParameters
    * Description....: Initializate Search Parameters
    * =======================================================
    Mthroutine Name(umInitializeSearchParameters) Desc('Initializate Search Parameters')
    
    Define_Map For(*BOTH) Class(#FXSTYLDS) Name(#bStyleDescription) Mandatory('')
    Define_Map For(*BOTH) Class(#FXCOLRDS) Name(#bColorDescription) Mandatory('')
    Define_Map For(*OUTPUT) Class(#FXCUSID) Name(#oCustomerNumber)
    Define_Map For(*OUTPUT) Class(#FXCUSIND) Name(#oCustomerIndicator) Desc('"B" for B2B or "C" for B2C')
    Define_Map For(*OUTPUT) Class(#FXSFID) Name(#oStorefrontId)
    Define_Map For(*OUTPUT) Class(#LW3WEBUSR) Name(#oUserId)
    Define_Map For(*OUTPUT) Class(#LW3ACTFIL) Name(#oActivePricingFile)
    Define_Map For(*OUTPUT) Class(#LW3RETCOD) Name(#oReturnCode) Desc('Set to "ER" by default')
    
    #oReturnCode := 'ER'
    
    * If_Null Field(#FXSHOWMSG)
    * #FXSHOWMSG := 'Y'
    * Endif
    
    * If Customer Number is blank, assign it the value of '0' to ensure that the queries below would not encounter issues
    If Cond(#Global_DataModel.upCustomerId = *BLANKS)
    #oCustomerNumber := '0'
    Else
    #oCustomerNumber := #Global_DataModel.upCustomerId
    Endif
    
    #oCustomerIndicator := #Global_DataModel.upUserIndicator
    #oUserId := #Global_DataModel.upUserId
    #oStorefrontId := #Global_DataModel.upStorefrontId
    
    * If the passed in Style or Color Description contains single quotes, escape these quotes by doubling them up
    If Cond(#bStyleDescription.Contains( "'" ))
    #bStyleDescription := #Utility_General.umEscapeSpecialChars( #bStyleDescription )
    Endif
    If Cond(#bColorDescription.Contains( "'" ))
    #bColorDescription := #Utility_General.umEscapeSpecialChars( #bColorDescription )
    Endif
    
    * * * If Cond((#LW3WEBUSR *EQ *blank) *And (#FXWEBUSR *NE *blank))
    * * * #LW3WEBUSR := #FXWEBUSR
    * * * Endif
    
    * * * If Cond(#FXCUSIND = 'B')
    * * * #LW3CRDVIS := *blank
    * * * Fetch Fields(#LW3CRDVIS) From_File(LW3WUSER) With_Key(#LW3WEBUSR) Io_Error(*NEXT) Val_Error(*NEXT)
    * * *
    * * * * Check for Canadian DDP account
    * * * #C1PFG0 := *NULL
    * * * Fetch Fields(#C1CGRP #C1PFG0) From_File(CIP010) With_Key(#FXCUSID.asNumber) Io_Error(*NEXT) Val_Error(*NEXT)
    * * * Endif
    
    * Get Active Pricing File
    #Utility_SystemSettings.umRetrieveSystemVariable Ivariable('ACTIVE_PRICING_FILE') Ilanguage('') Oalphavalue(#oActivePricingFile)
    If_Null Field(#oActivePricingFile)
    #oActivePricingFile := 'LPRP0010'
    Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umGetDataForFiltersB2C
    * Description....: Use this to select data for products to build filters for B2C
    * =======================================================
    Mthroutine Name(umGetDataForFiltersB2C) Desc('Use this to select data for products to build filters for B2C') Help('Use this to select data for products to build filters for B2C. Returns WL_PRDLST')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*INPUT) Class(#FXNEWPRDF) Name(#iNewProductsFlag)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iDroppedFlag)
    
    Define_Com Class(#PRIM_ALPH) Name(#L_CurrentDate)
    Define_Com Class(#PRIM_NMBR) Name(#L_DaysThreshold)
    
    If Cond(#iNewProductsFlag = 'Y')
    
    #COM_OWNER.umGetNewIntroThreshold Isysvarname('B2C_NEW_PRD_TRSHLD') Ocurrentdate(#L_CurrentDate) Othresholddays(#L_DaysThreshold)
    
    #LW3QSEL := "SELECT ATTR.*, HSMF.F340CCODE, XDTL.L130DVAL FROM " + #LW3LIBR + "LFIP100 AS ATTR"
    
    * Added by Jan - 4th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join FIP340 HSMF On HSMF.F340STYL = ATTR.L00STYLE And HSMF.F340CLR = ATTR.L00COLOR And HSMF.F340SIZE = ATTR.L00SIZE And HSMF.F340BACK = ATTR.L00BACK"
    * Added by Jan - 8th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join LFIP130 XDTL On XDTL.L130STYL = ATTR.L00STYLE And XDTL.L130CLR = ATTR.L00COLOR And XDTL.L130SIZE = ATTR.L00SIZE And XDTL.L130BACK = ATTR.L00BACK And XDTL.L130DTYP = 'TYPE OF FLOORING'"
    
    * G#131 - Add query to  join the Lux Vinyl Subtype file
    #COM_OWNER.umJoinSubCategoryFiles Isearchtype(#iSearchType) Bquery(#LW3QSEL)
    
    * G#156 - Do not include the L00SKUSEQ if Fine Hardwood
    * #LW3QSEL += " Where ATTR.L00FLAG4 = 'I' And ATTR.L00SKUSEQ = 1"
    #LW3QSEL += " Where ATTR.L00FLAG4 = 'I'"
    If Cond(#FXURLFLT <> #Global_Constants.upUrlFilter_FineHardwood)
    #LW3QSEL += " And ATTR.L00SKUSEQ = 1"
    Endif
    
    #LW3QSEL += " And '" + #L_CurrentDate + "' <= CASE WHEN ATTR.L00INTRODT <> 0 THEN DATE(SUBSTR(CHAR(ATTR.L00INTRODT), 1, 4) CONCAT '-' CONCAT SUBSTR(CHAR(ATTR.L00INTRODT), 5, 2) CONCAT '-' CONCAT SUBSTR(CHAR(ATTR.L00INTRODT), 7, 2)) + " + #L_DaysThreshold.asString + " DAY END"
    
    * G#131 - Removed umAttachFiltersToQuery to make it consistent with B2B
    #LW3QSEL += #Processor_products.umApplyUrlFilterToQuery( #iSearchType )
    #LW3QSEL += #Processor_Products.umCheckProprietary + " ORDER BY ATTR.L00INTRODT DESC"
    
    Select_Sql Fields(#L00DVBR #L00PCAT #L00CNAME #L00STYLE #L00COLOR #L00SIZE #L00BACK #L00PTYP #L00SDESC #L00CDESC #L00WTHFT #L00WTHIN #L00BDESC #L00STDLTH #L00PRDG #L00F2F #L00DROP #L00DROPDT #L00PROPRI #L00PROPCU #L00PROPB2 #L00CLR1 #L00CLR2 #L00PATRNR #L00CONSTR #L00LOOK #L00USAGE #L00FIBER1 #L00FIBER2 #L00FIBER3 #L00PATERN #L00PAT001 #L00FIBRLB #L00CPYRGT #L00MXWTHF #L00MXWTHI #L00SKUSEQ #L00INTROD #L00IMGFLA #L00IMGPRO #L00RMSCEN #L00RMS001 #L00RMS002 #L00IMGGRO #L00FLATCL #L00FLATRN #L00PROFCL #L00PROFRN #L00RM1CLR #L00RM1RNK #L00RM2CLR #L00RM2RNK #L00RM3CLR #L00RM3RNK #L00GROPCL #L00GROPRN #L00ROLONL #L00RPC #L00PATPRD #L00CHAR1 #L00CHAR2 #L00CHAR3 #L00CHAR4 #L00CHAR5 #L00FLAG1 #L00FLAG2 #L00FLAG3 #L00FLAG4 #L00FLAG5 #L00INT1 #L00INT2 #L00INT3 #L00INT4 #L00INT5 #L00DEC1 #L00DEC2 #L00DEC3 #L00DEC4 #L00DEC5 #L00COLCD #L00ROOMTY #L00ROO001 #L00ROO002 #L00WDTIN #L00LTHIN #F340CCODE #LW3TYPFLR) Io_Error(*NEXT) Using(#LW3QSEL)
    Add_Entry To_List(#WL_PRDLST)
    Endselect
    
    Endif
    
    * G#163 - If not NEW or if NEW and there are no records found, run as if you are normally loading records from a regular search
    If Cond(((#iNewProductsFlag = 'Y') And (#W_LCOUNT2 = 0)) Or (#iNewProductsFlag <> 'Y'))
    
    #LW3QSEL := "SELECT DISTINCT ATTR.*, HSMF.F340CCODE, XDTL.L130DVAL FROM LFIP100 AS ATTR"
    
    * Added by Jan - 4th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join FIP340 HSMF On HSMF.F340STYL = ATTR.L00STYLE And HSMF.F340CLR = ATTR.L00COLOR And HSMF.F340SIZE = ATTR.L00SIZE And HSMF.F340BACK = ATTR.L00BACK"
    * Added by Jan - 8th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join LFIP130 XDTL On XDTL.L130STYL = ATTR.L00STYLE And XDTL.L130CLR = ATTR.L00COLOR And XDTL.L130SIZE = ATTR.L00SIZE And XDTL.L130BACK = ATTR.L00BACK And XDTL.L130DTYP = 'TYPE OF FLOORING'"
    
    * G#131 - Add query to  join the Lux Vinyl Subtype file
    #COM_OWNER.umJoinSubCategoryFiles Isearchtype(#iSearchType) Bquery(#LW3QSEL)
    
    * G#131 - Removed umAttachFiltersToQuery to make it consistent with B2B
    #LW3QSEL += " WHERE ATTR.L00FLAG4 = 'I' AND ATTR.L00PTYP <> 'W' " + #Processor_Products.umApplyUrlFilterToQuery( #FXURLFLT ) + #Processor_Products.umCheckProprietary
    
    * Only Select Dropped Products
    If Cond(#iDroppedFlag = 'Y')
    #LW3QSEL += " AND ATTR.L00DROP = 'Y'"
    Else
    #LW3QSEL += " AND ATTR.L00DROP <> 'Y'"
    Endif
    
    Select_Sql Fields(#L00DVBR #L00PCAT #L00CNAME #L00STYLE #L00COLOR #L00SIZE #L00BACK #L00PTYP #L00SDESC #L00CDESC #L00WTHFT #L00WTHIN #L00BDESC #L00STDLTH #L00PRDG #L00F2F #L00DROP #L00DROPDT #L00PROPRI #L00PROPCU #L00PROPB2 #L00CLR1 #L00CLR2 #L00PATRNR #L00CONSTR #L00LOOK #L00USAGE #L00FIBER1 #L00FIBER2 #L00FIBER3 #L00PATERN #L00PAT001 #L00FIBRLB #L00CPYRGT #L00MXWTHF #L00MXWTHI #L00SKUSEQ #L00INTROD #L00IMGFLA #L00IMGPRO #L00RMSCEN #L00RMS001 #L00RMS002 #L00IMGGRO #L00FLATCL #L00FLATRN #L00PROFCL #L00PROFRN #L00RM1CLR #L00RM1RNK #L00RM2CLR #L00RM2RNK #L00RM3CLR #L00RM3RNK #L00GROPCL #L00GROPRN #L00ROLONL #L00RPC #L00PATPRD #L00CHAR1 #L00CHAR2 #L00CHAR3 #L00CHAR4 #L00CHAR5 #L00FLAG1 #L00FLAG2 #L00FLAG3 #L00FLAG4 #L00FLAG5 #L00INT1 #L00INT2 #L00INT3 #L00INT4 #L00INT5 #L00DEC1 #L00DEC2 #L00DEC3 #L00DEC4 #L00DEC5 #L00COLCD #L00ROOMTY #L00ROO001 #L00ROO002 #L00WDTIN #L00LTHIN #F340CCODE #LW3TYPFLR) Io_Error(*NEXT) Using(#LW3QSEL)
    Add_Entry To_List(#WL_PRDLST)
    Endselect
    
    Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umGetNewIntroThreshold
    * Description....: Get New Intro Threshold
    * =======================================================
    Mthroutine Name(umGetNewIntroThreshold) Desc('Get New Intro Threshold')
    
    Define_Map For(*INPUT) Class(#LW3SVVALP) Name(#iSysVarName)
    Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#oThresholdDays)
    Define_Map For(*OUTPUT) Class(#PRIM_ALPH) Name(#oCurrentDate)
    
    #Utility_SystemSettings.umRetrieveSystemVariable Ivariable(#iSysVarName) Ilanguage('') Onumericvalue(#oThresholdDays)
    #oCurrentDate := #STD_DATEX.Now.AsDisplayString( CCYYsMMsDD ).ReplaceAll( '/' '-' )
    
    Endroutine
    
    * * =======================================================
    * * Mthroutine ....: umJoinSubCategoryFiles
    * * Description....: Query to join the new Sub Category files
    * * =======================================================
    Mthroutine Name(umJoinSubCategoryFiles) Desc('Query to join the new Sub Category files')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*BOTH) Class(#PRIM_ALPH) Name(#bQuery)
    
    * G#147 - Include logic to add subtype for search/all and for B2C. Excel issue #8
    If Cond((#FXURLFLT = #Global_Constants.upUrlFilter_SPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_WPC) Or (#FXURLFLT = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = '') Or (#LW3CUSIND = 'C'))
    #bQuery += " Left Join FIP054 PSUBF ON PSUBF.F54STYL = ATTR.L00STYLE and PSUBF.F54BACK = ATTR.L00BACK and PSUBF.F54PCAT = ATTR.L00PCAT and PSUBF.F54PTYP = ATTR.L00PTYP "
    Endif
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umPrepProductSearch
    * Description....: Prepare parameters for Product Search
    * =======================================================
    Mthroutine Name(umPrepProductSearch) Desc('Prepare parameters for Product Search')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iNewArrivalsFlag)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iDroppedFlag)
    Define_Map For(*INPUT) Class(#COM_Home.PostProducts.Request.ContentJson.Object) Name(#iRequestObject) Pass(*BY_REFERENCE)
    * Define_Map For(*INPUT) Class(#Com_Home.productsArray) Name(#iResponseProductsArray) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#Com_Home.productsArray) Name(#iResponseProducts) Pass(*BY_REFERENCE)
    
    Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#oNumberOfProductsFound)
    Define_Map For(*OUTPUT) Class(#LW3RETCOD) Name(#oReturnCode)
    
    Define_Com Class(#PRIM_NMBR) Name(#W_PRICEMAXFILTER) Desc('Maximum Price Filter')
    Define_Com Class(#PRIM_NMBR) Name(#W_PRICEMINFILTER) Desc('Minimum Price Filter')
    
    Define_Com Class(#LW3COUNT) Name(#L_ListDisplayCounter)
    Define_Com Class(#LW3PAGSIZ) Name(#L_NumberOfItemsToShow)
    
    #COM_OWNER.umBuildSearchAttributeList Irequestobject(#iRequestObject)
    
    Clr_List Named(#WL_PRDLST)
    
    #FXPRDRTP := 'SRH'
    #FXCUSID := #LW3WEBC01
    #FXCUSIND := #LW3CUSIND
    #FXBRAND := #LW3BRNCD
    #FXDTARCD := 'DTL'
    #LW3WEBUSR := #STDWEBUSR
    #FXSFID := #LW3SFID
    
    If_Ref Com(#iRequestObject.filters.priceRange) Is_Not(*NULL)
    #FXSRNPRC := #iRequestObject.filters.priceRange.min.AsFloat
    #FXERNPRC := #iRequestObject.filters.priceRange.max.AsFloat
    Endif
    
    #FXNEWPRDF := #iNewArrivalsFlag
    If Cond(#FXNEWPRDF = 'Y')
    #FXPRDRTP := 'NEW'
    Endif
    
    * * * * Check if we only need to retrieve dropped products
    * * * If Cond(#LW3DRPFLG = 'Y')
    * * * Loc_Entry In_List(#ls_mlnvar) Where(#FXVARNAM = 'PAGE_TITLE')
    * * * If_Status Is(*OKAY)
    * * * #FXVARTXT := #MultilingualReader.umGetMultilingualText( 'HDR_DISCONTINUED_PRODUCTS' *LANGUAGE )
    * * * Upd_Entry In_List(#ls_mlnvar)
    * * * Endif
    * * * #FXDROPFLG := 'Y'
    * * * Endif
    
    * * * #COM_OWNER.umInitializeSearchParameters
    
    Case Of_Field(#FXPRDRTP)
    
    * Processing New Items
    When Value_Is(= 'NEW')
    
    * * * If Cond((#FXDTARCD = 'DTL') Or (#FXDTARCD = 'NHS'))
    * * * #COM_OWNER.umRetrieveNewIntroductionsList Idatareturncode(#FXDTARCD) Oreturncode(#FXRETCD)
    * * *
    * * * Else
    * * * #FXRETMSG := 'Invalid Data Returned Code'
    * * *
    * * * Endif
    
    * G#163 - If NEW and no products were found, run a regular search
    If Cond(#W_LCOUNT2 = 0)
    #COM_OWNER.umProductSearch Isearchtype(#iSearchType) Idroppedflag(#iDroppedFlag) Irequestobject(#iRequestObject) Iresponseproducts(#iResponseProducts)
    
    #FXRETCD := 'OK'
    Exchange Fields(#FXSRNPRC #FXERNPRC)
    
    * * * * Change sort to Intro Date Desc
    * * * #W_SORTBY := 'H'
    Endif
    
    * Product Search
    When Value_Is(= 'SRH')
    
    If Cond(#FXDTARCD = 'DTL')
    
    #COM_OWNER.umProductSearch Isearchtype(#iSearchType) Idroppedflag(#iDroppedFlag) Irequestobject(#iRequestObject) Iresponseproducts(#iResponseProducts)
    
    #FXRETCD := 'OK'
    Exchange Fields(#FXSRNPRC #FXERNPRC)
    
    Else
    #FXRETMSG := 'Invalid Data Returned Code'
    
    Endif
    
    Endcase
    
    * * * * Modified by Jan - 5th Nov 2022 - GitLab Issue #227 - Moved the product list logic from LW3STPR to the WAM to allow for changes to the working list - END
    * * * If Cond(#FXRETCD = OK)
    * * *
    * * * #L_NumberOfItemsToShow := #LW3PAGSIZ
    * * *
    * * * Case Of_Field(#W_SORTBY)
    * * * * By Name (Ascending)
    * * * When Value_Is(= 'N')
    * * * Sort_List Named(#WL_PRDLST) By_Fields(#L00SDESC #L00CDESC)
    * * * * By Name (Descending)
    * * * When Value_Is(= 'D')
    * * * Sort_List Named(#WL_PRDLST) By_Fields((#L00SDESC *DSC) (#L00CDESC *DSC))
    * * * * By Price (Ascending)
    * * * When Value_Is(= 'P')
    * * * * G#35
    * * * #COM_OWNER.umUpdateListForPriceSort
    * * *
    * * * Sort_List Named(#WL_PRDLST) By_Fields(#P010CPRC)
    * * * * By Price (Descending)
    * * * When Value_Is(= 'E')
    * * * * G#35
    * * * #COM_OWNER.umUpdateListForPriceSort
    * * *
    * * * Sort_List Named(#WL_PRDLST) By_Fields((#P010CPRC *DSC))
    * * * * By Date (Descending) - Dropped Products Only
    * * * When Value_Is(= 'X')
    * * * Sort_List Named(#WL_PRDLST) By_Fields((#L00DROPDT *DSC))
    * * * * By Date (Ascending) - Dropped Products Only
    * * * When Value_Is(= 'Z')
    * * * Sort_List Named(#WL_PRDLST) By_Fields(#L00DROPDT)
    * * *
    * * * * By Date of Introduction (Ascending)
    * * * When Value_Is(= 'G')
    * * * Sort_List Named(#WL_PRDLST) By_Fields(#L00INTROD)
    * * *
    * * * * By Date of Introduction (Descending)
    * * * When Value_Is(= 'H')
    * * * Sort_List Named(#WL_PRDLST) By_Fields((#L00INTROD *DESC))
    * * *
    * * * * Default by Name
    * * * Otherwise
    * * * Sort_List Named(#WL_PRDLST) By_Fields(#L00SDESC #L00CDESC)
    * * * Endcase
    * * *
    * * * If_Null Field(#LW3PAGSIZ)
    * * * #L_NumberOfItemsToShow := 24
    * * * Else
    * * * #L_NumberOfItemsToShow := #LW3PAGSIZ
    * * * Endif
    * * *
    * * * Case Of_Field(#STDRENTRY)
    * * * * Next
    * * * When Value_Is(= 'N')
    * * * #LW3IPPC += #L_NumberOfItemsToShow
    * * * * Previous
    * * * When Value_Is(= 'P')
    * * * #LW3IPPC -= #L_NumberOfItemsToShow
    * * * Endcase
    * * *
    * * * #L_ListDisplayCounter := 0
    * * * Selectlist Named(#WL_PRDLST)
    * * * * Skip Dropped Products if not supposed to display them
    * * * If Cond((#LW3DRPFLG <> 'Y') And (#L00DROP = 'Y'))
    * * * * #W_LCOUNT2 -= 1
    * * * Continue
    * * * Else
    * * * If Cond(#L00DROPDT.isDate( CCYYMMDD ))
    * * * #W_DROPDATE := #L00DROPDT.asDate( CCYYMMDD ).asDisplayString( MMsDDsCCYY )
    * * * Else
    * * * #W_DROPDATE := *NULL
    * * * Endif
    * * * Endif
    * * *
    * * * * Set the position of items to be displayed from the list retrieved from the API
    * * * #L_ListDisplayCounter += 1
    * * * Continue If(#L_ListDisplayCounter < #LW3IPPC)
    * * * * Only display a certain number of items at a time if not showing all
    * * * Leave If((#W_LCOUNT1 >= #L_NumberOfItemsToShow) And (#L_NumberOfItemsToShow <> 9999))
    * * *
    * * * * G#272 - Add Room Scenes in the New Intro Product query
    * * * #COM_OWNER.umAddHoverImages
    * * *
    * * * Add_Entry To_List(#WL_PRODUCTLIST)
    * * * Endselect
    * * *
    * * * #oNumberOfProductsFound := #W_LCOUNT2
    * * *
    * * * * Deduct Dropped Products Count from Total Item Count
    * * * If Cond(#LW3DRPFLG <> 'Y')
    * * * Selectlist Named(#WL_PRDLST) Where(#L00DROP = 'Y')
    * * * #oNumberOfProductsFound -= 1
    * * * Endselect
    * * * Endif
    * * *
    * * * If Cond(#LW3IPPC > 1)
    * * * #LW3SHWPRV := 'Y'
    * * * Else
    * * * #LW3SHWPRV := 'N'
    * * * Endif
    * * * If Cond((#LW3IPPC + #L_NumberOfItemsToShow) < #oNumberOfProductsFound)
    * * * #LW3SHWNXT := 'Y'
    * * * Else
    * * * #LW3SHWNXT := 'N'
    * * * Endif
    
    * * * If Cond(*Not #L_DecorativeWaterProofFilterApplies)
    * * * * Hide Price Filter if Decorative Water Proof Filter is selected
    * * * #Utility_SystemSettings.uGetValue Uikey('CE_FILTER_MAX_PRICE') Uonumericvalue(#W_PRICEMAXFILTER)
    * * * #Utility_SystemSettings.uGetValue Uikey('CE_FILTER_MIN_PRICE') Uonumericvalue(#W_PRICEMINFILTER)
    * * *
    * * * If Cond(#W_PRICERANGELOW = 0)
    * * * #W_PRICERANGELOW := #W_PRICEMINFILTER
    * * * Endif
    * * * If Cond(#W_PRICERANGEHIGH = 0)
    * * * #W_PRICERANGEMAX := #W_PRICEMAXFILTER
    * * * Endif
    * * *
    * * * * If the filter handlers are not set at the minimum and maximum values, show the price filter
    * * * * If Cond((#W_PRICERANGELOW <> #W_PRICERANGEMIN) Or (#W_PRICERANGEHIGH <> #W_PRICERANGEMAX))
    * * * * Message Msgtxt('Im here')
    * * * #W_PRICERANGEFLAG := 'Y'
    * * * * Endif
    * * * Endif
    * * * Else
    * * * Message Msgtxt(#FXRETMSG)
    * * * Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umBuildSearchAttributeList
    * Description....: Search Attribute List
    * =======================================================
    Mthroutine Name(umBuildSearchAttributeList) Desc('Search Attribute List')
    
    Define_Map For(*INPUT) Class(#COM_Home.PostProducts.Request.ContentJson.Object) Name(#iRequestObject) Pass(*BY_REFERENCE)
    
    Define_Com Class(#PRIM_NMBR) Name(#L_LoopCount)
    Define_Com Class(#PRIM_NMBR) Name(#L_LoopCountSecond)
    
    * !NC! - Needs to change as filter and products are returned by separate endpoints
    Define_Com Class(#PRIM_BOLN) Name(#L_DecorativeWaterProofFilterApplies)
    
    Clr_List Named(#WL_SRCATTRLST)
    
    * Flooring Type
    If_Ref Com(#iRequestObject.filters.floorings) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.floorings.Count)
    * * * #W_FLOORINGTYPEFILTERFLAG := 'Y'
    #LW3FLTVAL := #iRequestObject.filters.floorings<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Pattern Type
    If_Ref Com(#iRequestObject.filters.patterns) Is_Not(*NULL)
    #LW3CTYPE := 'STPTTP'
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( #LW3CTYPE '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.patterns.Count)
    * * * #W_PATTERNTYPEFILTERFLAG := 'Y'
    #LW3FLTVAL := #iRequestObject.filters.patterns<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Color
    If_Ref Com(#iRequestObject.filters.colors) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'COLOR' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.colors.Count)
    * * * #W_COLORFILTERFLAG := 'Y'
    #LW3FLTVAL := #iRequestObject.filters.colors<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Look & Feel
    If_Ref Com(#iRequestObject.filters.looksfeels) Is_Not(*NULL)
    #LW3CTYPE := 'STLFTP'
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( #LW3CTYPE '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.looksfeels.Count)
    * * * #W_LOOKANDFEELFILTERFLAG := 'Y'
    #LW3FLTVAL := #iRequestObject.filters.looksfeels<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Usage
    If_Ref Com(#iRequestObject.filters.usages) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'USAGE' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.usages.Count)
    * * * #W_USAGEFILTERFLAG := 'Y'
    #LW3FLTVAL := #iRequestObject.filters.usages<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Collection
    If_Ref Com(#iRequestObject.filters.collections) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'COLLEC' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.collections.Count)
    #LW3FLTVAL := #iRequestObject.filters.collections<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Fiber Type
    If_Ref Com(#iRequestObject.filters.fiberContents) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'FIBTYP' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.fiberContents.Count)
    #LW3FLTVAL := #iRequestObject.filters.fiberContents<#L_LoopCount>.primary.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    
    * Secondary Fiber Type is added on the same bucket as the Primary Fiber Type
    If Cond(#iRequestObject.filters.fiberContents<#L_LoopCount>.secondaries.Count > 0)
    #L_LoopCountSecond := 0
    Begin_Loop Using(#L_LoopCountSecond) To(#iRequestObject.filters.fiberContents<#L_LoopCount>.secondaries.Count)
    #LW3FLTVAL := #iRequestObject.filters.fiberContents<#L_LoopCount>.secondaries<#L_LoopCountSecond>.asValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    End_Loop
    
    Endif
    
    * Construction
    If_Ref Com(#iRequestObject.filters.constructions) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'CONSTR' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.constructions.Count)
    #LW3FLTVAL := #iRequestObject.filters.constructions<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Carpet Width
    If_Ref Com(#iRequestObject.filters.carpetWidths) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'CERPWT' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.carpetWidths.Count)
    #LW3FLTVAL := #iRequestObject.filters.carpetWidths<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Hard Surface Width
    If_Ref Com(#iRequestObject.filters.dimensions) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'HDSUWT' '#' )
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.dimensions.Count)
    #LW3FLTVAL := #iRequestObject.filters.dimensions<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    Endif
    
    * Brands
    If_Ref Com(#iRequestObject.filters.brands) Is_Not(*NULL)
    #L_LoopCount := 0
    #LW3FLTNAM := #Utility_Codes.umGetCodeDescriptionByCode( 'BRAND' '#' )
    
    If Cond(#L_DecorativeWaterProofFilterApplies)
    If_Ref Com(#iRequestObject.filters.brands) Is(*NULL)
    
    Select Fields(#LW3CODE) From_File(LW3CODL5) Where(#LW3CODE <> '#') With_Key('HSBRND') Io_Error(*NEXT) Val_Error(*NEXT)
    #LW3FLTVAL := #LW3CODE
    Add_Entry To_List(#WL_SRCATTRLST)
    Endselect
    
    Else
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.brands.Count)
    #LW3FLTVAL := #iRequestObject.filters.brands<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    
    Endif
    
    Else
    
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.brands.Count)
    #LW3FLTVAL := #iRequestObject.filters.brands<#L_LoopCount>.AsValue
    Add_Entry To_List(#WL_SRCATTRLST)
    End_Loop
    
    Endif
    
    Endif
    
    * * * * G#276 - If there are more than one brands selected this way, clear the W_BRAND value
    * * * If Cond(#W_BRANDCOUNT > 1)
    * * * #W_BRAND := *NULL
    * * * Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umProductSearch
    * Description....: Product Search
    * =======================================================
    Mthroutine Name(umProductSearch) Desc('Product Search')
    
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iSearchType)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iDroppedFlag)
    Define_Map For(*INPUT) Class(#COM_Home.PostProducts.Request.ContentJson.Object) Name(#iRequestObject) Pass(*BY_REFERENCE)
    * Define_Map For(*INPUT) Class(#Com_Home.productsArray) Name(#iResponseProductsArray) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#Com_Home.productsArray) Name(#iResponseProducts) Pass(*BY_REFERENCE)
    
    Define_Com Class(#PRIM_ALPH) Name(#L_HoverImage)
    
    #LW3ROWTYP := 'STK'
    * * * #LW3CATID := #COM_OWNER.umCheckForCategoryUrl( #FXSFID #FXCATURL )
    
    * Check B2B/B2C Flag
    If Cond(#Global_DataModel.upStorefrontIndicator = 'B')
    
    * * * * G#35 - Clear range values, always load all prices, then use the API to retrieve the prices and then proceed with the filters if available
    * * * #FXSRNPRC #FXERNPRC := *NULL
    * * *
    * * * * G#35 - Added by Marcus - START
    * * * If Cond(*Not (((#W_PRICERANGELOW = 0) And (#W_PRICERANGEHIGH = 0)) Or ((#W_PRICERANGEMIN = #W_PRICERANGELOW) And (#W_PRICERANGEMAX = #W_PRICERANGEHIGH))))
    * * *
    * * * * Price range has been selected so we need to check if there are any zero prices.
    * * * * If so we need to then run LPRR0015. First look for any zero prices.
    * * * #w_found := N
    * * * #LW3QSEL := 'SELECT P010SID# FROM ' + #LW3ACTFIL + ' WHERE P010SID# = 0 AND P010CST# = ' + #LW3WEBC01 + ' AND P010CPRC = 0 AND P010RPRC = 0 AND P010SMPRC = 0 AND P010SHPRC = 0'
    * * * Select_Sql Fields(#P010SID#) Io_Error(*NEXT) Using(#LW3QSEL)
    * * * #w_found := Y
    * * * Leave
    * * * Endselect
    * * *
    * * * * Then if we found any zero prices for this customer call LPRR0015
    * * * If (#w_found = Y)
    * * * #P010SID# := 0
    * * * #P010CST# := #LW3WEBC01.asNumber
    * * * Call Pgm(LPRR0015) Parm(#P010SID# #P010CST# #LW3RETNCD) Num_Len(*DEFINED) If_Error(*NEXT)
    * * * Endif
    * * *
    * * * Endif
    * * * * G#35 - Added by Marcus - END
    * * *
    * * * If Cond(#LW3MSRPPF = 'Y')
    * * * * G#35 DISTINCT
    * * * #LW3QSEL := "SELECT DISTINCT ATTR.*, PRICE.P010RPRC, CASE ATTR.L00PTYP WHEN 'R' THEN ((CAST(" + #LW3MSRPPR.asString + "/100 AS NUMERIC(36,2)) * PRICE.P010CPRC) + PRICE.P010CPRC) ELSE ((CAST(" + #LW3MSRPCP.asString + "/100 AS NUMERIC(36,2)) * PRICE.P010CPRC) + PRICE.P010CPRC) END AS CALCPRICE, PRICE.P010UOM, PRICE.P010SMPRC, PRICE.P010SHPRC, HSMF.F340CCODE, XDTL.L130DVAL"
    * * * Else
    * * * * G#35 DISTINCT
    * * * #LW3QSEL := "SELECT DISTINCT ATTR.*, PRICE.P010RPRC, PRICE.P010CPRC, PRICE.P010UOM, PRICE.P010SMPRC, PRICE.P010SHPRC, HSMF.F340CCODE, XDTL.L130DVAL"
    * * * Endif
    * * *
    * * * #LW3QSEL += " FROM LFIP100 ATTR JOIN " + #LW3ACTFIL + " PRICE ON ATTR.L00STYLE = PRICE.P010STYL AND ATTR.L00SIZE = PRICE.P010SIZE AND ATTR.L00BACK = PRICE.P010BACK"
    * * * *  #134
    * * * #LW3QSEL += " Left Join LFIP100A ATR2 ON ATR2.L0ADVBR = ATTR.L00DVBR And ATR2.L0APCAT = ATTR.L00PCAT And ATR2.L0ACNAME = ATTR.L00CNAME And ATR2.L0ASTYLE = ATTR.L00STYLE And ATR2.L0ACOLOR = ATTR.L00COLOR And ATR2.L0ASIZE = ATTR.L00SIZE And ATR2.L0ABACK = ATTR.L00BACK"
    * * *
    * * * * Added by Jan - 4th Nov 2022 - GitLab Issue #227
    * * * #LW3QSEL += " Left Join FIP340 HSMF On HSMF.F340STYL = ATTR.L00STYLE And HSMF.F340CLR = ATTR.L00COLOR And HSMF.F340SIZE = ATTR.L00SIZE And HSMF.F340BACK = ATTR.L00BACK"
    * * * * Added by Jan - 8th Nov 2022 - GitLab Issue #227
    * * * #LW3QSEL += " Left Join LFIP130 XDTL On XDTL.L130STYL = ATTR.L00STYLE And XDTL.L130CLR = ATTR.L00COLOR And XDTL.L130SIZE = ATTR.L00SIZE And XDTL.L130BACK = ATTR.L00BACK And XDTL.L130DTYP = 'TYPE OF FLOORING'"
    * * *
    * * * If Cond(#LW3CATID > 0)
    * * * #LW3QSEL += " Join LW3C04 As C04 On C04.LW3STYLE = ATTR.L00STYLE And C04.LW3COLOR = ATTR.L00COLOR And C04.LW3SIZE = ATTR.L00SIZE And C04.LW3BACK = ATTR.L00BACK And C04.LW3PRDTYP = ATTR.L00PTYP And C04.LW3PRDCAT = ATTR.L00PCAT"
    * * * Endif
    * * *
    * * * * G#131 - Add query to  join the Lux Vinyl Subtype file
    * * * #COM_OWNER.umJoinSubCategoryFiles( #LW3QSEL )
    * * *
    * * * * G#35
    * * * * #LW3QSEL += " WHERE PRICE.P010SID# = 0 AND PRICE.P010CST# = " + #FXCUSID.Trim + " AND PRICE.P010CPRC > 0 "
    * * * #LW3QSEL += " WHERE PRICE.P010SID# = 0 AND PRICE.P010CST# = " + #FXCUSID.Trim
    * * *
    * * * If Cond(#LW3CATID > 0)
    * * * #LW3QSEL += " And C04.LW3CATID = " + #LW3CATID.asString + " And C04.LW3SFID = " + #FXSFID.asstring
    * * * Endif
    * * *
    * * * * Only Select Dropped Products
    * * * If Cond(#FXDROPFLG = 'Y')
    * * * #LW3QSEL += " " + #COM_OWNER.umAttachFiltersToQuery( True ) + #COM_OWNER.umCheckProprietary + " AND ATTR.L00DROP = 'Y'"
    * * * Else
    * * * * #LW3QSEL += " " + #COM_OWNER.umAttachFiltersToQuery + #COM_OWNER.umCheckProprietary
    * * * #LW3QSEL += " " + #COM_OWNER.umAttachFiltersToQuery( (#LW3CATID > 0) ) + #COM_OWNER.umCheckProprietary
    * * * Endif
    * * *
    * * * #LW3QSEL += #COM_OWNER.umApplyUrlFilterToQuery( #FXURLFLT )
    * * *
    * * * * Debug messages for query
    * * * * #Utility.umSQLDebugMessage Iheadermessage('Product List - B2B') Iquerystring(#LW3QSEL)
    * * *
    * * * Select_Sql Fields(#L00DVBR #L00PCAT #L00CNAME #L00STYLE #L00COLOR #L00SIZE #L00BACK #L00PTYP #L00SDESC #L00CDESC #L00WTHFT #L00WTHIN #L00BDESC #L00STDLTH #L00PRDG #L00F2F #L00DROP #L00DROPDT #L00PROPRI #L00PROPCU #L00PROPB2 #L00CLR1 #L00CLR2 #L00PATRNR #L00CONSTR #L00LOOK #L00USAGE #L00FIBER1 #L00FIBER2 #L00FIBER3 #L00PATERN #L00PAT001 #L00FIBRLB #L00CPYRGT #L00MXWTHF #L00MXWTHI #L00SKUSEQ #L00INTROD #L00IMGFLA #L00IMGPRO #L00RMSCEN #L00RMS001 #L00RMS002 #L00IMGGRO #L00FLATCL #L00FLATRN #L00PROFCL #L00PROFRN #L00RM1CLR #L00RM1RNK #L00RM2CLR #L00RM2RNK #L00RM3CLR #L00RM3RNK #L00GROPCL #L00GROPRN #L00ROLONL #L00RPC #L00PATPRD #L00CHAR1 #L00CHAR2 #L00CHAR3 #L00CHAR4 #L00CHAR5 #L00FLAG1 #L00FLAG2 #L00FLAG3 #L00FLAG4 #L00FLAG5 #L00INT1 #L00INT2 #L00INT3 #L00INT4 #L00INT5 #L00DEC1 #L00DEC2 #L00DEC3 #L00DEC4 #L00DEC5 #L00COLCD #L00ROOMTY #L00ROO001 #L00ROO002 #L00WDTIN #L00LTHIN #P010RPRC #P010CPRC #P010UOM #P010SMPRC #P010SHPRC #F340CCODE #LW3TYPFLR) Io_Error(*NEXT) Using(#LW3QSEL)
    * * *
    * * * * G#35 - If Price range was changed, use the Pricing API to compare if the record is within range.
    * * *
    * * * If Cond(*Not (((#W_PRICERANGELOW = 0) And (#W_PRICERANGEHIGH = 0)) Or ((#W_PRICERANGEMIN = #W_PRICERANGELOW) And (#W_PRICERANGEMAX = #W_PRICERANGEHIGH))))
    * * * If Cond((#P010CPRC = 0) And (#P010RPRC = 0) And (#P010SMPRC = 0) And (#P010SHPRC = 0))
    * * * * Run API then compare prices, previous pricing file should be empty by this point
    * * * #Utility_API.umGetPrice( #LW3WEBC01 #L00STYLE #L00COLOR #L00SIZE #L00BACK 'Y' #P010CPRC #P010RPRC #P010SMPRC #P010SHPRC #OPPEDATE #OPPAPLY #LW3CUSIND False )
    * * * Endif
    * * *
    * * * * Apply Markup so we can properly compare
    * * * * #MarkupUtility.umApplyMarkup Iretailpricingflag(#LW3MSRPPF) Imarkupapplicationtype('PRODUCTTYPE') Iorderlinetype('') Iproducttype(#L00PTYP) Imarkupcarpet(#LW3MSRPCP) Imarkuppremaderug(#LW3MSRPPR) Imarkupcarpettile(#LW3MSRPTL) Imarkuphardsurface(#LW3MSRPHS) Bcalculatedprice(#P010CPRC)
    * * *
    * * * * Continue if price from API is within range
    * * * Continue If(*Not ((#W_PRICERANGELOW <= #P010CPRC) And (#P010CPRC <= #W_PRICERANGEHIGH)))
    * * *
    * * * Endif
    * * *
    * * * Add_Entry To_List(#WL_PRDLST)
    * * * Endselect
    * * *
    * * * * Price query does not apply if Decorative Water filter is selected
    * * * Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = 'BRAND') And (#LW3FLTVAL = 'SHS'))
    * * * If_Status Is(*OKAY)
    * * * #FXSRNPRC #FXERNPRC := 0
    * * * Else
    * * * * G#28 only look for the Min-Max if they are still blanks
    * * * If Cond((#W_PRICERANGEMIN = 0) And (#W_PRICERANGEMAX = 0))
    * * * * If Cond(((#W_PRICERANGEMIN = 0) And (#W_PRICERANGEMAX = 0)) Or ((#W_PRICERANGEMIN = 0) And (#W_PRICERANGEMAX = 9999)))
    * * * * Get Minimum/Maximum Price for Query
    * * * * G#35 DISTINCT
    * * * #LW3QSEL := "SELECT DISTINCT MIN(PRICE.P010CPRC), MAX(PRICE.P010CPRC) FROM LFIP100 ATTR JOIN " + #LW3ACTFIL + " PRICE ON ATTR.L00STYLE = PRICE.P010STYL AND ATTR.L00SIZE = PRICE.P010SIZE AND ATTR.L00BACK = PRICE.P010BACK "
    * * *
    * * * * Added by Jan - 4th Nov 2022 - GitLab Issue #227
    * * * #LW3QSEL += " Left Join FIP340 HSMF On HSMF.F340STYL = ATTR.L00STYLE And HSMF.F340CLR = ATTR.L00COLOR And HSMF.F340SIZE = ATTR.L00SIZE And HSMF.F340BACK = ATTR.L00BACK"
    * * * * Added by Jan - 8th Nov 2022 - GitLab Issue #227
    * * * #LW3QSEL += " Left Join LFIP130 XDTL On XDTL.L130STYL = ATTR.L00STYLE And XDTL.L130CLR = ATTR.L00COLOR And XDTL.L130SIZE = ATTR.L00SIZE And XDTL.L130BACK = ATTR.L00BACK And XDTL.L130DTYP = 'TYPE OF FLOORING'"
    * * *
    * * * * G#131 - Add query to  join the Lux Vinyl Subtype file
    * * * #COM_OWNER.umJoinSubCategoryFiles( #LW3QSEL )
    * * *
    * * * * G#35
    * * * * #LW3QSEL += " WHERE PRICE.P010SID# = 0 AND PRICE.P010CST# = " + #FXCUSID.Trim + " AND PRICE.P010CPRC > 0 " + #COM_OWNER.umAttachFiltersToQuery + #COM_OWNER.umCheckProprietary
    * * * #LW3QSEL += " WHERE PRICE.P010SID# = 0 AND PRICE.P010CST# = " + #FXCUSID.Trim + #COM_OWNER.umAttachFiltersToQuery + #COM_OWNER.umCheckProprietary
    * * *
    * * * * Only Select Dropped Products
    * * * If Cond(#FXDROPFLG = 'Y')
    * * * #LW3QSEL += " AND ATTR.L00DROP = 'Y'"
    * * * Endif
    * * *
    * * * #LW3QSEL += #COM_OWNER.umApplyUrlFilterToQuery( #FXURLFLT )
    * * *
    * * * * * !NC!
    * * * * #COM_OWNER.umSQLDebugMessage Iheadermessage('Product List - Price Range - B2B') Iquerystring(#LW3QSEL)
    * * *
    * * * Select_Sql Fields(#FXSRNPRC #FXERNPRC) Io_Error(*NEXT) Using(#LW3QSEL)
    * * * If Cond(#LW3MSRPPF = 'Y')
    * * * #FXSRNPRC := (#FXSRNPRC / 100) * #FXSRNPRC
    * * * #FXERNPRC := (#FXERNPRC / 100) * #FXERNPRC
    * * * Endif
    * * * Leave
    * * * Endselect
    * * * Endif
    * * *
    * * * Endif
    
    Else
    
    #LW3QSEL := "SELECT ATTR.*, HSMF.F340CCODE, XDTL.L130DVAL "
    * Need a placeholder field for the select fields to avoid an unrecoverable error
    If Cond(#L00PTYP = #Global_Constants.upPrdTyp_Bullnose)
    #LW3QSEL += ", ' ' "
    Else
    #LW3QSEL += ", COORD.F351STYL "
    Endif
    #LW3QSEL += " FROM LFIP100 AS ATTR"
    
    *  #134
    #LW3QSEL += " Left Join LFIP100A ATR2 ON ATR2.L0ADVBR = ATTR.L00DVBR And ATR2.L0APCAT = ATTR.L00PCAT And ATR2.L0ACNAME = ATTR.L00CNAME And ATR2.L0ASTYLE = ATTR.L00STYLE And ATR2.L0ACOLOR = ATTR.L00COLOR And ATR2.L0ASIZE = ATTR.L00SIZE And ATR2.L0ABACK = ATTR.L00BACK"
    
    * Added by Jan - 4th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join FIP340 HSMF On HSMF.F340STYL = ATTR.L00STYLE And HSMF.F340CLR = ATTR.L00COLOR And HSMF.F340SIZE = ATTR.L00SIZE And HSMF.F340BACK = ATTR.L00BACK"
    * Added by Jan - 8th Nov 2022 - GitLab Issue #227
    #LW3QSEL += " Left Join LFIP130 XDTL On XDTL.L130STYL = ATTR.L00STYLE And XDTL.L130CLR = ATTR.L00COLOR And XDTL.L130SIZE = ATTR.L00SIZE And XDTL.L130BACK = ATTR.L00BACK And XDTL.L130DTYP = 'TYPE OF FLOORING'"
    
    
    If Cond(#LW3CATID > 0)
    #LW3QSEL += " Join LW3C04 As C04 On C04.LW3STYLE = ATTR.L00STYLE And C04.LW3COLOR = ATTR.L00COLOR And C04.LW3SIZE = ATTR.L00SIZE And C04.LW3BACK = ATTR.L00BACK And C04.LW3PRDTYP = ATTR.L00PTYP And C04.LW3PRDCAT = ATTR.L00PCAT"
    Endif
    
    * G#131 - Add query to  join the Lux Vinyl Subtype file
    #COM_OWNER.umJoinSubCategoryFiles Isearchtype(#iSearchType) Bquery(#LW3QSEL)
    
    * * G#164 - Left Join with FIP351 to determine the Tile Style value
    If Cond(#L00PTYP <> #Global_Constants.upPrdTyp_Bullnose)
    #LW3QSEL += " LEFT JOIN FIP351 as COORD ON ATTR.L00STYLE = COORD.F351MSTYL AND ATTR.L00COLOR = COORD.F351MCLR "
    Endif
    
    #LW3QSEL += " WHERE ATTR.L00FLAG4 = 'I' AND ATTR.L00PTYP <> 'W' " + #COM_OWNER.umAttachFiltersToQuery( (#LW3CATID > 0) #iRequestObject ) + #Processor_Products.umCheckProprietary
    
    If Cond(#LW3CATID > 0)
    #LW3QSEL += " And C04.LW3CATID = " + #LW3CATID.asString
    Endif
    
    * Only Select Dropped Products
    If Cond(#iDroppedFlag = 'Y')
    #LW3QSEL += " AND ATTR.L00DROP = 'Y'"
    Else
    #LW3QSEL += " AND ATTR.L00DROP <> 'Y'"
    Endif
    
    #LW3QSEL += #Processor_Products.umApplyUrlFilterToQuery( #iSearchType )
    
    Selectlist Named(#WL_SRCATTRLST)
    #Utility_General.umDebugLog Iobjectname('CNSPROD') Idebugtext('WL_SRCATTRLST - ' + #LW3FLTNAM + ' - ' + #LW3FLTVAL)
    Endselect
    
    #Utility_General.umDebugLog Iobjectname('CNSPROD') Idebugtext('Product List Query B2C')
    #STD_COUNT := 1
    Dountil Cond(#STD_COUNT >= #LW3QSEL.CurChars)
    #LW3MSGTXT := #LW3QSEL.SubString( #STD_COUNT 80 )
    #Utility_General.umDebugLog Iobjectname('CNSPROD') Idebugtext(#LW3MSGTXT)
    #STD_COUNT += 80
    Enduntil
    
    * G#164 - Added #L01STYLE
    Select_Sql Fields(#L00DVBR #L00PCAT #L00CNAME #L00STYLE #L00COLOR #L00SIZE #L00BACK #L00PTYP #L00SDESC #L00CDESC #L00WTHFT #L00WTHIN #L00BDESC #L00STDLTH #L00PRDG #L00F2F #L00DROP #L00DROPDT #L00PROPRI #L00PROPCU #L00PROPB2 #L00CLR1 #L00CLR2 #L00PATRNR #L00CONSTR #L00LOOK #L00USAGE #L00FIBER1 #L00FIBER2 #L00FIBER3 #L00PATERN #L00PAT001 #L00FIBRLB #L00CPYRGT #L00MXWTHF #L00MXWTHI #L00SKUSEQ #L00INTROD #L00IMGFLA #L00IMGPRO #L00RMSCEN #L00RMS001 #L00RMS002 #L00IMGGRO #L00FLATCL #L00FLATRN #L00PROFCL #L00PROFRN #L00RM1CLR #L00RM1RNK #L00RM2CLR #L00RM2RNK #L00RM3CLR #L00RM3RNK #L00GROPCL #L00GROPRN #L00ROLONL #L00RPC #L00PATPRD #L00CHAR1 #L00CHAR2 #L00CHAR3 #L00CHAR4 #L00CHAR5 #L00FLAG1 #L00FLAG2 #L00FLAG3 #L00FLAG4 #L00FLAG5 #L00INT1 #L00INT2 #L00INT3 #L00INT4 #L00INT5 #L00DEC1 #L00DEC2 #L00DEC3 #L00DEC4 #L00DEC5 #L00COLCD #L00ROOMTY #L00ROO001 #L00ROO002 #L00WDTIN #L00LTHIN #F340CCODE #LW3TYPFLR #L01STYLE) Io_Error(*NEXT) Using(#LW3QSEL)
    * G#164 - Check Style and Tile Style values if we need to not show this in B2C
    If Cond((#L00PTYP = #Global_Constants.upPrdTyp_Porcelain) Or (#L00PTYP = #Global_Constants.upPrdTyp_GlassMosaic) Or (#L00PTYP = #Global_Constants.upPrdTyp_Bullnose))
    Continue If(#Processor_Products.umShouldWeHideInB2BOtherStyles( #L00STYLE ))
    Else
    Continue If((#Processor_Products.umShouldWeHideInB2B( #L00STYLE ) Or #Processor_Products.umShouldWeHideInB2B( #L01STYLE )))
    Endif
    
    #COM_OWNER.umAddHoverImages Iproducttype(#L00PTYP) Iimagegroupshot(#L00IMGGRO) Bimageflatshot(#L00IMGFLA) Broomsceneimage(#L00RMSCEN) Ohoverimage(#L_HoverImage)
    
    Add_Entry To_List(#iResponseProducts)
    #iResponseProducts.CurrentItem.hoverImage := #L_HoverImage
    
    Endselect
    
    Endif
    
    * check value of field #LW3CRDVIS
    If Cond(#LW3CRDVIS *EQ 'Y')
    #F55UPRICE #F55UPRCCA #P010SHPRC #P010SMPRC #P010CPRC #P010RPRC := 0
    Endif
    
    * * * * G#28 - If Min and Max values are blanks, Get the System Setting value
    * * * If Cond((#W_PRICERANGEMIN = 0) And (#W_PRICERANGEMAX = 0))
    * * * #Utility_SystemSettings.uGetValue Uikey('CE_FILTER_MAX_PRICE') Uonumericvalue(#W_PRICERANGEMAX)
    * * * #Utility_SystemSettings.uGetValue Uikey('CE_FILTER_MIN_PRICE') Uonumericvalue(#W_PRICERANGEMIN)
    * * * Endif
    * * *
    * * * Exchange Fields(#W_PRICERANGEMIN #W_PRICERANGEMAX #W_PRICERANGELOW #W_PRICERANGEHIGH)
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umAddHoverImages
    * Description....: Add Hover Images
    * =======================================================
    Mthroutine Name(umAddHoverImages) Desc('Add Hover Images')
    
    Define_Map For(*INPUT) Class(#L00PTYP) Name(#iProductType)
    Define_Map For(*INPUT) Class(#L00IMGGRO) Name(#iImageGroupShot)
    Define_Map For(*BOTH) Class(#L00IMGFLA) Name(#bImageFlatShot)
    Define_Map For(*BOTH) Class(#L00RMSCEN) Name(#bRoomSceneImage)
    Define_Map For(*OUTPUT) Class(#PRIM_ALPH) Name(#oHoverImage)
    
    * #134
    * Modified by Jan - 4th Nov 2022 - GitLab Issue #227
    If Cond((#iProductType <> #Global_Constants.upPrdTyp_Trim) And (#iProductType <> #Global_Constants.upPrdTyp_Bullnose))
    If Cond(#L00RMSCEN <> *BLANKS)
    #oHoverImage := #bRoomSceneImage
    * * * #Utility.umResizeImageDimensions Bimageurl(#iRoomSceneImage) Isyssetvar('IMAGE_URI_REPLACE1') Iheight(280)
    Else
    If Cond(#L00IMGGRO <> *BLANKS)
    #oHoverImage := #iImageGroupShot
    Endif
    Endif
    
    * * * If Cond(#oHoverImage <> *BLANKS)
    * * * #Utility.umResizeImageDimensions Bimageurl(#oHoverImage) Isyssetvar('IMAGE_URI_REPLACE1') Iheight(280)
    * * * Endif
    Endif
    
    * * * If Cond(#bImageFlatShot <> *BLANKS)
    * * * #Utility.umResizeImageDimensions Bimageurl(#L00IMGFLA) Isyssetvar('IMAGE_URI_REPLACE1') Iheight(280)
    * * * Endif
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umAttachFiltersToQuery
    * Description....: Attach Filters to Query
    * =======================================================
    Mthroutine Name(umAttachFiltersToQuery) Desc('Attach Filters to Query') Help('Attach Filters to Query')
    
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#iExcludeSKUSequence) Mandatory(False) Desc('Exclude SKU Sequence') Help('Set this to True if the SKU sequence should not be a part of the query')
    Define_Map For(*INPUT) Class(#COM_Home.PostProducts.Request.ContentJson.Object) Name(#iRequestObject) Pass(*BY_REFERENCE)
    Define_Map For(*RESULT) Class(#PRIM_ALPH) Name(#rString)
    
    Define_Com Class(#PRIM_ALPH) Name(#L_IndoorOutdoorUsage) Help('Use this to identify if the usage type selected is Indoor/Outdoor')
    Define_Com Class(#PRIM_BOLN) Name(#L_IsCommercialFilterApplied)
    
    Define_Com Class(#PRIM_NMBR) Name(#L_LoopCount) Desc('Loop Counter')
    
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00PATERN1' #Utility_Codes.umGetCodeDescriptionByCode( 'STPTTP' '#' ) #rString )
    
    * Color
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00CLR1' #Utility_Codes.umGetCodeDescriptionByCode( 'COLOR' '#' ) #rString )
    
    * Look and Feel
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00LOOK' #Utility_Codes.umGetCodeDescriptionByCode( 'STLFTP' '#' ) #rString )
    
    * Usage
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00USAGE' #Utility_Codes.umGetCodeDescriptionByCode( 'USAGE' '#' ) #rString #L_IndoorOutdoorUsage )
    
    * Collection
    #rString += #COM_OWNER.umSingleFilterValues( 'ATTR.L00CNAME' #Utility_Codes.umGetCodeDescriptionByCode( 'COLLEC' '#' ) #rString )
    * Fiber Type
    If Cond(#L_IndoorOutdoorUsage = 'Y')
    #rString += #COM_OWNER.umSingleFilterValues( 'ATTR.L00FIBER1' #Utility_Codes.umGetCodeDescriptionByCode( 'FIBTYP' '#' ) #rString True True )
    Else
    #rString += #COM_OWNER.umSingleFilterValues( 'ATTR.L00FIBER1' #Utility_Codes.umGetCodeDescriptionByCode( 'FIBTYP' '#' ) #rString False True )
    Endif
    * Construction
    #rString += #COM_OWNER.umSingleFilterValues( 'ATTR.L00CONSTR' #Utility_Codes.umGetCodeDescriptionByCode( 'CONSTR' '#' ) #rString )
    * Brand
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00DVBR' #Utility_Codes.umGetCodeDescriptionByCode( 'BRAND' '#' ) #rString )
    #rString += #COM_OWNER.umSingleFilterValues( 'ATTR.L00WTHFT' #Utility_Codes.umGetCodeDescriptionByCode( 'CERPWT' '#' ) #rString False False True )
    
    * G#42 - New search for Hard Surface Width
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00SIZE' #Utility_Codes.umGetCodeDescriptionByCode( 'HDSUWT' '#' ) #rString )
    
    * Room Type
    Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM = #Utility_Codes.umGetCodeDescriptionByCode( 'ROOMTP' '#' )) And (#LW3FLTVAL <> *BLANKS))
    If_Status Is(*OKAY)
    If Cond(#rString <> *BLANKS)
    #rString += " AND "
    Endif
    #rString += " ((UPPER(ATTR.L00ROOMTY1) = '" + #LW3FLTVAL.UpperCase + "') OR (UPPER(ATTR.L00ROOMTY2) = '" + #LW3FLTVAL.UpperCase + "') OR (UPPER(ATTR.L00ROOMTY3) = '" + #LW3FLTVAL.UpperCase + "'))"
    Endif
    
    * * * * Price - Only For B2B
    * * * If Cond((#FXCUSIND = 'B') And (#FXERNPRC <> 0) And (#FXNEWPRDF <> 'Y'))
    * * * If Cond(#rString <> *BLANKS)
    * * * #rString += " AND "
    * * * Endif
    * * * If Cond(#FXPRDRTP = 'PRM')
    * * * * Check if displaying Canadian Rates
    * * * If Cond(#C1PFG0 = 'Y')
    * * * #rString += " SKU.F55UPRCCAN BETWEEN " + #FXSRNPRC.asString + " AND " + #FXERNPRC.asString
    * * * Else
    * * * #rString += " SKU.F55UPRICE BETWEEN " + #FXSRNPRC.asString + " AND " + #FXERNPRC.asString
    * * * Endif
    * * * Else
    * * * If Cond(#LW3MSRPPF = 'Y')
    * * * #rString += " CASE ATTR.L00PTYP WHEN 'R' THEN ((CAST(" + #LW3MSRPPR.asString + "/100 AS NUMERIC(36,2)) * PRICE.P010CPRC) + PRICE.P010CPRC) ELSE ((CAST(" + #LW3MSRPCP.asString + "/100 AS NUMERIC(36,2)) * PRICE.P010CPRC) + PRICE.P010CPRC) END BETWEEN " + #FXSRNPRC.asString + " AND " + #FXERNPRC.asString
    * * * Else
    * * * #rString += " PRICE.P010CPRC BETWEEN " + #FXSRNPRC.asString + " AND " + #FXERNPRC.asString
    * * * Endif
    * * * Endif
    * * * Endif
    
    If Cond(#rString <> *BLANKS)
    #rString := " AND (" + #rString + ")"
    Endif
    
    * * * * Length - Only For B2B
    * * * If Cond((#FXCUSIND = 'B') And (#FXERNLTH <> *BLANK))
    * * * * Parse length filter string to feet and inches
    * * * #COM_OWNER.umparseLengthFilter Ilength(#FXSRNLTH) Ofeet(#MINLTHFT)
    * * * #COM_OWNER.umparseLengthFilter Ilength(#FXERNLTH) Ofeet(#MAXLTHFT)
    * * *
    * * * If Cond(#rString <> *BLANKS)
    * * * #rString += " AND "
    * * * Endif
    * * * If Cond(#FXPRDRTP = 'PRM')
    * * * #rString += " (SKU.F55LTHF BETWEEN " + #MINLTHFT.asstring + " AND " + #MAXLTHFT.asString + ")"
    * * * Endif
    * * * Endif
    
    If Cond(*Not #iExcludeSKUSequence)
    Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM = #Utility_Codes.umGetCodeDescriptionByCode( 'COLOR' '#' )) And (#LW3FLTVAL <> *BLANKS)) Ret_Entry(*NO)
    If_Status Is_Not(*OKAY)
    #rString += " AND ATTR.L00SKUSEQ = 1"
    Endif
    Endif
    
    * * * * G#169 - Switch this flag on if at this point there the string is still blanks. After the flooring type filter is built, add an "AND" if this flag is on as it will cause a syntax error without it
    * * * #L_IsBlankString := (#rString = '')
    * * *
    * * * * Check if Flooring Type is part of the filters selected
    * * * Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ).UpperCase))
    * * * If_Status Is(*OKAY)
    * * *
    * * * * Check if "COMMERCIAL" is selected as a Flooring Type filter
    * * * Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ).UpperCase) And (#LW3FLTVAL.UpperCase = 'COMMERCIAL'))
    * * * If_Status Is(*OKAY)
    * * * #L_CommercialFilterQueryString := "(ATTR.L00PTYP In ('C', 'P', 'T') And ATTR.L00USAGE = 'COMMERCIAL')"
    * * * Endif
    * * *
    * * * * Check other Flooring Types other than "COMMERCIAL"
    * * * #L_FlooringTypeQueryString := *BLANKS
    * * * Selectlist Named(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ).UpperCase) And (#LW3FLTVAL.UpperCase <> 'COMMERCIAL'))
    * * * If Cond(#L_FlooringTypeQueryString = *BLANKS)
    * * * #L_FlooringTypeQueryString := " And (ATTR.L00PTYP In ('" + #LW3FLTVAL.UpperCase + "'"
    * * * Else
    * * * #L_FlooringTypeQueryString += ", '" + #LW3FLTVAL.UpperCase + "'"
    * * * Endif
    * * *
    * * * Endselect
    * * * If Cond(#L_FlooringTypeQueryString <> *BLANKS)
    * * * #L_FlooringTypeQueryString += ")"
    * * * Endif
    * * *
    * * * Endif
    
    * !NC! - Change these flags and fields so they make more sense down the road
    Define Field(#w_BlankString) Type(*BOOLEAN)
    Define Field(#w_FirstRecord) Type(*BOOLEAN)
    Define Field(#w_PlusPosition) Reffld(#STD_COUNT)
    
    
    * If no Build Floor Type flag is on, use the umMultiFilterValues or build the condition with the Commercial flooring type in mind
    If_Ref Com(#iRequestObject.filters.floorings) Is_Not(*NULL)
    #L_IsCommercialFilterApplied := False
    Begin_Loop Using(#L_LoopCount) To(#iRequestObject.filters.floorings.Count)
    If Cond(#iRequestObject.filters.floorings<#L_LoopCount>.AsValue.UpperCase = 'COMMERCIAL')
    #L_IsCommercialFilterApplied := True
    Endif
    End_Loop
    
    If Cond(#L_IsCommercialFilterApplied)
    * Get all Non Commercial Flooring Types and build the condition, then add an OR and the Commercial condition
    #rString += " And (ATTR.L00PTYP In ("
    
    #w_FirstRecord := True
    Selectlist Named(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ).UpperCase) And (#LW3FLTVAL.UpperCase <> 'COMMERCIAL'))
    If Cond(#w_FirstRecord)
    #rString += "'" + #LW3FLTVAL.UpperCase + "'"
    #w_FirstRecord := False
    Else
    #rString += ",'" + #LW3FLTVAL.UpperCase + "'"
    Endif
    Endselect
    
    #rString += ") OR ((ATTR.L00PTYP In ('C', 'P', 'T') And ATTR.L00USAGE = 'COMMERCIAL')))"
    Else
    * * * * G#285 - If searching by F2K brand, build the proper condition based on the selected Flooring Type
    * * * If Cond(#W_BRAND = 'F2K')
    * * * #rString += " AND ("
    * * *
    * * * #w_FirstRecord := True
    * * * Selectlist Named(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' '#' ).UpperCase))
    * * * If Cond(#w_FirstRecord)
    * * * #w_FirstRecord := False
    * * * Else
    * * * #rString += " OR "
    * * * Endif
    * * *
    * * * Case Of_Field(#LW3FLTVAL)
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Porcelain)
    * * * #rString += #Global_Constants.upQuery_Filter_Porcelain_Bare
    * * *
    * * * When Value_Is(= #Global_Constants.upUrlFilter_Ceramic)
    * * * #rString += #Global_Constants.upQuery_Filter_Ceramic_Bare
    * * *
    * * * When Value_Is(= #Global_Constants.upUrlFilter_GlassMosaic)
    * * * #rString += #Global_Constants.upQuery_Filter_GlassMosaic_Bare
    * * *
    * * * When Value_Is(= #Global_Constants.upUrlFilter_RecycledGlass)
    * * * #rString += #Global_Constants.upQuery_Filter_RecycledGlass_Bare
    * * *
    * * * * Github #122 - 06/21/2024 - Add default condition for other product types
    * * * Otherwise
    * * * * G#131 - Need to know if Filter Value is a subtype and handle it if ever
    * * * #w_PlusPosition := #LW3FLTVAL.PositionOf( '+' )
    * * *
    * * * If Cond(#w_PlusPosition = 0)
    * * * #rString += " (ATTR.L00PTYP = '" + #LW3FLTVAL + "')"
    * * * Else
    * * * #rString += "(ATTR.L00PTYP = '" + #Global_Constants.upPrdTyp_HardSurfacePlank + "' And PSUBF.F54STYP = '" + #LW3FLTVAL.Substring( (#w_PlusPosition + 1) 1 ) + "')"
    * * * Endif
    * * * Endcase
    * * * Endselect
    * * *
    * * * #rString += " )"
    * * *
    * * * Else
    * G#131
    If Cond((#FXURLFLT = #Global_Constants.upUrlFilter_HardSurface) Or (#FXURLFLT = #Global_Constants.upSubType_WPC) Or (#FXURLFLT = #Global_Constants.upSubType_SPC))
    
    #w_FirstRecord := True
    Selectlist Named(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' '#' ).UpperCase) And (#LW3FLTVAL <> 'SHS'))
    
    If Cond(#w_FirstRecord)
    #w_FirstRecord := False
    #rString += " And PSUBF.F54STYP IN ("
    Else
    #rString += ", "
    Endif
    
    * Used this logic as the flooring codes were saved with an asterisk at the beginning
    * #rString += "'" + #LW3FLTVAL.RemoveAll( '*' ) + "'"
    
    #w_PlusPosition := #LW3FLTVAL.PositionOf( '+' )
    
    #rString += "'" + #LW3FLTVAL.Substring( (#w_PlusPosition + 1) 1 ) + "'"
    Endselect
    
    If Cond(*Not #w_FirstRecord)
    #rString += ")"
    Endif
    Else
    * G#147 - Add logic to add F2K products into the non F2K search like search/all. Excel issue #8
    If Cond(#COM_OWNER.umMultiFilterValues( 'ATTR.L00PTYP' #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ) #rString ) = '')
    #rString += " AND ("
    
    #w_FirstRecord := True
    Selectlist Named(#WL_SRCATTRLST) Where((#LW3FLTNAM.UpperCase = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPED' '#' ).UpperCase))
    If Cond(#w_FirstRecord)
    #w_FirstRecord := False
    Else
    #rString += " OR "
    Endif
    
    * F2K Filter values anre not compatible with L00PTYP so use the Query Filter from the global constant RP.
    Case Of_Field(#LW3FLTVAL)
    When Value_Is(= #Global_Constants.upUrlFilter_Porcelain)
    #rString += #Global_Constants.upQuery_Filter_Porcelain_Bare
    
    When Value_Is(= #Global_Constants.upUrlFilter_Ceramic)
    #rString += #Global_Constants.upQuery_Filter_Ceramic_Bare
    
    When Value_Is(= #Global_Constants.upUrlFilter_GlassMosaic)
    #rString += #Global_Constants.upQuery_Filter_GlassMosaic_Bare
    
    When Value_Is(= #Global_Constants.upUrlFilter_RecycledGlass)
    #rString += #Global_Constants.upQuery_Filter_RecycledGlass_Bare
    
    When Value_Is(= #Global_Constants.upUrlFilter_Bullnose)
    #rString += " (ATTR.L00PTYP = '" + #Global_Constants.upPrdTyp_Bullnose + "')"
    
    Otherwise
    #w_PlusPosition := #LW3FLTVAL.PositionOf( '+' )
    
    * Use the Filter value if there is no + found. But if it is found, use the subtype filter.
    If Cond(#w_PlusPosition = 0)
    #rString += " (ATTR.L00PTYP = '" + #LW3FLTVAL + "')"
    Else
    #rString += "(ATTR.L00PTYP = '" + #Global_Constants.upPrdTyp_HardSurfacePlank + "' And PSUBF.F54STYP = '" + #LW3FLTVAL.Substring( (#w_PlusPosition + 1) 1 ) + "')"
    Endif
    Endcase
    Endselect
    
    #rString += " )"
    
    Else
    #rString += #COM_OWNER.umMultiFilterValues( 'ATTR.L00PTYP' #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' ) #rString )
    
    * G#169 - If the string is previously blanks before the Flooring type is built, add an AND before the condition
    If Cond(#w_BlankString And (#rString <> ''))
    #rString := " AND " + #rString
    Endif
    Endif
    Endif
    * * * Endif
    
    Endif
    Else
    * If only the Commercial Flooring Type is selected, use the condition below
    If Cond(#L_IsCommercialFilterApplied)
    #rString += " And (ATTR.L00PTYP In ('C', 'P', 'T') And ATTR.L00USAGE = 'COMMERCIAL')"
    Endif
    Endif
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umSingleFilterValues
    * Description....: Build the query string for single filter values
    * =======================================================
    Mthroutine Name(umSingleFilterValues) Desc('Signle Filter Values') Help('Build the query string for single filter values') Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iFieldInFile)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iFilterName)
    Define_Map For(*INPUT) Class(#CNTDTA) Name(#iQuery)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#isIndoorOutdoor) Mandatory(False) Help('Use this to determine if Usage is set as Indoor/Outdoor')
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#isFiberType) Mandatory(False) Help('Use this to determine if the filter is for Fiber Type')
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#isCarpetWidth) Mandatory(False) Help('Use this to determine if the filter is for Carpet Width')
    Define_Map For(*RESULT) Class(#PRIM_ALPH) Name(#rString)
    
    Define_Com Class(#CNTDTA) Name(#uTempString)
    Define_Com Class(#PRIM_ALPH) Name(#CRPTWTIN)
    
    Loc_Entry In_List(#WL_SRCATTRLST) Where((#LW3FLTNAM = #iFilterName) And (#LW3FLTVAL <> *BLANKS))
    If_Status Is(*OKAY)
    * For Fiber Type, search with 2 fields (L00FIBER1 and L00FIBER2)
    If Cond(#isFiberType)
    #rString += " ((UPPER(L00FIBER1) = '" + #LW3FLTVAL.UpperCase + "') OR (UPPER(L00FIBER2) = '" + #LW3FLTVAL.UpperCase + "'))"
    * #COM_OWNER.umSQLDebugMessage Iheadermessage('Fiber Query') Iquerystring(#rString)
    Endif
    
    * For Carpet Width, parse feet and inches from filter value
    If Cond(#isCarpetWidth)
    If Cond(#LW3FLTVAL.Contains( 'X' ))
    #L00WTHFT := #LW3FLTVAL.Substring( 1, (#LW3FLTVAL.PositionOf( 'X' ) - 1) ).AsNumber
    #CRPTWTIN := #LW3FLTVAL.Substring( (#LW3FLTVAL.PositionOf( 'X' ) + 1), #LW3FLTVAL.CurSize )
    #CRPTWTIN := #CRPTWTIN.Trim()
    #CRPTWTIN := #CRPTWTIN.Substring( 1, (#CRPTWTIN.CurSize - 1) )
    #L00WTHIN := #CRPTWTIN.AsNumber
    
    #rString += " L00WTHFT = " + #L00WTHFT.asstring + " AND L00WTHIN = " + #L00WTHIN.asstring
    Else
    #L00WTHFT := #LW3FLTVAL.Substring( 1, (#LW3FLTVAL.CurSize - 1) ).AsNumber
    #rString += " L00WTHFT = " + #L00WTHFT.asstring
    Endif
    Endif
    
    If Cond((*Not #isFiberType) *And (*Not #isCarpetWidth))
    #rString += " UPPER(" + #iFieldInFile + ") = '" + #LW3FLTVAL.UpperCase + "'"
    Endif
    Endif
    
    * If Usage is Indoor/Outdoor, include it as a query done on Fiber Type
    If Cond(#isIndoorOutdoor)
    If Cond(#rString <> *BLANKS)
    #rString := "(" + #rString + " OR " + " UPPER(" + #iFieldInFile + ") = 'UV STABILIZED ROYALTRON| POLYPROPYLENE')"
    Else
    #rString := " UPPER(" + #iFieldInFile + ") = 'UV STABILIZED ROYALTRON| POLYPROPYLENE'"
    Endif
    Endif
    
    If Cond((#iQuery <> *BLANKS) And (#rString <> *BLANKS))
    If Cond(#iQuery <> *BLANKS)
    #rString := " AND" + #rString
    Endif
    Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umMultiFilterValues
    * Description....: Build the query string for multiple filter values
    * =======================================================
    Mthroutine Name(umMultiFilterValues) Desc('Multi Filter Values') Help('Build the query string for multiple filter values') Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iFieldInFile)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#iFilterName)
    Define_Map For(*INPUT) Class(#CNTDTA) Name(#iQuery)
    Define_Map For(*RESULT) Class(#PRIM_ALPH) Name(#rString)
    Define_Map For(*OUTPUT) Class(#PRIM_ALPH) Name(#oIsIndoorOutdoor) Mandatory(*NO)
    
    * Github #122 - 06/21/2024 - New flag for when SHS is a selected filter
    Define_Com Class(#PRIM_BOLN) Name(#L_Brand_SHS_Selected)
    
    Define_Com Class(#CNTDTA) Name(#uTempString)
    
    * !NC! - Change these fields to something more sensible down the road
    Define Field(#wBrandSHSFound) Type(*BOOLEAN) Desc('Turn on if Brand SHS was found')
    Define Field(#wBrandOnly) Type(*BOOLEAN) Desc('Turn on if Brand SHS was found')
    
    * G#217 - Initialize the Brand SHS flag as False
    #wBrandSHSFound #L_Brand_SHS_Selected := False
    #wBrandOnly := True
    
    #rString += " UPPER(" + #iFieldInFile + ") IN("
    Selectlist Named(#WL_SRCATTRLST) Where(#LW3FLTNAM.UpperCase = #iFilterName.UpperCase)
    
    * If filtering by Flooring Type, only add the filter if the code is a single character
    Continue If((#LW3FLTNAM = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' )) And (#LW3FLTVAL.CurChars > 1))
    
    If_Null Field(#uTempString)
    #uTempString := "'" + #LW3FLTVAL.UpperCase + "'"
    Else
    #uTempString += ", '" + #LW3FLTVAL.UpperCase + "'"
    Endif
    
    * If filtering by Swatch, include Product Type of 'W' as they are also Swatch Type Products
    If Cond((#LW3FLTNAM = #Utility_Codes.umGetCodeDescriptionByCode( 'FTYPDC' '#' )) And (#LW3FLTVAL.UpperCase = 'S'))
    #uTempString += ", 'W'"
    Endif
    * For the Usage filter, check if Indoor/Outdoor is included
    If Cond((#LW3FLTNAM = #Utility_Codes.umGetCodeDescriptionByCode( 'USAGE' '#' )) And (#LW3FLTVAL.UpperCase = 'INDOOR / OUTDOOR'))
    
    Endif
    
    * G#217 - If Brand search only, check if only the SHS brand is selected.
    If Cond((#iFilterName.UpperCase = 'BRAND'))
    If Cond(#LW3FLTVAL = 'SHS')
    * Github #122 - 06/21/2024 - Set new flag to be true. This is different from #wBrandSHSFound as this is only true when only "SHS" is the selected brand filter
    #wBrandSHSFound #L_Brand_SHS_Selected := True
    Endif
    Else
    #wBrandOnly := False
    Endif
    Endselect
    
    * If the Attribute was not included in the list, do not add it to the query
    If_Null Field(#uTempString)
    #rString := *BLANKS
    Else
    If Cond(#iQuery <> *BLANKS)
    #rString := " AND" + #rString
    Endif
    #rString += #uTempString + ")"
    Endif
    
    * G#217 - If Brand search and only SHS is selected, add a condition removing all L00PTYP = M records
    If Cond((#wBrandSHSFound = True) And (#wBrandOnly = True))
    #rString += " AND ATTR.L00PTYP <> 'M' "
    Endif
    
    * Github #122 - 06/21/2024 - If SHS is a selected brand filter, exclude Laminate products under that brand. If under the Laminate filter, do not apply this restriction and show all Laminates
    If Cond((#L_Brand_SHS_Selected) And (#FXURLFLT <> #Global_Constants.upUrlFilter_Laminate))
    #rString += " AND NOT(ATTR.L00DVBR = 'SHS' AND ATTR.L00PTYP = '" + #Global_Constants.upPrdTyp_Laminate + "')"
    Endif
    
    Endroutine
    
    * =======================================================
    * Mthroutine ....: umSetHttpResponseMessages
    * Description....: Set Http Response Messages
    * =======================================================
    Mthroutine Name(umSetHttpResponseMessages) Desc('Set Http Response Messages') Access(*PRIVATE)
    
    Define_Map For(*INPUT) Class(#LW3VARNAM) Name(#iVariableName)
    Define_Map For(*INPUT) Class(#LW3MSGTYP) Name(#iMessageType)
    Define_Map For(*INPUT) Class(#LW3FLDNAM) Name(#iFieldName) Mandatory('')
    Define_Map For(*INPUT) Class(#LW3VARUTX) Name(#iMessageDetails) Mandatory('')
    Define_Map For(*INPUT) Class(#LW3VARUTX) Name(#iSubstitutionVariable1) Mandatory('')
    Define_Map For(*INPUT) Class(#Com_Home.httpResponseArray) Name(#iArray_HttpResponse) Pass(*BY_REFERENCE)
    
    Add_Entry To_List(#iArray_HttpResponse)
    #iArray_HttpResponse.CurrentItem.code := #iVariableName
    #iArray_HttpResponse.CurrentItem.type := #iMessageType
    #iArray_HttpResponse.CurrentItem.message := #Utility_Multilinguals.umGetMultilingualText( #iVariableName #Global_DataModel.upCurrentLanguage )
    
    If Cond(#iFieldName <> *BLANKS)
    #iArray_HttpResponse.CurrentItem.field := #iFieldName
    Endif
    If Cond(#iMessageDetails <> *BLANKS)
    #iArray_HttpResponse.CurrentItem.detail := #iMessageDetails
    Endif
    If Cond(#iSubstitutionVariable1 <> *BLANKS)
    #iArray_HttpResponse.CurrentItem.substitutions.Add Value(#iSubstitutionVariable1)
    Endif
    
    Endroutine
    
    End_Com

  API Definition:
    Language Handling:       NoAction
    Partition Handling:      PathVariable
    Publish as Swagger V2:   Yes
    Publish as OpenAPI V3:   Yes
    ServicePath:             /CNSPROD

    Paths:
    - /products:

        Operations:
        - GetProductSearch:
            Verb:               Get
            Server Routine:     usGetProductSearch
            Deprecated:         No

            Parameters:
            - search:
                Location:           Query
                Style:              Default
                Required:           Yes
                Explode:            No
                Deprecated:         No
                Allow Reserved:     No
                Allow Empty Value:  No

                Schema Object:
                  Description:        Search Keyword
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            Request:
              Required:           No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Type:               Unspecified
                      Reference Name:     responseObject
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - Success (No Content):
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      NoContent

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Unauthorized:
                Status Code:        401

                Media Types:
                - application/json:
                    Media Type Id:      Resp401

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

        - PostProducts:
            Verb:               Post
            Server Routine:     usPostProducts
            Deprecated:         No

            Request:
              Description:        ProductsRequestJson
              Required:           No

              Media Types:
              - application/json:
                  Media Type Id:      ContentJson

                  Schema Object:
                    Description:        ProductsRequestJson
                    Type:               Object
                    Format:             Unspecified
                    Required:           No
                    Nullable:           No
                    ReadOnly:           No
                    WriteOnly:          No

                    Properties:
                    - type:
                        Description:        type
                        Type:               String
                        Format:             Unspecified
                        Required:           Yes
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

                    - new:
                        Description:        New Arrivals Flag
                        Type:               String
                        Format:             Unspecified
                        Required:           No
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

                    - dropped:
                        Description:        Dropped Products Flag
                        Type:               String
                        Format:             Unspecified
                        Required:           No
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

                    - filters:
                        Type:               Reference
                        Reference Name:     requestFilterObject
                        Format:             Unspecified
                        Required:           Yes
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Description:        Products Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - products:
                          Type:               Reference
                          Reference Name:     productsArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Success (No Content):
                Status Code:        200

            - Bad Request:
                Status Code:        401

    - /category/{category}:

        Operations:
        - GetCategory:
            Verb:               Get
            Server Routine:     usPostProducts
            Deprecated:         No

            Parameters:
            - category:
                Location:           Path
                Style:              Default
                Required:           Yes
                Explode:            No
                Deprecated:         No
                Allow Reserved:     No
                Allow Empty Value:  No

                Schema Object:
                  Description:        category
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            Request:
              Required:           No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Type:               Unspecified
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - Success (No Content):
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      NoContent

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Bad Request:
                Status Code:        401

                Media Types:
                - application/json:
                    Media Type Id:      Resp401

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

    - /products/suggestions:

        Operations:
        - GetProductSuggestions:
            Verb:               Get
            Server Routine:     usGetProdSuggestions
            Deprecated:         No

            Parameters:
            - search:
                Location:           Query
                Style:              Default
                Required:           No
                Explode:            No
                Deprecated:         No
                Allow Reserved:     No
                Allow Empty Value:  No

                Schema Object:
                  Description:        search
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            Request:
              Required:           No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Type:               Reference
                      Reference Name:     suggestionResponseObject
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - Success (No Content):
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      NoContent

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Bad Request:
                Status Code:        401

                Media Types:
                - application/json:
                    Media Type Id:      Resp401

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

    - /product/{itemcode}:

        Operations:
        - GetProductDetails:
            Verb:               Get
            Server Routine:     usGetProductDetails
            Deprecated:         No

            Parameters:
            - itemcode:
                Location:           Path
                Style:              Default
                Required:           Yes
                Explode:            No
                Deprecated:         No
                Allow Reserved:     No
                Allow Empty Value:  No

                Schema Object:
                  Description:        itemcode
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            Request:
              Required:           No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Type:               Reference
                      Reference Name:     productsObject
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - Success (No Content):
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      NoContent

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Unauthorized:
                Status Code:        401

                Media Types:
                - application/json:
                    Media Type Id:      Resp401

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

    - /filters:

        Parameters:
        - type:
            Description:        Search Type
            Location:           Query
            Style:              Default
            Required:           Yes
            Explode:            No
            Deprecated:         No
            Allow Reserved:     No
            Allow Empty Value:  No

            Schema Object:
              Description:        Search Type
              Type:               String
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - new:
            Location:           Query
            Style:              Default
            Required:           No
            Explode:            No
            Deprecated:         No
            Allow Reserved:     No
            Allow Empty Value:  No

            Schema Object:
              Description:        New Arrivals Flag
              Type:               String
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - dropped:
            Description:        Dropped Products Flag
            Location:           Query
            Style:              Default
            Required:           No
            Explode:            No
            Deprecated:         No
            Allow Reserved:     No
            Allow Empty Value:  No

            Schema Object:
              Description:        Dropped Products Flag
              Type:               String
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        Operations:
        - GetFacetedFilters:
            Verb:               Get
            Server Routine:     usGetFacetedFilters
            Deprecated:         No

            Request:
              Required:           No

            Responses:
            - Success:
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      ContentJson

                    Schema Object:
                      Description:        Filters Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - filters:
                          Type:               Reference
                          Reference Name:     responseFilterObject
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Success (No Content):
                Status Code:        200

                Media Types:
                - application/json:
                    Media Type Id:      NoContent

                    Schema Object:
                      Description:        Http Response Object
                      Type:               Object
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Properties:
                      - messages:
                          Type:               Reference
                          Reference Name:     httpResponseArray
                          Format:             Unspecified
                          Required:           Yes
                          Nullable:           No
                          ReadOnly:           No
                          WriteOnly:          No

            - Bad Request:
                Status Code:        401

    Components:
      Schema:
        Types:
        - productsObject:
            Description:        Products Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - brand:
                Description:        Brand
                Type:               Field
                Field Name:         L00DVBR
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - productCategory:
                Description:        Product Category
                Type:               Field
                Field Name:         L00PCAT
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - productType:
                Description:        Product Type
                Type:               Field
                Field Name:         L00PTYP
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - styleCode:
                Description:        Style Code
                Type:               Field
                Field Name:         L00STYLE
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - colorCode:
                Description:        Color Code
                Type:               Field
                Field Name:         L00COLOR
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - sizeCode:
                Description:        Size Code
                Type:               Field
                Field Name:         L00SIZE
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - backingCode:
                Description:        Backing Code
                Type:               Field
                Field Name:         L00BACK
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - styleDescription:
                Description:        Style Description
                Type:               Field
                Field Name:         L00SDESC
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - colorDescription:
                Description:        Color Description
                Type:               Field
                Field Name:         L00CDESC
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - imageFlatShot:
                Description:        Image Flat Shot
                Type:               Field
                Field Name:         L00IMGFLA
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - unitPrice:
                Description:        Unit Price
                Type:               Field
                Field Name:         F55UPRICE
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - dropDate:
                Description:        Drop Date
                Type:               String
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - roomSceneImage:
                Description:        Room Scene Image
                Type:               Field
                Field Name:         L00RMSCEN
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - hoverImage:
                Description:        Hover Image
                Type:               String
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

        - productsArray:
            Description:        Products Array
            Type:               Array
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Items:
            - Type:               Reference
              Reference Name:     productsObject
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - requestFilterObject:
            Description:        Filter Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - brands:
                Description:        Brands
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Brand Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - floorings:
                Description:        Flooring Type
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Flooring Type Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - patterns:
                Description:        Pattern Types
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Pattern Type Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - collections:
                Description:        Collections
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Collection Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - colors:
                Description:        Colors
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Color Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - usages:
                Description:        Usages
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Usage Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - looksfeels:
                Description:        Looks and Feels
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Look and Feel Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - fiberContents:
                Description:        Fiber Contents
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Fiber Content Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - primary:
                      Description:        Primary Fiber Content Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - secondaries:
                      Description:        Secondary Fibers
                      Type:               Array
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Items:
                      - Description:        Secondary Fiber Code
                        Type:               String
                        Format:             Unspecified
                        Required:           No
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

            - constructions:
                Description:        Constructions
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Construction Code
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - carpetWidths:
                Description:        Carpet Widths
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Carpet Width
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - dimensions:
                Description:        Dimensions
                Type:               Array
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        dimension
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

            - priceRange:
                Description:        Price Range
                Type:               Object
                Format:             Unspecified
                Required:           No
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Properties:
                - min:
                    Description:        Minimum Price
                    Type:               String
                    Format:             Unspecified
                    Required:           Yes
                    Nullable:           No
                    ReadOnly:           No
                    WriteOnly:          No

                - max:
                    Description:        Maximum Price
                    Type:               String
                    Format:             Unspecified
                    Required:           Yes
                    Nullable:           No
                    ReadOnly:           No
                    WriteOnly:          No

        - responseFilterObject:
            Description:        Response Filter Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - brands:
                Description:        Brands
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Brands Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - brand:
                      Description:        Brand Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Brand Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - floorings:
                Description:        Floorings
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Floorings Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - flooring:
                      Description:        Flooring Type Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Flooring Type Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - patterns:
                Description:        Pattern Types
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Pattern Types Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - pattern:
                      Description:        Pattern Type Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Pattern Type Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - collections:
                Description:        Collections
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Collections Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - collection:
                      Description:        Collection Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Collection Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - colors:
                Description:        Colors
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Colors Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - color:
                      Description:        Color Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Color Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - usages:
                Description:        Usages
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Usages Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - usage:
                      Description:        Usage Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Usage Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - looksfeels:
                Description:        Look and Feels
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Look and Feels Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - lookfeel:
                      Description:        Look and Feel Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Look and Feel Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - fiberContents:
                Description:        Fiber Contents
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Fiber Contents Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - primary:
                      Description:        Primary Fiber Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Primary Fiber Code Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - secondary:
                      Description:        Secondary Fiber Codes
                      Type:               Array
                      Format:             Unspecified
                      Required:           No
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                      Items:
                      - Description:        Secondary Fiber Codes Object
                        Type:               Object
                        Format:             Unspecified
                        Required:           No
                        Nullable:           No
                        ReadOnly:           No
                        WriteOnly:          No

                        Properties:
                        - select:
                            Description:        Filter Selected Flag
                            Type:               Boolean
                            Format:             Unspecified
                            Required:           Yes
                            Nullable:           No
                            ReadOnly:           No
                            WriteOnly:          No

                        - code:
                            Description:        Secondary Fiber Code
                            Type:               String
                            Format:             Unspecified
                            Required:           Yes
                            Nullable:           No
                            ReadOnly:           No
                            WriteOnly:          No

                        - description:
                            Description:        Secondary Fiber Code Description
                            Type:               String
                            Format:             Unspecified
                            Required:           Yes
                            Nullable:           No
                            ReadOnly:           No
                            WriteOnly:          No

            - constructions:
                Description:        Constructions
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Constructions Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - construction:
                      Description:        Construction Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Construction Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - carpetWidths:
                Description:        Carpet Widths
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Carpet Widths Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - carpetWidth:
                      Description:        Carpet Width Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Carpet Width Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

            - dimensions:
                Description:        Dimensions
                Type:               Array
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

                Items:
                - Description:        Dimensions Object
                  Type:               Object
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Properties:
                  - select:
                      Description:        Filter Selected Flag
                      Type:               Boolean
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - dimension:
                      Description:        Dimension Code
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

                  - description:
                      Description:        Dimension Description
                      Type:               String
                      Format:             Unspecified
                      Required:           Yes
                      Nullable:           No
                      ReadOnly:           No
                      WriteOnly:          No

        - filterSelectionsObject:
            Description:        Filter Selections Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - LW3FLTTYP:
                Description:        Filter Type
                Type:               Field
                Field Name:         LW3FLTTYP
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3FLTACD:
                Description:        Filter Alpha Code
                Type:               Field
                Field Name:         LW3FLTACD
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3FLTNCD:
                Description:        Filter Numeric Code
                Type:               Field
                Field Name:         LW3FLTNCD
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3FLTDSC:
                Description:        Filter Description
                Type:               Field
                Field Name:         LW3FLTDSC
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3FLTECN:
                Description:        Filter Entry Count
                Type:               Field
                Field Name:         LW3FLTECN
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

        - filterSelectionsArray:
            Description:        Filter Selections Array
            Type:               Array
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Items:
            - Type:               Reference
              Reference Name:     filterSelectionsObject
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - productSuggestionsObject:
            Description:        Product Suggestions Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - LW3ITEMCD:
                Description:        Item Code
                Type:               Field
                Field Name:         LW3ITEMCD
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3IDESC:
                Description:        Item Description
                Type:               Field
                Field Name:         LW3IDESC
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

        - productSuggestionsArray:
            Description:        Product Suggestions Array
            Type:               Array
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Items:
            - Type:               Reference
              Reference Name:     productSuggestionsObject
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - httpResponseArray:
            Description:        Http Response Array
            Type:               Array
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Items:
            - Description:        Http Response Object
              Type:               Object
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

              Properties:
              - code:
                  Description:        Multilingual Variable Name
                  Type:               String
                  Format:             Unspecified
                  Required:           Yes
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

              - message:
                  Description:        Multilingual Variable Unicode Text
                  Type:               String
                  Format:             Unspecified
                  Required:           Yes
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

              - type:
                  Description:        Message Type
                  Type:               String
                  Format:             Unspecified
                  Required:           Yes
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

              - field:
                  Description:        Field Name
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

              - detail:
                  Description:        Message Detail
                  Type:               String
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

              - substitutions:
                  Description:        Substitution Variables
                  Type:               Array
                  Format:             Unspecified
                  Required:           No
                  Nullable:           No
                  ReadOnly:           No
                  WriteOnly:          No

                  Items:
                  - Description:        values
                    Type:               String
                    Format:             Unspecified
                    Required:           No
                    Nullable:           No
                    ReadOnly:           No
                    WriteOnly:          No

        - categorySuggestionObject:
            Description:        Catgory Suggestion
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - LW3CATID:
                Description:        Catgory ID
                Type:               Field
                Field Name:         LW3CATID
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - LW3CATNAM:
                Description:        Category Name
                Type:               Field
                Field Name:         LW3CATNAM
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

        - categorySuggestionArray:
            Description:        Suggestion Array
            Type:               Array
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Items:
            - Type:               Reference
              Reference Name:     categorySuggestionObject
              Format:             Unspecified
              Required:           No
              Nullable:           No
              ReadOnly:           No
              WriteOnly:          No

        - suggestionResponseObject:
            Description:        Suggestion Reponse Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - product:
                Type:               Reference
                Reference Name:     productSuggestionsArray
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

            - category:
                Type:               Reference
                Reference Name:     categorySuggestionArray
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No

        - productsRequestObject:
            Description:        Products Request Json Object
            Type:               Object
            Format:             Unspecified
            Required:           No
            Nullable:           No
            ReadOnly:           No
            WriteOnly:          No

            Properties:
            - type:
                Description:        Product List Type
                Type:               String
                Format:             Unspecified
                Required:           Yes
                Nullable:           No
                ReadOnly:           No
                WriteOnly:          No
