Weblet:
  Name:               web_component_layout

  Multilingual Details:
  - ENG:
      Description:        "Ajax Response Layout"

  XML: |
    <?xml version="1.0" encoding="UTF-8"?>
    <lxml:data xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data">
       <lxml:context>
          <lxml:images-path>/images</lxml:images-path>
       </lxml:context>
    </lxml:data>

  Designs:
  - Language:           ENG
    Technology Service: LANSA XHTML

    XSL: |
      <?xml version="1.0" encoding="UTF-8"?>
      <!--     LANSA for the Web                   -->
      <!-- Ajax Response Layout                    -->
      <!-- Author: Roc Chen                        -->
      <!-- Version: v1.00                          -->
      <xsl:transform version="1.0" exclude-result-prefixes="lxml wd tsml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns:tsml="http://www.lansa.com/2002/XML/Generation-Metadata" xmlns="http://www.w3.org/1999/xhtml">
         <xsl:import href="std_variables.xsl"/>
         <xsl:import href="std_style.xsl"/>
         <xsl:import href="std_script.xsl"/>
         <xsl:import href="std_forminit.xsl"/>
         <xsl:import href="std_hidden.xsl"/>
         <xsl:import href="std_messages.xsl"/>
         <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no"/>
         <wd:definition>
            <wd:group name="WAM Layouts"/></wd:definition>
         <wd:template name="layout">
            <wd:description icon="icons/std_layout.ico">
               <wd:name lang="ENG">Ajax Response Layout</wd:name>
            </wd:description>
            <wd:param name="has_layout">
               <wd:tip lang="ENG">An XSL boolean value to determine if the layout should be included in the final response or not. Since ajax reponse usually only returns portion of the HTML code, we don't always want the response object to contain the HTML or FORM tags. If this is set to false(), then all of the following attributes won't be applied: company_logo_image, company_logo_image_right, body_class, form_class, show_title, title_text, show_messages, relative_css_link_filename, output_charset.</wd:tip>
            </wd:param>
            <wd:param name="build_my_own_layout">
               <wd:tip lang="ENG">Do you want to build your own HTML page by ignoring the original layout? If true, no layout info will be included in either the XSL editor, or the actual ajax webroutine response. A good example of turning this setting on is to return data JSON syntax. Note: "has_layout" and "data_xml_only" must be set to false().</wd:tip>
            </wd:param>
            <wd:param name="data_xml_only">
               <wd:tip lang="ENG">Do you want the webroutine to only return the data XML? If true, none of the xsl code will be returned, but only the data XML generated by the webroutine. Note: "has_layout" must be set to false().</wd:tip>
            </wd:param>
            <wd:param name="styleSheet">
               <wd:tip lang="ENG">A static XSL stylesheet file used to transform on browser side. This attribute is only applied when "data_xml_only" is set to true.</wd:tip>
            </wd:param>
            <wd:param name="XML_ssi">
               <wd:tip lang="ENG">If "data_xml_only", shows SSI in data XML.</wd:tip>
            </wd:param>
            <wd:param name="XML_context_info">
               <wd:tip lang="ENG">If "data_xml_only", shows context information in data XML.</wd:tip>
            </wd:param>
            <wd:param name="XML_options">
               <wd:tip lang="ENG">If "data_xml_only", shows options in data XML.</wd:tip>
            </wd:param>
            <wd:param name="XML_variables">
               <wd:tip lang="ENG">If "data_xml_only", shows system variables in data XML.</wd:tip>
            </wd:param>
            <wd:param name="XML_messages">
               <wd:tip lang="ENG">If "data_xml_only", shows messages in data XML.</wd:tip>
            </wd:param>
         </wd:template>
         <xsl:template name="layout" wd:role="std:layout">
            <xsl:param name="company_logo_image" wd:tip_id="" wd:type="std:html_img_relative" select="$lweb_company_logo"/>
            <xsl:param name="company_logo_image_right" wd:tip_id="" wd:type="std:html_img_relative" select="$lweb_company_logo_right"/>
            <xsl:param name="body_class" wd:tip_id="" wd:type="std:css_style_class[tagName='body']"/>
            <xsl:param name="form_class" wd:tip_id="" wd:type="std:css_style_class[tagName='form']"/>
            <xsl:param name="show_title" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="title_text" wd:tip_id="" wd:type="std:mtxt_variable" select="/lxml:data/lxml:context/lxml:webroutine-title"/>
            <xsl:param name="show_messages" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="relative_css_link_filename" wd:tip_id="" wd:type="std:css_link_filename" select="$lweb_std_css_link_filename"/>
            <xsl:param name="output_charset" wd:tip_id="" select="/lxml:data/lxml:server-instructions/lxml:client-charset"/>
            <xsl:param name="has_layout" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="build_my_own_layout" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="data_xml_only" wd:type="std:boolean" select="false()"/>
            <xsl:param name="styleSheet" select="''"/>
            <xsl:param name="XML_ssi" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="XML_context_info" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="XML_options" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="XML_variables" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:param name="XML_messages" wd:tip_id="" wd:type="std:boolean" select="false()"/>
            <xsl:choose>
               <xsl:when test="($lweb_design_mode or $has_layout) and not($build_my_own_layout)">
                  <html>
                     <head>
                        <title>
                           <xsl:value-of select="$title_text"/>
                        </title>
                        <meta http-equiv="content-type" content="text/html; charset={$output_charset}"/>
                        <xsl:call-template name="style">
                           <xsl:with-param name="company_logo_image_right" select="$company_logo_image_right"/>
                           <xsl:with-param name="company_logo_image" select="$company_logo_image"/>
                           <xsl:with-param name="relative_css_link_filename" select="$relative_css_link_filename"/>
                        </xsl:call-template>
                        <xsl:call-template name="script"/>
                     </head>
                     <body onload="SetFocus()">
                        <xsl:if test="$body_class!=''">
                           <xsl:attribute name="class">
                              <xsl:value-of select="$body_class"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:call-template name="forminit"/>
                        <table cellspacing="0" cellpadding="0" width="100%" border="0">
                           <tbody>
                              <tr>
                                 <td class="std_headerl"> </td>
                                 <td class="std_headerr"> </td>
                              </tr>
                           </tbody>
                        </table>
                        <br/>
                        <br/>
                        <xsl:if test="$show_title">
                           <h1 class="title">
                              <xsl:value-of select="$title_text"/>
                           </h1>
                        </xsl:if>
                        <xsl:if test="$show_messages">
                           <div align="center">
                              <xsl:call-template name="messages"/>
                           </div>
                        </xsl:if>
                        <form name="LANSA" onsubmit="return _HandleDefaultSubmit(this)" action="{/lxml:data/lxml:context/lxml:action-request}?" method="post">
                           <xsl:if test="$form_class!=''">
                              <xsl:attribute name="class">
                                 <xsl:value-of select="$form_class"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:call-template name="hidden_fields"/>
                           <br clear="all"/>
                           <br/>
                           <xsl:apply-templates select="*" wd:role="std:webroutine"/>
                           <br/>
                           <br/>
                           <br/>
                           <br/>
                           <xsl:if test="not($has_layout)">
                              <p class="std_footer" align="center">This is a fake layout. This layout only shows up in xsl editor design view and you won't see it in the actual browser output. </p>
                           </xsl:if>
                           <br/>
                        </form>
                     </body>
                  </html>
               </xsl:when>
               <xsl:when test="$data_xml_only and not($lweb_design_mode)">
                  <xsl:text disable-output-escaping="yes">&lt;</xsl:text>?xml version="1.0" encoding="UTF-8"?<xsl:text disable-output-escaping="yes">&gt;
                  </xsl:text>
                  <xsl:if test="$styleSheet != ''">
                     <xsl:text disable-output-escaping="yes">&lt;</xsl:text>?xml-stylesheet type="text/xsl" href="<xsl:value-of select="$styleSheet"/>"?<xsl:text disable-output-escaping="yes">&gt;
                  </xsl:text>
                  </xsl:if>
                  <lxml:data>
                     <lxml:server-instructions>
                        <xsl:copy-of select="/lxml:data/lxml:server-instructions/lxml:client-charset"/>
                        <xsl:if test="$XML_ssi">
                           <xsl:copy-of select="/lxml:data/lxml:server-instructions/lxml:ssi"/>
                        </xsl:if>
                     </lxml:server-instructions>
                     <xsl:if test="$XML_context_info">
                        <xsl:copy-of select="/lxml:data/lxml:context"/>
                     </xsl:if>
                     <xsl:if test="$XML_variables">
                        <xsl:copy-of select="/lxml:data/lxml:variables"/>
                     </xsl:if>
                     <xsl:if test="$XML_options">
                        <xsl:copy-of select="/lxml:data/lxml:options"/>
                     </xsl:if>
                     <xsl:if test="$XML_messages">
                        <xsl:copy-of select="/lxml:data/lxml:messages"/>
                     </xsl:if>
                     <xsl:copy-of select="/lxml:data/lxml:fields"/>
                     <xsl:copy-of select="/lxml:data/lxml:lists"/>
                  </lxml:data>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:apply-templates wd:role="std:webroutine" select="*"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:template>
      </xsl:transform>
