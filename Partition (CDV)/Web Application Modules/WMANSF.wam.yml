Wam:
  Name:               WMANSF
  Enabled For RDMLX:  Yes

  Multilingual Details:
  - ENG:
      Description:        "Store Front Maintenance"

  Source: |
    * **************************************************
    *
    * COMPONENT:  WMANSF
    *
    * **************************************************
    
    * =========================================================================================
    * MODIFICATION LOG
    *
    * Task ID                 Description                               Date
    *    *UDLC001                Commented Call to function CRTCTSF        DEc. 21, 2012
    * =========================================================================================
    
    Function Options(*DIRECT)
    Begin_Com Role(*EXTENDS #PRIM_WAM) Sessiongroupname('CEADM') Sessiontimeout(0)
    
    * CE General Purpose Library
    Define_Com Class(#CEGPL)
    
    Def_List Name(#sflist) Fields(#lw3sfid #lw3name #lw3url #lw3domain) Type(*WORKING) Entrys(999)
    
    * **************************************************
    * Header Storefront list
    * **************************************************
    Define Field(#w_sfidsv) Reffld(#lw3sfid)
    Define Field(#w_sfnm) Reffld(#lw3name)
    Def_List Name(#hsflist) Fields(#w_sfid #w_sfnm) Type(*WORKING) Entrys(999)
    
    Define Field(#W_ADDFLG) Type(*CHAR) Length(1)
    
    Group_By Name(#XG_SFRNT) Fields(#LW3SFSEQ #LW3NAME #LW3SNAM #LW3SFCSS #LW3SFIMG #LW3IDTFLG #LW3DOMAIN #LW3JDEC01 #LW3EMLEML #LW3CRQEML #LW3CATITM #LW3B2BIND #FXANALYZE #FXANACCT #LW3CURCD #LW3CURSM #LW3DPSYM #LW3TSSYM #LW3UCSVF #LW3SMEDF #LW3SFTHEM)
    Group_By Name(#XG_SFEXT) Fields(#LW3BRNCD #LW3BRNDS #LW3UCMNUF)
    
    Def_List Name(#top_menu) Fields(#LADMDSC #LADMWAM #LADMWR) Counter(#ADMCNT1) Type(*WORKING) Entrys(25)
    Def_List Name(#left_menu) Fields(#LADMDSC #LADMWAM #LADMWR #ladrval #ladrfld) Counter(#ADMCNT2) Type(*WORKING) Entrys(25)
    Web_Map For(*BOTH) Fields(#ladmid #top_menu #left_menu #ladaid #ADMCNT1 #ADMCNT2 #lw3mhtml)
    
    Define Field(#w_eevenm) Reffld(#eevenm)
    Def_List Name(#iemllist) Fields(#w_eevenm #eevdsc) Type(*WORKING) Entrys(999)
    
    Group_By Name(#gpInsert) Fields(#EEVID #EEVENM #EEVDSC #EEVUDS #EEVADT #EEVATM #EEVAFN #EEVAUR #EEVCDT #EEVCTM #EEVCFN #EEVCUR #lw3sfid)
    * Group_By Name(#xg_cttins) Fields(#cnttyp #cntcat #lw3sfid #cnttdc)
    Group_By Name(#xg_cntins) Fields(#cntlng #applid #contid #cntver #lw3catid #cntfmt #ctypid #cntdsc #cntdta #eecatc #eecatp)
    Group_By Name(#xg_eecins) Fields(#eeceid #eeccsq #eeccid #eecsbj #eecsem #eecsnm #EECADT #EECATM #EECAFN #EECAUR #EECCDT #EECCTM #EECCFN #EECCUR)
    
    * meta data fileds
    Define Field(#w_metatit) Reffld(#lw3mtatxt) Desc('Title Meta Data')
    Define Field(#w_metakey) Reffld(#lw3mtatxt) Desc('Keyword Meta Data')
    Define Field(#w_metades) Reffld(#lw3mtatxt) Desc('Description Meta Data')
    
    Define Field(#w_pagdsc) Type(*CHAR) Length(100) Desc('Page name')
    
    Def_List Name(#metalst) Fields(#lw3mtakey #w_pagdsc #w_metatit #w_metakey #w_metades) Type(*WORKING) Entrys(999)
    Web_Map For(*INPUT) Fields(#stdadmusr #stdadmses)
    
    Web_Map For(*BOTH) Fields(#LW3WEBUSR #LW3SFID (#LW3SFCUR *HIDDEN))
    
    * multilingual variable list
    Def_List Name(#ls_mlnvar) Fields(#FXVARNAM #FXVARTXT) Type(*WORKING) Entrys(*MAX)
    Web_Map For(*BOTH) Fields(#ls_mlnvar #FXWAMNAM #FXWRTNAM)
    
    Define Field(#w_admerr) Type(*CHAR) Length(1)
    
    Define Field(#W_DEL) Reffld(#STDRENTRY) Desc('Value:Y/N')
    Define Field(#W_DELMSG) Reffld(#MSGBXTXT)
    
    * yes no list
    Def_List Name(#IDTFLGLST) Fields(#LW3IDTFLG #LW3CDES) Type(*WORKING)
    Def_List Name(#UCSVFLST) Fields(#LW3UCSVF #LW3CDES) Type(*WORKING)
    Def_List Name(#SMEDFLST) Fields(#LW3SMEDF #LW3CDES) Type(*WORKING)
    Def_List Name(#FXANALLST) Fields(#FXANALYZE #LW3CDES) Type(*WORKING)
    
    Define Field(#W_IDTFLG) Reffld(#LW3IDTFLG)
    Define Field(#W_UCSVF) Reffld(#LW3UCSVF)
    Define Field(#W_SMEDF) Reffld(#LW3SMEDF)
    Define Field(#W_ANALYZE) Reffld(#FXANALYZE)
    
    * B2B/B2C indicator
    Def_List Name(#B2BINDLST) Fields(#LW3B2BIND #LW3CDES) Type(*WORKING)
    
    Define Field(#W_B2BIND) Reffld(#LW3B2BIND)
    
    Webroutine Name(sfmain) Desc('Store Front Maintenance') Onentry(*SESSIONSTATUS_ACTIVE)
    Web_Map For(*BOTH) Fields(#sflist #hsflist #w_sfid #stdrentry)
    Web_Map For(*OUTPUT) Fields(#S_PARAG #LW3NAME)
    
    Execute Subroutine(init_sf)
    
    * get multi-lingual info
    #FXWAMNAM := WMANSF
    #FXWRTNAM := SFMAIN
    Execute Subroutine(multi)
    #LW3LNGCOD := *LANGUAGE
    
    #w_sfidsv := #LW3sfid
    Clr_List Named(#sflist)
    Clr_List Named(#hsflist)
    
    #STDADMUSR := #LW3WEBUSR
    
    * Get Intro Paragraph
    Define Field(#S_PARAG) Type(*CHAR) Length(256) Desc('Intro Paragraph')
    #CEGPL.GetWAMIntroText Introtextname(AdminSFMaint) Paragraphlanguage(*LANGUAGE) Introtextparagraph(#S_PARAG)
    
    Call Webroutine(#ADMDYNMNU.bldmenu)
    
    If Cond(#stdrentry = J)
    Call Process(*DIRECT) Function(bldjdky) Exit_Used(*NEXT) Menu_Used(*NEXT) If_Error(*NEXT)
    #stdrentry := ''
    Endif
    
    Select Fields(#sflist) From_File(lw3sfrnt) Io_Error(*NEXT) Val_Error(*NEXT)
    Fetch Fields(#lw3name) From_File(lw3sfml) With_Key(#LW3SFID #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    #lw3url := 'http://' + #lw3domain.lowercase
    Add_Entry To_List(#sflist)
    #w_sfid := #lw3sfid
    #w_sfnm := #lw3name
    Add_Entry To_List(#hsflist)
    Endselect
    If Cond(*Not #w_sfidsv.isnull)
    #w_sfid #LW3SFID := #w_sfidsv
    Else
    #w_sfid #LW3SFID := 1
    Endif
    
    * Get Storefront name
    If Cond(#LW3SFID = 99)
    #LW3VARTXT := 'Administration Site'
    Fetch Fields(#LW3VARTXT) From_File(lw3mlnvar) With_Key('LBL_ADMIN_SITE' *LANGUAGE) Io_Error(*NEXT) Val_Error(*NEXT)
    #lw3name := #LW3VARTXT
    Else
    Fetch Fields(#LW3NAME) From_File(LW3SFML) With_Key(#LW3SFID *LANGUAGE) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is_Not(*OKAY)
    Fetch Fields(#LW3NAME) From_File(LW3SFRNT) With_Key(#LW3SFID) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is_Not(*OKAY)
    #LW3VARTXT := '*** Invalid Storefront ***'
    Fetch Fields(#LW3VARTXT) From_File(lw3mlnvar) With_Key('LBL_INVALID_STOREFRONT' *LANGUAGE) Io_Error(*NEXT) Val_Error(*NEXT)
    #lw3name := #LW3VARTXT
    Endif
    Endif
    Endif
    Endroutine
    
    Webroutine Name(bld_cnstmf) Onentry(*SESSIONSTATUS_ACTIVE)
    
    Execute Subroutine(init_sf)
    
    #STDADMUSR := #LW3WEBUSR
    
    * UDLC001_Dec21.2012
    * Call Process(*direct) Function(crtctsf) Exit_Used(*NEXT) Menu_Used(*NEXT) If_Error(*NEXT)
    
    Transfer Toroutine(sfmain)
    Endroutine
    
    
    Webroutine Name(chudsf) Onentry(*SESSIONSTATUS_ACTIVE)
    Web_Map For(*BOTH) Fields(#stdrentry #LW3SFID #XG_SFRNT #XG_SFEXT #W_ADDFLG #metalst #LW3MTALST #w_admerr)
    Web_Map For(*BOTH) Fields((#W_DEL *HIDDEN) (#W_DELMSG *HIDDEN))
    
    Web_Map For(*OUTPUT) Fields((#IDTFLGLST *PRIVATE) (#UCSVFLST *PRIVATE) (#SMEDFLST *PRIVATE) (#FXANALLST *PRIVATE) (#B2BINDLST *PRIVATE) (#SFTHEMLST *PRIVATE))
    If ((#STDRENTRY *NE Q) And (#STDRENTRY *NE C) And (#STDRENTRY *NE D))
    Execute Subroutine(init_sf)
    Endif
    * set multi-lingual info
    #FXWAMNAM := WMANSF
    #FXWRTNAM := CHUDSF
    Execute Subroutine(multi)
    #LW3LNGCOD := *LANGUAGE
    
    * build yes/no dropdown
    Execute Subroutine(bld_yesno)
    * build b2b/b2c indicator
    Execute Subroutine(bld_b2bind)
    * build themes dropdown
    Execute Subroutine(bld_themes)
    
    #STDADMUSR := #LW3WEBUSR
    
    Call Webroutine(#ADMDYNMNU.bldmenu)
    
    #LW3SFSEQ := 0
    Case Of_Field(#stdrentry)
    When (= Q)
    * in from main page change/delete button
    Execute Subroutine(bld_mtalst)
    Fetch Fields(#XG_SFRNT) From_File(LW3SFRNT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    Fetch Fields(#XG_SFEXT) From_File(LW3SFEXT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    Fetch Fields(#lw3name) From_File(lw3sfml) With_Key(#LW3SFID #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    
    Selectlist Named(#metalst)
    Execute Subroutine(get_metad)
    Upd_Entry In_List(#metalst)
    Endselect
    #W_ADDFLG := N
    
    When (= W)
    * in from main page add button
    Execute Subroutine(bld_mtalst)
    #XG_SFRNT := *DEFAULT
    #W_ADDFLG := Y
    
    When (= A)
    
    #LW3SFID := *zero
    Select Fields(#LW3SFID) From_File(LW3SFRNT) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    Leave
    Endselect
    
    #LW3SFID += 1
    Insert Fields(#LW3SFID #LW3SFSEQ #XG_SFRNT) To_File(LW3SFRNT) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#IO$STS = OK)
    Insert Fields(#LW3SFID #LW3LNGCOD #lw3name) To_File(LW3SFML) Io_Error(*NEXT) Val_Error(*NEXT)
    Insert Fields(#LW3SFID #LW3SFSEQ #XG_SFEXT) To_File(LW3SFEXT) Io_Error(*NEXT) Val_Error(*NEXT)
    Selectlist Named(#metalst)
    Execute Subroutine(upd_metad)
    Endselect
    #stdrentry := ''
    * Message Msgtxt('qqq #lw3webusr = ' + #lw3webusr)
    * Message Msgtxt('qqq #lw3sfid = ' + #lw3sfid.asstring)
    Insert Fields(#lw3webusr #lw3sfid) To_File(admsfacc) Io_Error(*NEXT) Val_Error(*NEXT)
    * Transfer Toroutine(sfmain)
    Endif
    
    When (= C)
    
    Update Fields(#XG_SFRNT) In_File(LW3SFRNT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#IO$STS = OK)
    * Update Multilingual FIle
    Fetch Fields(#LW3SFID) From_File(lw3sfml) With_Key(#LW3SFID #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    Update Fields(#lw3name) In_File(lw3sfml) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    Insert Fields(#LW3SFID #LW3LNGCOD #lw3name) To_File(LW3SFML) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    * Update Extension File
    Fetch Fields(#LW3SFID) From_File(LW3SFEXT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    Update Fields(#XG_SFEXT) In_File(LW3SFEXT) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    Insert Fields(#LW3SFID #LW3SFSEQ #LW3BRNCD #LW3BRNDS) To_File(LW3SFEXT) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    
    Selectlist Named(#metalst)
    Execute Subroutine(upd_metad)
    Endselect
    
    #stdrentry := ''
    Check_For In_File(ADMSFACCL2) With_Key(#LW3SFID) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is_Not(*EQUALKEY)
    Insert Fields(#lw3webusr #lw3sfid) To_File(admsfacc) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    * Transfer Toroutine(sfmain)
    Endif
    
    When (= D)
    * if confirm dialog box is yes
    If (#W_DEL = Y)
    
    Delete From_File(LW3SFRNT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#IO$STS = OK)
    Delete From_File(LW3SFEXT) With_Key(#LW3SFID #LW3SFSEQ) Io_Error(*NEXT) Val_Error(*NEXT)
    Delete From_File(LW3SFML) With_Key(#LW3SFID) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#IO$STS = OK)
    Delete From_File(ADMSFACCL2) With_Key(#LW3SFID) Io_Error(*NEXT) Val_Error(*NEXT)
    #stdrentry := ''
    Transfer Toroutine(sfmain)
    Endif
    Endif
    
    Else
    Endif
    Otherwise
    Execute Subroutine(init_email)
    Endcase
    
    If Cond(#lw3sfid = 99)
    #w_admerr := Y
    #LW3VARNAM := MSG_LW32528
    #LW3LNGID := *LANGUAGE
    #LW3MSGSUB := *blank
    Execute Subroutine(SEND_MSG)
    
    Else
    #w_admerr := ''
    Endif
    
    * Get delete confirmation text
    #W_DELMSG := 'Confirm delete.'
    Loc_Entry In_List(#ls_mlnvar) Where(#FXVARNAM *EQ 'TXT_DELETE_CONFIRM')
    If_Status Is(*OKAY)
    #W_DELMSG := #FXVARTXT
    Endif
    Endroutine
    
    * initialize new email events for storefront
    Subroutine Name(init_email)
    #LW3LNGCOD := *LANGUAGE
    Select Fields(#EEVID #eevenm #eevdsc) From_File(admeev) Io_Error(*NEXT) Val_Error(*NEXT)
    #w_eevenm := #eevenm
    Loc_Entry In_List(#iemllist) Where(#eevenm = #w_eevenm)
    If Cond(#io$sts ¬= OK)
    Fetch Fields(#eevdsc) From_File(admeevml) With_Key(#EEVID #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    Add_Entry To_List(#iemllist)
    Endif
    Endselect
    
    Select Fields(#eevenm) From_File(admeevl2) With_Key(#lw3sfid) Io_Error(*NEXT) Val_Error(*NEXT)
    Loc_Entry In_List(#iemllist) Where(#eevenm = #w_eevenm)
    If Cond(#io$sts ¬= OK)
    Dlt_Entry From_List(#iemllist)
    Endif
    Endselect
    
    Selectlist Named(#iemllist)
    #eevenm := #w_eevenm
    Execute Subroutine(bld_emails)
    Endselect
    Endroutine
    
    
    Subroutine Name(bld_emails)
    #LW3LNGCOD := *LANGUAGE
    #EEVID := *ZEROS
    Select Fields(#EEVID) From_File(ADMEEV) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    Leave
    Endselect
    #EEVID += 1
    
    * #eevenm := eventname
    * #eevdsc := eventdesc
    #eevuds := 'Y'
    
    #eecsbj := 'New Email Event Subject'
    #eecsem := ''
    #eecsnm := ''
    
    * check that email name is unique
    Check_For In_File(admeevl2) With_Key(#lw3sfid #eevenm) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#io$sts ¬= EQ)
    * check insert to ADMEEV
    Insert Fields(#gpInsert) To_File(ADMEEV) Io_Error(*NEXT) Val_Error(*NEXT) Check_Only(*YES)
    If Cond(#io$sts = OK)
    #CNTTYP := *NULL
    * SELECT FIELDS(#CNTTYP) FROM_FILE(ADMCTT) IO_ERROR(*NEXT) VAL_ERROR(*NEXT) OPTIONS(*BACKWARDS)
    * LEAVE
    * ENDSELECT
    * #CNTTYP := #CNTTYP + 1
    
    * type is email
    * #CNTCAT := EM
    
    #cnttdc := #eevdsc
    
    * INSERT FIELDS(#xg_cttins) TO_FILE(admctt) IO_ERROR(*NEXT) VAL_ERROR(*NEXT) CHECK_ONLY(*YES)
    * if cond(#io$sts = OK)
    * set fields for admcnt
    #cntlng := ENG
    #applid := #lw3sfid.asstring
    
    * get next sequence
    #CONTID := *NULL
    * SELECT FIELDS(#CONTID) FROM_FILE(ADMCNT02) OPTIONS(*BACKWARDS)
    * LEAVE
    * ENDSELECT
    * #CONTID := #CONTID + 1
    
    #cntver := 0
    #lw3catid := 0
    #cntfmt := HTM
    #ctypid := #cnttyp
    #cntdsc := #eevdsc
    #cntdta := ''
    #eecatc := ''
    #eecatp := ''
    
    * INSERT FIELDS(#xg_cntins) TO_FILE(admcnt) IO_ERROR(*NEXT) VAL_ERROR(*NEXT) CHECK_ONLY(*YES)
    * if cond(#io$sts = OK)
    * set fields for admeec
    #eeceid #eeccsq := #eevid
    #eeccid := #contid
    
    Insert Fields(#xg_eecins) To_File(admeec) Io_Error(*NEXT) Val_Error(*NEXT) Check_Only(*YES)
    If Cond(#io$sts = OK)
    
    * Insert Event to file
    Insert Fields(#gpInsert) To_File(ADMEEV) Io_Error(*NEXT) Val_Error(*NEXT)
    Insert Fields(#EEVID #LW3LNGCOD #EEVDSC) To_File(ADMEEVML) Io_Error(*NEXT) Val_Error(*NEXT)
    * INSERT FIELDS(#xg_cntins) TO_FILE(admcnt) IO_ERROR(*NEXT) VAL_ERROR(*NEXT)
    Insert Fields(#xg_eecins) To_File(admeec) Io_Error(*NEXT) Val_Error(*NEXT)
    
    Else
    * check insert to admeec failed
    Endif
    Else
    * check insert to admeev failed
    Endif
    
    Else
    Fetch Fields(#EEVID) From_File(admeevml) With_Key(#EEVID #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    If_Status Is(*OKAY)
    Update Fields(#EEVDSC) In_File(ADMEEVML) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    Insert Fields(#EEVID #LW3LNGCOD #EEVDSC) To_File(ADMEEVML) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    Endif
    
    Endroutine
    
    * build list of pages to maintain meta data for
    Subroutine Name(bld_mtalst)
    #w_metatit #w_metakey #w_metades := ''
    #LW3LNGCOD := *LANGUAGE
    Clr_List Named(#metalst)
    
    Select Fields(#LW3MTAKEY #LW3PAGDSC) From_File(LW3MTAPGE) Where(#LW3MANMTA = Y) Io_Error(*NEXT) Val_Error(*NEXT)
    #w_pagdsc := #LW3PAGDSC
    Add_Entry To_List(#metalst)
    Endselect
    
    * 2/2/12 New way - build the list of pages and allow drill down:
    Def_List Name(#LW3MTALST) Fields((#LW3MTAKEY *hidden) (#LW3PAGDSC *out) (#LW3MANMTA *hidden)) Type(*WORKING) Entrys(*MAX)
    
    Clr_List Named(#LW3MTALST)
    Select Fields(#LW3MTALST) From_File(LW3MTAPGE) Where(#LW3MANMTA = Y) Io_Error(*NEXT) Val_Error(*NEXT)
    Add_Entry To_List(#LW3MTALST)
    Endselect
    Endroutine
    
    * get category meta data
    Subroutine Name(get_metad)
    #LW3LNGCOD := *LANGUAGE
    Fetch Fields(#lw3mtatxt) From_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'TTL' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    #w_metatit := #lw3mtatxt
    Fetch Fields(#lw3mtatxt) From_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'KYW' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    #w_metakey := #lw3mtatxt
    Fetch Fields(#lw3mtatxt) From_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'DSC' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    #w_metades := #lw3mtatxt
    Endroutine
    
    * add/update category metadata
    Subroutine Name(upd_metad)
    #LW3LNGCOD := *LANGUAGE
    #lw3ptyp := 'PAG'
    #lw3mtakey := #lw3mtakey
    #lw3mtatxt := #w_metatit
    Check_For In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'TTL' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#io$sts = EQ)
    * update
    Update Fields(#lw3mtatxt) In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'TTL' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    * add
    #lw3mtyp := 'TTL'
    Insert Fields(#lw3sfid #lw3ptyp #lw3mtakey #lw3mtyp #LW3LNGCOD #lw3mtatxt) To_File(lw3metad) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    
    #lw3mtatxt := #w_metakey
    Check_For In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'KYW' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#io$sts = EQ)
    * update
    Update Fields(#lw3mtatxt) In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'KYW' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    * add
    #lw3mtyp := 'KYW'
    Insert Fields(#lw3sfid #lw3ptyp #lw3mtakey #lw3mtyp #LW3LNGCOD #lw3mtatxt) To_File(lw3metad) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    
    #lw3mtatxt := #w_metades
    Check_For In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'DSC' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    If Cond(#io$sts = EQ)
    * update
    Update Fields(#lw3mtatxt) In_File(lw3metad) With_Key(#lw3sfid 'PAG' #lw3mtakey 'DSC' #LW3LNGCOD) Io_Error(*NEXT) Val_Error(*NEXT)
    Else
    * add
    #lw3mtyp := 'DSC'
    Insert Fields(#lw3sfid #lw3ptyp #lw3mtakey #lw3mtyp #LW3LNGCOD #lw3mtatxt) To_File(lw3metad) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    Endroutine
    
    * The following event handler will handle invalid session
    Evtroutine Handling(#COM_OWNER.SessionInvalid) Options(*NOCLEARMESSAGES *NOCLEARERRORS)
    #LW3VARNAM := MSG_LW32307
    #LW3LNGID := *LANGUAGE
    #LW3MSGSUB := *blank
    Execute Subroutine(SEND_MSG)
    
    Transfer Toroutine(#WADMLGN1.LWBOP01C1)
    Endroutine
    
    * get multilingual information
    Subroutine Name(multi)
    Exchange Fields(#FXWAMNAM #FXWRTNAM)
    Call Process(*DIRECT) Function(LW3MLAD) If_Error(*NEXT) Pass_Lst(#ls_mlnvar)
    Endroutine
    
    * Send a message
    Subroutine Name(SEND_MSG)
    Exchange Fields(#LW3VARNAM #LW3LNGID #LW3MSGSUB)
    Call Process(*DIRECT) Function(LW3MSG) If_Error(*NEXT)
    Endroutine
    
    * build yes or no dropdowns
    Subroutine Name(bld_yesno)
    #W_IDTFLG := #LW3IDTFLG
    #W_UCSVF := #LW3UCSVF
    #W_SMEDF := #LW3SMEDF
    #W_ANALYZE := #FXANALYZE
    
    Clr_List Named(#IDTFLGLST)
    Clr_List Named(#UCSVFLST)
    Clr_List Named(#SMEDFLST)
    
    #LW3LNGID := *LANGUAGE
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL4) With_Key(YESNO1 #LW3LNGID) Io_Error(*NEXT) Val_Error(*NEXT)
    
    * do not include header
    Continue If(#LW3CODE = '#')
    
    #LW3IDTFLG #LW3UCSVF #LW3SMEDF #FXANALYZE := #LW3CODE
    Add_Entry To_List(#IDTFLGLST)
    Add_Entry To_List(#UCSVFLST)
    Add_Entry To_List(#SMEDFLST)
    Add_Entry To_List(#FXANALLST)
    Endselect
    
    #LW3IDTFLG := #W_IDTFLG
    #LW3UCSVF := #W_UCSVF
    #LW3SMEDF := #W_SMEDF
    #FXANALYZE := #W_ANALYZE
    Endroutine
    
    * build B2B/B2C indicator
    Subroutine Name(bld_b2bind)
    #W_B2BIND := #LW3B2BIND
    
    Clr_List Named(#B2BINDLST)
    
    #LW3LNGID := *LANGUAGE
    Select Fields(#LW3CODE #LW3CDES) From_File(LW3CODL4) With_Key(B2BIND #LW3LNGID) Io_Error(*NEXT) Val_Error(*NEXT)
    * do not include header
    Continue If(#LW3CODE = '#')
    
    #LW3B2BIND := #LW3CODE
    Add_Entry To_List(#B2BINDLST)
    Endselect
    
    #LW3B2BIND := #W_B2BIND
    Endroutine
    
    * build theme names list
    Subroutine Name(bld_themes)
    
    Def_List Name(#SFTHEMLST) Fields(#LW3thnam) Type(*WORKING) Entrys(*MAX)
    Clr_List Named(#SFTHEMLST)
    
    #LW3LNGID := *LANGUAGE
    Select Fields(#LW3THNAM) From_File(lw3theme) Io_Error(*NEXT) Val_Error(*NEXT)
    
    Add_Entry To_List(#SFTHEMLST)
    Endselect
    Endroutine
    
    * pass the current storefront id
    Subroutine Name(init_sf)
    If Cond(#LW3SFCUR <> 0)
    #LW3SFID := #LW3SFCUR
    Endif
    Endroutine
    
    End_Com

  Web Routines:
  - BLD_CNSTMF:
      XML: |
        <?xml version="1.0" encoding="UTF-8"?>
        
        <!-- WAM       : WMANSF - ?
             Webroutine: bld_cnstmf - 
             Timestamp : 2016-07-04T19:42:24-05:00 -->
        
        <lxml:data xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data">
        
        <lxml:server-instructions>
        <lxml:client-charset></lxml:client-charset>
        <lxml:cookies><lxml:cookie name="STDSESSID"><lxml:value field-name="STDSESSID"></lxml:value>
        <lxml:expires field-name="LW3CEXPDT"></lxml:expires>
        <lxml:domain></lxml:domain>
        <lxml:path>/; HttpOnly</lxml:path>
        <lxml:secure></lxml:secure>
        </lxml:cookie>
        <lxml:cookie name="STDWEBUSR"><lxml:value field-name="STDWEBUSR"></lxml:value>
        <lxml:expires field-name=""></lxml:expires>
        <lxml:domain field-name=""></lxml:domain>
        <lxml:path field-name=""></lxml:path>
        <lxml:secure field-name=""></lxml:secure>
        </lxml:cookie>
        </lxml:cookies>
        <lxml:ssi></lxml:ssi>
        </lxml:server-instructions>
        
        <lxml:context>
        <lxml:user-id>LANSAJAN</lxml:user-id>
        <lxml:webapplication>WMANSF</lxml:webapplication>
        <lxml:webapplication-title>?</lxml:webapplication-title>
        <lxml:webroutine>bld_cnstmf</lxml:webroutine>
        <lxml:webroutine-title></lxml:webroutine-title>
        <lxml:service-name></lxml:service-name>
        <lxml:partition>CED</lxml:partition>
        <lxml:language iso-lang="en">ENG</lxml:language>
        <lxml:dec-separator>.</lxml:dec-separator>
        <lxml:images-path>/images</lxml:images-path>
        <lxml:action-request>/cgi-bin/lansaweb</lxml:action-request>
        </lxml:context>
        
        <lxml:options>
        <lxml:option name="DBCS">false</lxml:option>
        <lxml:option name="align-right">true</lxml:option>
        <lxml:option name="check-numeric">false</lxml:option>
        <lxml:option name="debug" />
        <lxml:option name="trace" />
        <lxml:option name="task" />
        </lxml:options>
        
        <lxml:variables />
        
        <lxml:messages></lxml:messages>
        
        <lxml:fields>
        <lxml:field name="LADMID">
        <lxml:caption>
        <lxml:label>Application Men</lxml:label>
        <lxml:description>Application Menu ID</lxml:description>
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LADAID">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Application ID</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Application</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="ADMCNT1">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Top Menu List Counter</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Top</lxml:heading-2>
        <lxml:heading-3>Menu</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="ADMCNT2">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Left Menu List Count</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Left</lxml:heading-2>
        <lxml:heading-3>Menu</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3MHTML">
        <lxml:caption>
        <lxml:label>Menu Html</lxml:label>
        <lxml:description>Menu Html</lxml:description>
        <lxml:heading-1>Menu</lxml:heading-1>
        <lxml:heading-2>Html</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3WEBUSR">
        <lxml:caption>
        <lxml:label>User Id</lxml:label>
        <lxml:description>Web User Name</lxml:description>
        <lxml:heading-1>Web</lxml:heading-1>
        <lxml:heading-2>User</lxml:heading-2>
        <lxml:heading-3>Name</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3SFID">
        <lxml:caption>
        <lxml:label>Store Front ID</lxml:label>
        <lxml:description>Store Front ID</lxml:description>
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3SFCUR">
        <lxml:caption>
        <lxml:label>Current Store F</lxml:label>
        <lxml:description>Current Store Front</lxml:description>
        <lxml:heading-1>Current</lxml:heading-1>
        <lxml:heading-2>Store</lxml:heading-2>
        <lxml:heading-3>Front</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="FXWAMNAM">
        <lxml:caption>
        <lxml:label>Wam Name</lxml:label>
        <lxml:description>Wam Name</lxml:description>
        <lxml:heading-1>Wam</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="FXWRTNAM">
        <lxml:caption>
        <lxml:label>Webroutine Name</lxml:label>
        <lxml:description>Webroutine Name</lxml:description>
        <lxml:heading-1>Webroutine</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        </lxml:fields>
        
        <lxml:lists>
        <lxml:list name="TOP_MENU" row-count="5">
        <lxml:list-header>
        <lxml:header name="LADMDSC">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Description</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWAM">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>WAM</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWR">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Web</lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0001.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0001.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0001.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0002.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0002.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0002.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0003.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0003.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0003.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0004.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0004.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0004.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0005.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0005.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0005.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="LEFT_MENU" row-count="5">
        <lxml:list-header>
        <lxml:header name="LADMDSC">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Description</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWAM">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>WAM</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWR">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Web</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADRVAL">
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Rentry</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADRFLD">
        <lxml:heading-1>Rentry</lxml:heading-1>
        <lxml:heading-2>Field</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0001.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0001.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0001.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0001.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0001.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0002.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0002.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0002.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0002.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0002.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0003.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0003.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0003.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0003.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0003.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0004.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0004.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0004.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0004.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0004.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0005.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0005.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0005.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0005.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0005.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="LS_MLNVAR" row-count="5">
        <lxml:list-header>
        <lxml:header name="FXVARNAM">
        <lxml:heading-1>Variable</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        <lxml:header name="FXVARTXT">
        <lxml:heading-1>Variable</lxml:heading-1>
        <lxml:heading-2>Text</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0001.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0001.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0002.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0002.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0003.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0003.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0004.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0004.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0005.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0005.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        </lxml:lists>
        
        </lxml:data>
        

      Designs:
      - Language:           ENG
        Technology Service: LANSA JQMOBILE

        XSL: |
          <?xml version="1.0" encoding="UTF-8"?>
          
          <!-- WAM       : WMANSF - Store Front Maintenance
               Webroutine: bld_cnstmf - 
               Timestamp : 2014-06-13T12:10:22-04:00 -->
          
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          
          <xsl:import href="std_keys.xsl" />
          <xsl:import href="std_variables.xsl" />
          <xsl:import href="std_hidden.xsl" />
          <xsl:import href="wmansf_layout.xsl" />
          <xsl:import href="std_html_list.xsl" />
          <xsl:import href="std_html_li.xsl" />
          <xsl:import href="std_repeater.xsl" />
          <xsl:import href="std_input.xsl" />
          
          <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no" />
          
          <lxml:data>
          <lxml:internal_id id="std_html_list_TOP_MENU" />
          <lxml:internal_id id="std_html_li_h_TOP_MENU" />
          <lxml:internal_id id="std_repeater_TOP_MENU" />
          <lxml:internal_id id="std_html_li_TOP_MENU" />
          <lxml:internal_id id="std_html_list_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_h_LEFT_MENU" />
          <lxml:internal_id id="std_repeater_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_LEFT_MENU" />
          <lxml:internal_id id="std_html_list_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_h_LS_MLNVAR" />
          <lxml:internal_id id="std_repeater_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_LS_MLNVAR" />
          </lxml:data>
          
          <xsl:template match="/">
          <xsl:call-template name="layout" />
          </xsl:template>
          
          <xsl:template match="/lxml:data">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADMID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADMID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADMID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADAID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADAID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADAID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT1'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT1')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT1')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT2'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT2')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT2')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3MHTML'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3MHTML')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3MHTML')/lxml:description" />
          <xsl:with-param name="maxlength" select="65535" />
          <xsl:with-param name="rdmlxDataType" select="'varchar| |65535'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3WEBUSR'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3WEBUSR')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3WEBUSR')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFID'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWAMNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWAMNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWAMNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWRTNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWRTNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWRTNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="20" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |20'" />
          <xsl:with-param name="size" select="20" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_html_list" wd:listname="TOP_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_TOP_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LEFT_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LEFT_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LS_MLNVAR">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LS_MLNVAR']" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_TOP_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_TOP_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_TOP_MENU']" />
          <xsl:with-param name="listname" select="'TOP_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_TOP_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_TOP_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_TOP_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_TOP_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LEFT_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LEFT_MENU']" />
          <xsl:with-param name="listname" select="'LEFT_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LEFT_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRVAL">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRFLD">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[5]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LEFT_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LEFT_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRVAL']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRVAL']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRFLD']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRFLD']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LS_MLNVAR']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LS_MLNVAR']" />
          <xsl:with-param name="listname" select="'LS_MLNVAR'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LS_MLNVAR_content_1.override">
          <span class="FXVARNAM">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="FXVARTXT">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LS_MLNVAR']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LS_MLNVAR']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARNAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARNAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="35" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |35'" />
          <xsl:with-param name="size" select="35" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARTXT']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARTXT']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="/lxml:data" mode="content.hidden">
          <xsl:apply-imports />
          
          <input type="hidden" id="{$lweb_WRName}_LW3SFCUR" name="LW3SFCUR" value="{key('field-value', 'LW3SFCUR')}" data-lstddatatype="packed|2|0|." wd:caption="{key('field-caption', 'LW3SFCUR')/lxml:description}" />
          
          </xsl:template>
          </xsl:transform>

      - Language:           ENG
        Technology Service: LANSA XHTML

        XSL: |
          <?xml version="1.0"?>
          <!-- Web application : WMANSF              Store Front Maintenance                 -->
          <!-- Web routine     : bld_cnstmf                                                  -->
          <!-- Timestamp       : 2008-08-19T13:11:01-05:00                                   -->
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd"
                         xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data"
                         xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design"
                         xmlns="http://www.w3.org/1999/xhtml"
                         xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
             <xsl:import href="std_keys.xsl" />
             <xsl:import href="std_variables.xsl" />
             <xsl:import href="wmansf_layout.xsl" />
             <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8"
                         indent="no" />
          
             <xsl:template match="/">
                <xsl:comment> Web application : WMANSF              Store Front Maintenance</xsl:comment>
                <xsl:comment> Web routine     : bld_cnstmf</xsl:comment>
                <xsl:call-template name="layout" />
             </xsl:template>
          
             <xsl:template match="/lxml:data">
                <div class="hidden">
                   <input type="hidden" name="LW3SFCUR"
                          value="{key('field-value', 'LW3SFCUR')}" />
                </div>
                <table cellspacing="3" cellpadding="0" summary="" border="0">
                   <tbody>
                      <tr>
                         <td class="caption">
                            <xsl:value-of select="key('field-caption', 'LADMID')/lxml:description" />
                         </td>
                         <td>
                            <input onchange="return isValidNumber(this, '2', '0', '.')"
                                   class="number" maxlength="5" size="5" name="LADMID"
                                   value="{key('field-value', 'LADMID')}" />
                         </td>
                      </tr>
                      <tr>
                         <td class="caption">
                            <xsl:value-of select="key('field-caption', 'LADAID')/lxml:description" />
                         </td>
                         <td>
                            <input onchange="return isValidNumber(this, '2', '0', '.')"
                                   class="number" maxlength="5" size="5" name="LADAID"
                                   value="{key('field-value', 'LADAID')}" />
                         </td>
                      </tr>
                      <tr>
                         <td class="caption">
                            <xsl:value-of select="key('field-caption', 'ADMCNT1')/lxml:description" />
                         </td>
                         <td>
                            <input onchange="return isValidNumber(this, '7', '0', '.')"
                                   class="number" maxlength="12" size="12" name="ADMCNT1"
                                   value="{key('field-value', 'ADMCNT1')}" />
                         </td>
                      </tr>
                      <tr>
                         <td class="caption">
                            <xsl:value-of select="key('field-caption', 'ADMCNT2')/lxml:description" />
                         </td>
                         <td>
                            <input onchange="return isValidNumber(this, '7', '0', '.')"
                                   class="number" maxlength="12" size="12" name="ADMCNT2"
                                   value="{key('field-value', 'ADMCNT2')}" />
                         </td>
                      </tr>
                   </tbody>
                </table>
                <br />
                <xsl:apply-templates select="/lxml:data/lxml:lists/lxml:list[@name='TOP_MENU']">
                   <xsl:with-param name="allow_sort" select="true()" />
                   <xsl:with-param name="allow_col_resize" select="true()" />
                </xsl:apply-templates>
                <br />
                <xsl:apply-templates select="/lxml:data/lxml:lists/lxml:list[@name='LEFT_MENU']">
                   <xsl:with-param name="allow_sort" select="true()" />
                   <xsl:with-param name="allow_col_resize" select="true()" />
                </xsl:apply-templates>
             </xsl:template>
          
             <xsl:template match="/lxml:data/lxml:lists/lxml:list[@name='TOP_MENU']">
                <xsl:param name="allow_sort" select="true()" wd:type="std:boolean"
                           wd:tip_id="" />
                <xsl:param name="allow_col_resize" select="true()" wd:type="std:boolean"
                           wd:tip_id="" />
                <xsl:variable name="thelist"
                              select="/lxml:data/lxml:lists/lxml:list[@name='TOP_MENU']" />
                <script language="javascript">
                   <xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text>
                      function init_stdGrid_TOP_MENU() {
                      var g = register_std_grid('TOP_MENU',3);
                      g.allowSort = <xsl:value-of select="$allow_sort" />;
                      g.allowColResize = <xsl:value-of select="$allow_col_resize" />;
                      var col = 0;
                      var ss = document.styleSheets[0];
                      var gid = '.std_grid#TOP_MENU ';
                      
                      }
                      init_stdGrid_TOP_MENU();
                      <xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text>
                </script>
                <input type="hidden" name="TOP_MENU.."
                       value="{count(lxml:list-entries/lxml:entry[1])}" />
                <div id="TOP_MENU_wrap" class="std_grid_wrapper">
                   <xsl:if test="/lxml:data/lxml:context[@design]">
                      <xsl:attribute name="class">std_grid_wrapper_designtime</xsl:attribute>
                   </xsl:if>
                   <table id="TOP_MENU" class="std_grid">
                      <thead>
                         <tr class="list-h">
                            <th class="text LADMDSC std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADMWAM std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADMWR std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                         </tr>
                      </thead>
                      <tbody>
                         <xsl:for-each select="$thelist/lxml:list-entries/lxml:entry">
                            <xsl:variable name="LADMDSC" select="lxml:column[1]" />
                            <xsl:variable name="LADMWAM" select="lxml:column[2]" />
                            <xsl:variable name="LADMWR" select="lxml:column[3]" />
                            <tr __oddrc="list-o" __evenrc="list-e">
                               <xsl:attribute name="class">
                                  <xsl:choose>
                                     <xsl:when test="position() mod 2">list-o</xsl:when>
                                     <xsl:otherwise>list-e</xsl:otherwise>
                                  </xsl:choose>
                               </xsl:attribute>
                               <td class="LADMDSC">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMDSC" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMDSC/@id}" class="text" maxlength="30"
                                         size="30" name="{$LADMDSC/@id}"
                                         value="{$LADMDSC}" />
                               </td>
                               <td class="LADMWAM">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMWAM" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMWAM/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADMWAM/@id}"
                                         value="{$LADMWAM}" />
                               </td>
                               <td class="LADMWR">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMWR" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMWR/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADMWR/@id}" value="{$LADMWR}" />
                               </td>
                            </tr>
                         </xsl:for-each>
                      </tbody>
                   </table>
                </div>
             </xsl:template>
          
             <xsl:template match="/lxml:data/lxml:lists/lxml:list[@name='LEFT_MENU']">
                <xsl:param name="allow_sort" select="true()" wd:type="std:boolean"
                           wd:tip_id="" />
                <xsl:param name="allow_col_resize" select="true()" wd:type="std:boolean"
                           wd:tip_id="" />
                <xsl:variable name="thelist"
                              select="/lxml:data/lxml:lists/lxml:list[@name='LEFT_MENU']" />
                <script language="javascript">
                   <xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text>
                      function init_stdGrid_LEFT_MENU() {
                      var g = register_std_grid('LEFT_MENU',5);
                      g.allowSort = <xsl:value-of select="$allow_sort" />;
                      g.allowColResize = <xsl:value-of select="$allow_col_resize" />;
                      var col = 0;
                      var ss = document.styleSheets[0];
                      var gid = '.std_grid#LEFT_MENU ';
                      
                      }
                      init_stdGrid_LEFT_MENU();
                      <xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text>
                </script>
                <input type="hidden" name="LEFT_MENU.."
                       value="{count(lxml:list-entries/lxml:entry[1])}" />
                <div id="LEFT_MENU_wrap" class="std_grid_wrapper">
                   <xsl:if test="/lxml:data/lxml:context[@design]">
                      <xsl:attribute name="class">std_grid_wrapper_designtime</xsl:attribute>
                   </xsl:if>
                   <table id="LEFT_MENU" class="std_grid">
                      <thead>
                         <tr class="list-h">
                            <th class="text LADMDSC std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADMWAM std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADMWR std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADRVAL std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                            <th class="utext LADRFLD std_grid_sort_indicator"
                                __decimalseparator="" __formattype="alpha" __mode="input"
                                __allowsort="true">
                               <xsl:for-each select="$thelist/lxml:list-header/lxml:header[5]/*[.//text()[normalize-space(.)!='']]">
                                  <xsl:value-of select="." />
                                  <xsl:if test="not(position() = last())">
                                     <br />
                                  </xsl:if>
                               </xsl:for-each>
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                         </tr>
                      </thead>
                      <tbody>
                         <xsl:for-each select="$thelist/lxml:list-entries/lxml:entry">
                            <xsl:variable name="LADMDSC" select="lxml:column[1]" />
                            <xsl:variable name="LADMWAM" select="lxml:column[2]" />
                            <xsl:variable name="LADMWR" select="lxml:column[3]" />
                            <xsl:variable name="LADRVAL" select="lxml:column[4]" />
                            <xsl:variable name="LADRFLD" select="lxml:column[5]" />
                            <tr __oddrc="list-o" __evenrc="list-e">
                               <xsl:attribute name="class">
                                  <xsl:choose>
                                     <xsl:when test="position() mod 2">list-o</xsl:when>
                                     <xsl:otherwise>list-e</xsl:otherwise>
                                  </xsl:choose>
                               </xsl:attribute>
                               <td class="LADMDSC">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMDSC" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMDSC/@id}" class="text" maxlength="30"
                                         size="30" name="{$LADMDSC/@id}"
                                         value="{$LADMDSC}" />
                               </td>
                               <td class="LADMWAM">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMWAM" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMWAM/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADMWAM/@id}"
                                         value="{$LADMWAM}" />
                               </td>
                               <td class="LADMWR">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADMWR" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADMWR/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADMWR/@id}" value="{$LADMWR}" />
                               </td>
                               <td class="LADRVAL">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADRVAL" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADRVAL/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADRVAL/@id}"
                                         value="{$LADRVAL}" />
                               </td>
                               <td class="LADRFLD">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LADRFLD" />
                                  </xsl:attribute>
                                  <input onchange="return isValidText(this, ' ')"
                                         id="{$LADRFLD/@id}" class="utext" maxlength="10"
                                         size="10" name="{$LADRFLD/@id}"
                                         value="{$LADRFLD}" />
                               </td>
                            </tr>
                         </xsl:for-each>
                      </tbody>
                   </table>
                </div>
             </xsl:template>
          </xsl:transform>

  - CHUDSF:
      XML: |
        <?xml version="1.0" encoding="UTF-8"?>
        
        <!-- WAM       : WMANSF - ?
             Webroutine: chudsf - 
             Timestamp : 2015-02-04T12:37:31-06:00 -->
        <lxml:data xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data">
           <lxml:server-instructions>
              <lxml:client-charset></lxml:client-charset>
              <lxml:cookies><lxml:cookie name="STDSESSID"><lxml:value field-name="STDSESSID"></lxml:value>
                    <lxml:expires field-name="LW3CEXPDT"></lxml:expires>
                    <lxml:domain></lxml:domain>
                    <lxml:path>/; HttpOnly</lxml:path>
                    <lxml:secure></lxml:secure>
                 </lxml:cookie>
                 <lxml:cookie name="STDWEBUSR"><lxml:value field-name="STDWEBUSR"></lxml:value>
                    <lxml:expires field-name=""></lxml:expires>
                    <lxml:domain field-name=""></lxml:domain>
                    <lxml:path field-name=""></lxml:path>
                    <lxml:secure field-name=""></lxml:secure>
                 </lxml:cookie>
              </lxml:cookies>
              <lxml:ssi></lxml:ssi>
           </lxml:server-instructions>
           <lxml:context>
              <lxml:user-id>
              </lxml:user-id>
              <lxml:webapplication>WMANSF</lxml:webapplication>
              <lxml:webapplication-title>?</lxml:webapplication-title>
              <lxml:webroutine>chudsf</lxml:webroutine>
              <lxml:webroutine-title></lxml:webroutine-title>
              <lxml:service-name></lxml:service-name>
              <lxml:partition>CML</lxml:partition>
              <lxml:language iso-lang="en">ENG</lxml:language>
              <lxml:dec-separator>.</lxml:dec-separator>
              <lxml:images-path>/images</lxml:images-path>
              <lxml:action-request>/cgi-bin/lansaweb</lxml:action-request>
           </lxml:context>
           <lxml:options>
              <lxml:option name="DBCS">false</lxml:option>
              <lxml:option name="align-right">true</lxml:option>
              <lxml:option name="check-numeric">false</lxml:option>
              <lxml:option name="debug"/>
              <lxml:option name="trace"/>
              <lxml:option name="task"/>
           </lxml:options>
           <lxml:variables/>
           <lxml:messages></lxml:messages>
           </lxml:data>

      Designs:
      - Language:           ENG
        Technology Service: LANSA JQMOBILE

        XSL: |
          <?xml version="1.0" encoding="UTF-8"?>
          
          <!-- WAM       : WMANSF - Store Front Maintenance
               Webroutine: chudsf - 
               Timestamp : 2014-06-13T12:10:22-04:00 -->
          
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          
          <xsl:import href="std_keys.xsl" />
          <xsl:import href="std_variables.xsl" />
          <xsl:import href="std_hidden.xsl" />
          <xsl:import href="wmansf_layout.xsl" />
          <xsl:import href="std_html_list.xsl" />
          <xsl:import href="std_html_li.xsl" />
          <xsl:import href="std_repeater.xsl" />
          <xsl:import href="std_input.xsl" />
          
          <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no" />
          
          <lxml:data>
          <lxml:internal_id id="std_html_list_TOP_MENU" />
          <lxml:internal_id id="std_html_li_h_TOP_MENU" />
          <lxml:internal_id id="std_repeater_TOP_MENU" />
          <lxml:internal_id id="std_html_li_TOP_MENU" />
          <lxml:internal_id id="std_html_list_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_h_LEFT_MENU" />
          <lxml:internal_id id="std_repeater_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_LEFT_MENU" />
          <lxml:internal_id id="std_html_list_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_h_LS_MLNVAR" />
          <lxml:internal_id id="std_repeater_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_LS_MLNVAR" />
          <lxml:internal_id id="std_html_list_METALST" />
          <lxml:internal_id id="std_html_li_h_METALST" />
          <lxml:internal_id id="std_repeater_METALST" />
          <lxml:internal_id id="std_html_li_METALST" />
          <lxml:internal_id id="std_html_list_LW3MTALST" />
          <lxml:internal_id id="std_html_li_h_LW3MTALST" />
          <lxml:internal_id id="std_repeater_LW3MTALST" />
          <lxml:internal_id id="std_html_li_LW3MTALST" />
          </lxml:data>
          
          <xsl:template match="/">
          <xsl:call-template name="layout" />
          </xsl:template>
          
          <xsl:template match="/lxml:data">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADMID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADMID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADMID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADAID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADAID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADAID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT1'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT1')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT1')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT2'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT2')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT2')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3MHTML'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3MHTML')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3MHTML')/lxml:description" />
          <xsl:with-param name="maxlength" select="65535" />
          <xsl:with-param name="rdmlxDataType" select="'varchar| |65535'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3WEBUSR'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3WEBUSR')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3WEBUSR')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWAMNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWAMNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWAMNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWRTNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWRTNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWRTNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="20" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |20'" />
          <xsl:with-param name="size" select="20" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'STDRENTRY'" />
          <xsl:with-param name="value" select="key('field-value', 'STDRENTRY')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'STDRENTRY')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFID'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFSEQ'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFSEQ')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFSEQ')/lxml:description" />
          <xsl:with-param name="maxlength" select="7" />
          <xsl:with-param name="rdmlxDataType" select="'packed|3|0|.'" />
          <xsl:with-param name="size" select="7" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3NAME'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3NAME')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3NAME')/lxml:description" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="3" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |3'" />
          <xsl:with-param name="size" select="3" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFCSS'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFCSS')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFCSS')/lxml:description" />
          <xsl:with-param name="maxlength" select="25" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |25'" />
          <xsl:with-param name="size" select="25" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFIMG'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFIMG')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFIMG')/lxml:description" />
          <xsl:with-param name="maxlength" select="50" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |50'" />
          <xsl:with-param name="size" select="50" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3IDTFLG'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3IDTFLG')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3IDTFLG')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3DOMAIN'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3DOMAIN')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3DOMAIN')/lxml:description" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3JDEC01'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3JDEC01')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3JDEC01')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3EMLEML'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3EMLEML')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3EMLEML')/lxml:description" />
          <xsl:with-param name="maxlength" select="50" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |50'" />
          <xsl:with-param name="size" select="50" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3CRQEML'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3CRQEML')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3CRQEML')/lxml:description" />
          <xsl:with-param name="maxlength" select="50" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |50'" />
          <xsl:with-param name="size" select="50" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3CATITM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3CATITM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3CATITM')/lxml:description" />
          <xsl:with-param name="maxlength" select="15" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |15'" />
          <xsl:with-param name="size" select="15" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3B2BIND'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3B2BIND')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3B2BIND')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXANALYZE'" />
          <xsl:with-param name="value" select="key('field-value', 'FXANALYZE')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXANALYZE')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXANACCT'" />
          <xsl:with-param name="value" select="key('field-value', 'FXANACCT')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXANACCT')/lxml:description" />
          <xsl:with-param name="maxlength" select="50" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |50'" />
          <xsl:with-param name="size" select="50" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3CURCD'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3CURCD')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3CURCD')/lxml:description" />
          <xsl:with-param name="maxlength" select="3" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |3'" />
          <xsl:with-param name="size" select="3" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3CURSM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3CURSM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3CURSM')/lxml:description" />
          <xsl:with-param name="maxlength" select="3" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |3'" />
          <xsl:with-param name="size" select="3" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3DPSYM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3DPSYM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3DPSYM')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3TSSYM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3TSSYM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3TSSYM')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3UCSVF'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3UCSVF')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3UCSVF')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SMEDF'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SMEDF')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SMEDF')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFTHEM'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFTHEM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFTHEM')/lxml:description" />
          <xsl:with-param name="maxlength" select="25" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |25'" />
          <xsl:with-param name="size" select="25" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'W_ADDFLG'" />
          <xsl:with-param name="value" select="key('field-value', 'W_ADDFLG')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'W_ADDFLG')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'W_ADMERR'" />
          <xsl:with-param name="value" select="key('field-value', 'W_ADMERR')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'W_ADMERR')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_html_list" wd:listname="TOP_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_TOP_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LEFT_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LEFT_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LS_MLNVAR">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LS_MLNVAR']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="METALST">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_METALST']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LW3MTALST">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LW3MTALST']" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_TOP_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_TOP_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_TOP_MENU']" />
          <xsl:with-param name="listname" select="'TOP_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_TOP_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_TOP_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_TOP_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_TOP_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LEFT_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LEFT_MENU']" />
          <xsl:with-param name="listname" select="'LEFT_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LEFT_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRVAL">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRFLD">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[5]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LEFT_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LEFT_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRVAL']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRVAL']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRFLD']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRFLD']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LS_MLNVAR']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LS_MLNVAR']" />
          <xsl:with-param name="listname" select="'LS_MLNVAR'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LS_MLNVAR_content_1.override">
          <span class="FXVARNAM">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="FXVARTXT">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LS_MLNVAR']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LS_MLNVAR']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARNAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARNAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="35" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |35'" />
          <xsl:with-param name="size" select="35" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARTXT']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARTXT']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_METALST']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_METALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_METALST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_METALST']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_METALST']" />
          <xsl:with-param name="listname" select="'METALST'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_METALST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_METALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_METALST_content_1.override">
          <span class="LW3MTAKEY">
          <xsl:for-each select="key('list','METALST')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="W_PAGDSC">
          <xsl:for-each select="key('list','METALST')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="W_METATIT">
          <xsl:for-each select="key('list','METALST')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="W_METAKEY">
          <xsl:for-each select="key('list','METALST')/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="W_METADES">
          <xsl:for-each select="key('list','METALST')/lxml:list-header/lxml:header[5]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_METALST']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_METALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_METALST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_METALST']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_METALST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_METALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_METALST_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3MTAKEY']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3MTAKEY']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'METALST_LW3MTAKEY')/lxml:heading-1,' ',key('column-caption', 'METALST_LW3MTAKEY')/lxml:heading-2,' ',key('column-caption', 'METALST_LW3MTAKEY')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="20" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |20'" />
          <xsl:with-param name="size" select="20" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_PAGDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_PAGDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'METALST_W_PAGDSC')/lxml:heading-1,' ',key('column-caption', 'METALST_W_PAGDSC')/lxml:heading-2,' ',key('column-caption', 'METALST_W_PAGDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="100" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |100'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_METATIT']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_METATIT']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'METALST_W_METATIT')/lxml:heading-1,' ',key('column-caption', 'METALST_W_METATIT')/lxml:heading-2,' ',key('column-caption', 'METALST_W_METATIT')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_METAKEY']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_METAKEY']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'METALST_W_METAKEY')/lxml:heading-1,' ',key('column-caption', 'METALST_W_METAKEY')/lxml:heading-2,' ',key('column-caption', 'METALST_W_METAKEY')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_METADES']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_METADES']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'METALST_W_METADES')/lxml:heading-1,' ',key('column-caption', 'METALST_W_METADES')/lxml:heading-2,' ',key('column-caption', 'METALST_W_METADES')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LW3MTALST']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LW3MTALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LW3MTALST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LW3MTALST']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LW3MTALST']" />
          <xsl:with-param name="listname" select="'LW3MTALST'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LW3MTALST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LW3MTALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LW3MTALST_content_1.override">
          <span class="LW3PAGDSC">
          <xsl:for-each select="key('list','LW3MTALST')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LW3MTALST']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LW3MTALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LW3MTALST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LW3MTALST']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LW3MTALST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LW3MTALST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LW3MTALST_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3MTAKEY']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3MTAKEY']" />
          <xsl:with-param name="displayMode" select="'hidden'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LW3MTALST_LW3MTAKEY')/lxml:heading-1,' ',key('column-caption', 'LW3MTALST_LW3MTAKEY')/lxml:heading-2,' ',key('column-caption', 'LW3MTALST_LW3MTAKEY')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="20" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |20'" />
          <xsl:with-param name="size" select="20" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3PAGDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3PAGDSC']" />
          <xsl:with-param name="displayMode" select="'output'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LW3MTALST_LW3PAGDSC')/lxml:heading-1,' ',key('column-caption', 'LW3MTALST_LW3PAGDSC')/lxml:heading-2,' ',key('column-caption', 'LW3MTALST_LW3PAGDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="100" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |100'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3MANMTA']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3MANMTA']" />
          <xsl:with-param name="displayMode" select="'hidden'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LW3MTALST_LW3MANMTA')/lxml:heading-1,' ',key('column-caption', 'LW3MTALST_LW3MANMTA')/lxml:heading-2,' ',key('column-caption', 'LW3MTALST_LW3MANMTA')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="/lxml:data" mode="content.hidden">
          <xsl:apply-imports />
          
          <input type="hidden" id="{$lweb_WRName}_LW3SFCUR" name="LW3SFCUR" value="{key('field-value', 'LW3SFCUR')}" data-lstddatatype="packed|2|0|." wd:caption="{key('field-caption', 'LW3SFCUR')/lxml:description}" />
          <input type="hidden" id="{$lweb_WRName}_W_DEL" name="W_DEL" value="{key('field-value', 'W_DEL')}" data-lstddatatype="alpha| |1" wd:caption="{key('field-caption', 'W_DEL')/lxml:description}" />
          <input type="hidden" id="{$lweb_WRName}_W_DELMSG" name="W_DELMSG" value="{key('field-value', 'W_DELMSG')}" data-lstddatatype="alpha| |150" wd:caption="{key('field-caption', 'W_DELMSG')/lxml:description}" />
          
          </xsl:template>
          </xsl:transform>

      - Language:           ENG
        Technology Service: LANSA XHTML

        XSL: |
          <?xml version="1.0"?>
          
          <!-- Web application : WMANSF              Store Front Maintenance                 -->
          <!-- Web routine     : chudsf                                                      -->
          <!-- Timestamp       : 2007-12-11T12:18:49-05:00                                   -->
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
             <xsl:import href="std_keys.xsl"/>
             <xsl:import href="std_variables.xsl"/>
             <xsl:import href="std_button.xsl"/>
             <xsl:import href="wadmlgn1_layout.xsl"/>
             <xsl:import href="std_dropdown.xsl"/>
             <xsl:import href="desc_lookup.xsl"/>
             <xsl:import href="multi_button.xsl"/>
             <xsl:import href="std_checkbox.xsl"/>
             <lxml:data/>
             <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no"/>
             <xsl:template match="/">
                <xsl:comment> Web application : WMANSF              Store Front Maintenance</xsl:comment>
                <xsl:comment> Web routine     : chudsf</xsl:comment>
                <xsl:call-template name="layout">
                   <!-- <xsl:with-param name="has_form" select="?" /> -->
                   <!-- <xsl:with-param name="no_layout" select="?" /> -->
                   <!-- <xsl:with-param name="body_class" select="?" /> -->
                   <!-- <xsl:with-param name="form_class" select="?" /> -->
                   <xsl:with-param name="show_title" select="false()"/>
                   <!-- <xsl:with-param name="title_text" select="?" /> -->
                   <!-- <xsl:with-param name="show_messages" select="?" /> -->
                   <!-- <xsl:with-param name="onload_script" select="?" /> -->
                   <!-- <xsl:with-param name="onunload_script" select="?" /> -->
                   <!-- <xsl:with-param name="javascript_files" select="?" /> -->
                   <!-- <xsl:with-param name="theme_css_filename" select="?" /> -->
                   <!-- <xsl:with-param name="css_files" select="?" /> -->
                </xsl:call-template>
             </xsl:template>
             <xsl:template match="/lxml:data">
                <script type="text/javascript" src="/js/stickytooltips.js">
          /***********************************************
          * Sticky Tooltip script- (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
          * This notice MUST stay intact for legal use
          * Visit Dynamic Drive at http://www.dynamicdrive.com/ for this script and 100s more
          ***********************************************/
                </script>
                <script type="text/javascript">
          function delete_confirm()
           {
            var msg=document.getElementById('W_DELMSG').value;
            var r=confirm(msg);
           if (r==true)
             {
             document.getElementById('W_DEL').value = 'Y';
             }
           else
             {
             document.getElementById('W_DEL').value = 'N';
             }
           }
                </script>
                <div class="hidden">
                   <input onchange="return isValidText(this, ' ')" id="W_ADDFLG" class="utext" maxlength="1" size="1" name="W_ADDFLG" value="{key('field-value', 'W_ADDFLG')}"/>
                   <input onchange="return isValidText(this, ' ')" id="STDRENTRY" class="utext" maxlength="1" size="1" name="STDRENTRY" value="{key('field-value', 'STDRENTRY')}"/>
                   <input onchange="return isValidNumber(this, '2', '0', '.')" class="number" maxlength="5" size="5" name="LW3SFID" value="{key('field-value', 'LW3SFID')}"/>
                   <input onchange="return isValidNumber(this, '3', '0', '.')" class="number" maxlength="7" size="7" name="LW3SFSEQ" value="{key('field-value', 'LW3SFSEQ')}"/>
                   <input id="W_DELMSG" maxlength="150" size="150" type="hidden" name="W_DELMSG" value="{key('field-value', 'W_DELMSG')}"/>
                   <input id="W_DEL" maxlength="1" size="1" type="hidden" name="W_DEL" value="{key('field-value', 'W_DEL')}"/>
                   <input type="hidden" name="LW3SFCUR" value="{key('field-value', 'LW3SFCUR')}"/>
                </div>
                <xsl:if test="key('field-value', 'W_ADMERR') != 'Y' or $lweb_design_mode">
                   <table width="100%">
                      <tbody>
                         <tr>
                            <td class=" " colspan="2" align="left">
                               <h1 style="color: #002888;">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'WMANSF_CHUDSF'"/>
                                  </xsl:call-template>
                               </h1>
                               <div>
                                  <table>
                                     <tbody>
                                        <tr>
                                           <td>
                                              <span data-tooltip="sticky1">
                                                 <img src="/img/QmarkHelp.gif" width="20" height="20"/>
                                              </span>
                                              <!--HTML for the tooltips-->
                                              <div id="mystickytooltip" class="stickytooltip">
                                                 <div style="padding:5px">
                                                    <div id="sticky1" class="atip" style="width:250px">
                                                       <h1>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_HDR'"/>
                                                          </xsl:call-template>
                                                       </h1>
                                                       <p>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_1'"/>
                                                          </xsl:call-template>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_2'"/>
                                                          </xsl:call-template>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_3'"/>
                                                          </xsl:call-template>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_4'"/>
                                                          </xsl:call-template>
                                                          <xsl:call-template name="desc_lookup">
                                                             <xsl:with-param name="name" select="'TXT_STOREHELP_5'"/>
                                                          </xsl:call-template>
                                                       </p>
                                                    </div>
                                                    <!-- <div class="stickystatus"></div> -->
                                                 </div>
                                              </div>
                                           </td>
                                        </tr>
                                     </tbody>
                                  </table>
                               </div>
                               <div class="main_separator" style=" "></div>
                            </td>
                         </tr>
                      </tbody>
                   </table>
                   <fieldset>
                      <legend class="bold">
                         <xsl:call-template name="desc_lookup">
                            <xsl:with-param name="name" select="'LBL_STOREFRONT_DETAILS'"/>
                         </xsl:call-template>
                      </legend>
                      <br/>
                      <table cellspacing="3" cellpadding="3" summary="" border="0">
                         <tbody>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_STOREFRONT_NAME'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3NAME" class="text" maxlength="30" size="30" name="LW3NAME" value="{key('field-value', 'LW3NAME')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_SHORT_NAME'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3SNAM" class="utext" maxlength="3" size="3" name="LW3SNAM" value="{key('field-value', 'LW3SNAM')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_INDENT_SUBCATS'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="captionfield" select="'LW3CDES'"/>
                                     <xsl:with-param name="codefield" select="'LW3IDTFLG'"/>
                                     <xsl:with-param name="listname" select="'IDTFLGLST'"/>
                                     <xsl:with-param name="name" select="'LW3IDTFLG'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3IDTFLG')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_DOMAIN'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3DOMAIN" class="utext" maxlength="30" size="30" name="LW3DOMAIN" value="{key('field-value', 'LW3DOMAIN')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_EMAIL_LIST_EMAIL'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3EMLEML" class="utext" maxlength="50" size="50" name="LW3EMLEML" value="{key('field-value', 'LW3EMLEML')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_CAT_REQUEST_EMAIL'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3CRQEML" class="utext" maxlength="50" size="50" name="LW3CRQEML" value="{key('field-value', 'LW3CRQEML')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_CAT_ITEM'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3CATITM" class="utext" maxlength="25" size="25" name="LW3CATITM" value="{key('field-value', 'LW3CATITM')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_B2C_CUSTOMER'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidNumber(this, '8', '0', '.')" class="number" maxlength="13" size="13" name="LW3JDEC01" value="{key('field-value', 'LW3JDEC01')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_B2B_B2C_INDICATOR'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="captionfield" select="'LW3CDES'"/>
                                     <xsl:with-param name="codefield" select="'LW3B2BIND'"/>
                                     <xsl:with-param name="listname" select="'B2BINDLST'"/>
                                     <xsl:with-param name="name" select="'LW3B2BIND'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3B2BIND')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_ANALYTICS_SWITCH'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="codefield" select="'FXANALYZE'"/>
                                     <xsl:with-param name="captionfield" select="'LW3CDES'"/>
                                     <xsl:with-param name="listname" select="'FXANALLST'"/>
                                     <xsl:with-param name="name" select="'FXANALYZE'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'FXANALYZE')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_ANALYTICS_ACCOUNT'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="FXANACCT" class="utext" maxlength="50" size="50" name="FXANACCT" value="{key('field-value', 'FXANACCT')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_CURRENCY_CODE'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3CURCD" class="utext" maxlength="3" size="3" name="LW3CURCD" value="{key('field-value', 'LW3CURCD')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_CURRENCY_SYMBOL'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3CURSM" class="utext" maxlength="3" size="3" name="LW3CURSM" value="{key('field-value', 'LW3CURSM')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_DEC_POINT_SYMBOL'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3DPSYM" class="utext" maxlength="1" size="1" name="LW3DPSYM" value="{key('field-value', 'LW3DPSYM')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_THOUSANDS_SEP_SYMBOL'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3TSSYM" class="utext" maxlength="1" size="1" name="LW3TSSYM" value="{key('field-value', 'LW3TSSYM')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_CSV_UPLOAD'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="captionfield" select="'LW3CDES'"/>
                                     <xsl:with-param name="codefield" select="'LW3UCSVF'"/>
                                     <xsl:with-param name="listname" select="'UCSVFLST'"/>
                                     <xsl:with-param name="name" select="'LW3UCSVF'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3UCSVF')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_SOCIAL_MEDIA'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="captionfield" select="'LW3CDES'"/>
                                     <xsl:with-param name="codefield" select="'LW3SMEDF'"/>
                                     <xsl:with-param name="listname" select="'SMEDFLST'"/>
                                     <xsl:with-param name="name" select="'LW3SMEDF'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3SMEDF')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_THEME'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_dropdown">
                                     <xsl:with-param name="captionfield" select="'LW3THNAM'"/>
                                     <xsl:with-param name="codefield" select="'LW3THNAM'"/>
                                     <xsl:with-param name="listname" select="'SFTHEMLST'"/>
                                     <xsl:with-param name="name" select="'LW3SFTHEM'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3SFTHEM')"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <!-- <xsl:with-param name="items" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_field" select="?" /> -->
                                     <!-- <xsl:with-param name="selector_value_eq" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield1" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield2" select="?" /> -->
                                     <!-- <xsl:with-param name="tagfield3" select="?" /> -->
                                     <!-- <xsl:with-param name="submit_tagfields" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="on_change_wrname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="disabled" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  </xsl:call-template>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_BRAND_CODE'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3BRNCD" class="utext" maxlength="3" size="3" name="LW3BRNCD" value="{key('field-value', 'LW3BRNCD')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_BRAND_DESC'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="LW3BRNDS" class="utext" maxlength="40" size="40" name="LW3BRNDS" value="{key('field-value', 'LW3BRNDS')}"/>
                               </td>
                            </tr>
                            <tr>
                               <td class="caption">
                                  <xsl:call-template name="desc_lookup">
                                     <xsl:with-param name="name" select="'LBL_USE_CONTENT_MENU'"/>
                                  </xsl:call-template>
                               </td>
                               <td>
                                  <xsl:call-template name="std_checkbox">
                                     <xsl:with-param name="caption" select="''"/>
                                     <xsl:with-param name="display_mode" select="'input'"/>
                                     <xsl:with-param name="name" select="'LW3UCMNUF'"/>
                                     <xsl:with-param name="value" select="key('field-value', 'LW3UCMNUF')"/>
                                  </xsl:call-template>
                               </td>
                            </tr>
                         </tbody>
                      </table>
                      <br/>
                   </fieldset>
                   <br/>
                   <br/>
                   <fieldset>
                      <legend class="bold">
                         <xsl:call-template name="desc_lookup">
                            <xsl:with-param name="name" select="'LBL_SEO_META_DATA'"/>
                         </xsl:call-template>
                      </legend>
                      <table cellspacing="5" cellpadding="5" border="0">
                         <tbody>
                            <tr>
                               <td>
                                  <xsl:apply-templates select="/lxml:data/lxml:lists/lxml:list[@name='METALST']" wd:listname="METALST"/>
                               </td>
                            </tr>
                         </tbody>
                      </table>
                   </fieldset>
                   <br/>
                   <table cellspacing="5" cellpadding="5">
                      <tbody>
                         <tr>
                            <td>
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="hide_if" select="key('field-value', 'W_ADDFLG') != 'Y'"/>
                                  <xsl:with-param name="on_click_wrname" select="'chudsf'"/>
                                  <xsl:with-param name="reentryvalue" select="'A'"/>
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_ADD')"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_22400')"/>
                                  <xsl:with-param name="moclass" select="'multi_button_mo'"/>
                                  <xsl:with-param name="reentryfield" select="'STDRENTRY'"/>
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="height_design" select="?" /> -->
                                  <!-- <xsl:with-param name="on_click_wamname" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="title" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="default_button" select="?" /> -->
                               </xsl:call-template>
                            </td>
                            <td>
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="hide_if" select="key('field-value', 'W_ADDFLG') = 'Y'"/>
                                  <xsl:with-param name="on_click_wrname" select="'chudsf'"/>
                                  <xsl:with-param name="reentryvalue" select="'C'"/>
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_CHANGE')"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_22400')"/>
                                  <xsl:with-param name="moclass" select="'multi_button_mo'"/>
                                  <xsl:with-param name="reentryfield" select="'STDRENTRY'"/>
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="height_design" select="?" /> -->
                                  <!-- <xsl:with-param name="on_click_wamname" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="title" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="default_button" select="?" /> -->
                               </xsl:call-template>
                            </td>
                            <td>
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="presubmit_js" select="'delete_confirm();'"/>
                                  <xsl:with-param name="on_click_wrname" select="'chudsf'"/>
                                  <xsl:with-param name="hide_if" select="key('field-value', 'W_ADDFLG') = 'Y'"/>
                                  <xsl:with-param name="reentryvalue" select="'D'"/>
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_DELETE')"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_22400')"/>
                                  <xsl:with-param name="moclass" select="'multi_button_mo'"/>
                                  <xsl:with-param name="reentryfield" select="'STDRENTRY'"/>
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="height_design" select="?" /> -->
                                  <!-- <xsl:with-param name="on_click_wamname" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="title" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="default_button" select="?" /> -->
                               </xsl:call-template>
                            </td>
                            <td>
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="on_click_wrname" select="'wrInit'"/>
                                  <xsl:with-param name="on_click_wamname" select="'ADMSITEMP'"/>
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_SITE_MAP_PAGES')"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_10298')"/>
                                  <!-- <xsl:with-param name="currentrowhfield" select="?" /> -->
                                  <!-- <xsl:with-param name="currentrownumval" select="?" /> -->
                                  <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                  <!-- <xsl:with-param name="reentryvalue" select="?" /> -->
                                  <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="url" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="moclass" select="?" /> -->
                                  <!-- <xsl:with-param name="padding" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="hide_focus" select="?" /> -->
                                  <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="inline" select="?" /> -->
                               </xsl:call-template>
                               <!-- xsl:call-template name="multi_button">
                               <xsl:with-param name="on_click_wrname" select="'chudsf'" />
                               <xsl:with-param name="on_click_wamname" select="'WMANSF'" />
                               <xsl:with-param name="reentryvalue" select="'T'" />
                               <xsl:with-param name="caption"
                                               select="key('desc-lookup', 'BTN_BUILD_EMAIL_EVENTS')" />
                               <xsl:with-param name="name"
                                               select="concat('o', position(), '_LANSA_22400')" />
                               <xsl:with-param name="moclass" select="'multi_button_mo'" />
                               <xsl:with-param name="reentryfield" select="'STDRENTRY'" / -->
                               <!-- <xsl:with-param name="hide_if" select="?" /> -->
                               <!-- <xsl:with-param name="formname" select="?" /> -->
                               <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                               <!-- <xsl:with-param name="width_design" select="?" /> -->
                               <!-- <xsl:with-param name="height_design" select="?" /> -->
                               <!-- <xsl:with-param name="protocol" select="?" /> -->
                               <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                               <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                               <!-- <xsl:with-param name="disabled" select="?" /> -->
                               <!-- <xsl:with-param name="title" select="?" /> -->
                               <!-- <xsl:with-param name="class" select="?" /> -->
                               <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                               <!-- <xsl:with-param name="tab_index" select="?" /> -->
                               <!-- <xsl:with-param name="default_button" select="?" /> -->
                               <!-- /xsl:call-template -->
                            </td>
                         </tr>
                      </tbody>
                   </table>
                   <br/>
                </xsl:if>
             </xsl:template>
             <xsl:template match="/lxml:data/lxml:lists/lxml:list[@name='METALST']">
                <xsl:variable name="thelist" select="/lxml:data/lxml:lists/lxml:list[@name='METALST']"/>
                <input type="hidden" name="METALST.." value="{count(lxml:list-entries/lxml:entry[1])}"/>
                <div id="METALST_wrap" class="std_grid_wrapper">
                   <xsl:if test="/lxml:data/lxml:context[@design]">
                      <xsl:attribute name="class">std_grid_wrapper_designtime</xsl:attribute>
                   </xsl:if>
                   <table cellspacing="3" cellpadding="3">
                      <thead>
                         <tr class="list-h">
                            <th class="caption" width="40" colspan="2">
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'LBL_PAGE_NAME'"/>
                               </xsl:call-template>
                            </th>
                            <th class="caption">
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'LBL_TITLE_META'"/>
                               </xsl:call-template>
                            </th>
                            <th class="caption">
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'LBL_DESCRIPTION_META'"/>
                               </xsl:call-template>
                            </th>
                            <th class="caption">
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'LBL_KEYWORD_META'"/>
                               </xsl:call-template>
                            </th>
                         </tr>
                      </thead>
                      <tbody>
                         <xsl:for-each select="$thelist/lxml:list-entries/lxml:entry">
                            <xsl:variable name="LW3MTAKEY" select="lxml:column[1]"/>
                            <xsl:variable name="W_PAGDSC" select="lxml:column[2]"/>
                            <xsl:variable name="W_METATIT" select="lxml:column[3]"/>
                            <xsl:variable name="W_METAKEY" select="lxml:column[4]"/>
                            <xsl:variable name="W_METADES" select="lxml:column[5]"/>
                            <tr>
                               <td class="caption" colspan="2">
                                  <input type="hidden" name="{$LW3MTAKEY/@id}" value="{$LW3MTAKEY}"/>
                                  <input type="hidden" name="{$W_PAGDSC/@id}" value="{$W_PAGDSC}"/>
                                  <xsl:value-of select="$W_PAGDSC"/>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="{$W_METATIT/@id}" class="text" maxlength="256" size="55" name="{$W_METATIT/@id}" value="{$W_METATIT}"/>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="{$W_METADES/@id}" class="text" maxlength="256" size="55" name="{$W_METADES/@id}" value="{$W_METADES}"/>
                               </td>
                               <td>
                                  <input onchange="return isValidText(this, ' ')" id="{$W_METAKEY/@id}" class="text" maxlength="256" size="55" name="{$W_METAKEY/@id}" value="{$W_METAKEY}"/>
                               </td>
                            </tr>
                         </xsl:for-each>
                      </tbody>
                   </table>
                </div>
             </xsl:template>
          </xsl:transform>

  - SFMAIN:
      XML: |
        <?xml version="1.0" encoding="UTF-8"?>
        
        <!-- WAM       : WMANSF - ?
             Webroutine: sfmain - Store Front Maintenance
             Timestamp : 2016-07-04T19:42:23-05:00 -->
        
        <lxml:data xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data">
        
        <lxml:server-instructions>
        <lxml:client-charset></lxml:client-charset>
        <lxml:cookies><lxml:cookie name="STDSESSID"><lxml:value field-name="STDSESSID"></lxml:value>
        <lxml:expires field-name="LW3CEXPDT"></lxml:expires>
        <lxml:domain></lxml:domain>
        <lxml:path>/; HttpOnly</lxml:path>
        <lxml:secure></lxml:secure>
        </lxml:cookie>
        <lxml:cookie name="STDWEBUSR"><lxml:value field-name="STDWEBUSR"></lxml:value>
        <lxml:expires field-name=""></lxml:expires>
        <lxml:domain field-name=""></lxml:domain>
        <lxml:path field-name=""></lxml:path>
        <lxml:secure field-name=""></lxml:secure>
        </lxml:cookie>
        </lxml:cookies>
        <lxml:ssi></lxml:ssi>
        </lxml:server-instructions>
        
        <lxml:context>
        <lxml:user-id>LANSAJAN</lxml:user-id>
        <lxml:webapplication>WMANSF</lxml:webapplication>
        <lxml:webapplication-title>?</lxml:webapplication-title>
        <lxml:webroutine>sfmain</lxml:webroutine>
        <lxml:webroutine-title>Store Front Maintenance</lxml:webroutine-title>
        <lxml:service-name></lxml:service-name>
        <lxml:partition>CED</lxml:partition>
        <lxml:language iso-lang="en">ENG</lxml:language>
        <lxml:dec-separator>.</lxml:dec-separator>
        <lxml:images-path>/images</lxml:images-path>
        <lxml:action-request>/cgi-bin/lansaweb</lxml:action-request>
        </lxml:context>
        
        <lxml:options>
        <lxml:option name="DBCS">false</lxml:option>
        <lxml:option name="align-right">true</lxml:option>
        <lxml:option name="check-numeric">false</lxml:option>
        <lxml:option name="debug" />
        <lxml:option name="trace" />
        <lxml:option name="task" />
        </lxml:options>
        
        <lxml:variables />
        
        <lxml:messages></lxml:messages>
        
        <lxml:fields>
        <lxml:field name="LADMID">
        <lxml:caption>
        <lxml:label>Application Men</lxml:label>
        <lxml:description>Application Menu ID</lxml:description>
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LADAID">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Application ID</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Application</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="ADMCNT1">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Top Menu List Counter</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Top</lxml:heading-2>
        <lxml:heading-3>Menu</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="ADMCNT2">
        <lxml:caption>
        <lxml:label>Administration</lxml:label>
        <lxml:description>Administration Left Menu List Count</lxml:description>
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Left</lxml:heading-2>
        <lxml:heading-3>Menu</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3MHTML">
        <lxml:caption>
        <lxml:label>Menu Html</lxml:label>
        <lxml:description>Menu Html</lxml:description>
        <lxml:heading-1>Menu</lxml:heading-1>
        <lxml:heading-2>Html</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3WEBUSR">
        <lxml:caption>
        <lxml:label>User Id</lxml:label>
        <lxml:description>Web User Name</lxml:description>
        <lxml:heading-1>Web</lxml:heading-1>
        <lxml:heading-2>User</lxml:heading-2>
        <lxml:heading-3>Name</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3SFID">
        <lxml:caption>
        <lxml:label>Store Front ID</lxml:label>
        <lxml:description>Store Front ID</lxml:description>
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3SFCUR">
        <lxml:caption>
        <lxml:label>Current Store F</lxml:label>
        <lxml:description>Current Store Front</lxml:description>
        <lxml:heading-1>Current</lxml:heading-1>
        <lxml:heading-2>Store</lxml:heading-2>
        <lxml:heading-3>Front</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="FXWAMNAM">
        <lxml:caption>
        <lxml:label>Wam Name</lxml:label>
        <lxml:description>Wam Name</lxml:description>
        <lxml:heading-1>Wam</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="FXWRTNAM">
        <lxml:caption>
        <lxml:label>Webroutine Name</lxml:label>
        <lxml:description>Webroutine Name</lxml:description>
        <lxml:heading-1>Webroutine</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="W_SFID">
        <lxml:caption>
        <lxml:label>Store Front</lxml:label>
        <lxml:description>Store Front</lxml:description>
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="STDRENTRY">
        <lxml:caption>
        <lxml:label>Std *WEBEVENT</lxml:label>
        <lxml:description>Standard *WEBEVENT template field</lxml:description>
        <lxml:heading-1>Std *WEBEVENT</lxml:heading-1>
        <lxml:heading-2>template field</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="S_PARAG">
        <lxml:caption>
        <lxml:label>S_PARAG</lxml:label>
        <lxml:description>Intro Paragraph</lxml:description>
        <lxml:heading-1>S_PARAG</lxml:heading-1>
        <lxml:heading-2></lxml:heading-2>
        <lxml:heading-3></lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        <lxml:field name="LW3NAME">
        <lxml:caption>
        <lxml:label>Store Front Nam</lxml:label>
        <lxml:description>Store Front Name</lxml:description>
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>Name</lxml:heading-3>
        </lxml:caption>
        <lxml:value />
        </lxml:field>
        </lxml:fields>
        
        <lxml:lists>
        <lxml:list name="TOP_MENU" row-count="5">
        <lxml:list-header>
        <lxml:header name="LADMDSC">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Description</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWAM">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>WAM</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWR">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Web</lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0001.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0001.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0001.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0002.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0002.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0002.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0003.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0003.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0003.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0004.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0004.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0004.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="TOP_MENU.0005.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="TOP_MENU.0005.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="TOP_MENU.0005.LADMWR">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="LEFT_MENU" row-count="5">
        <lxml:list-header>
        <lxml:header name="LADMDSC">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Description</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWAM">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>WAM</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADMWR">
        <lxml:heading-1>Application</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Web</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADRVAL">
        <lxml:heading-1>Administration</lxml:heading-1>
        <lxml:heading-2>Menu</lxml:heading-2>
        <lxml:heading-3>Rentry</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LADRFLD">
        <lxml:heading-1>Rentry</lxml:heading-1>
        <lxml:heading-2>Field</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0001.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0001.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0001.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0001.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0001.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0002.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0002.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0002.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0002.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0002.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0003.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0003.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0003.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0003.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0003.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0004.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0004.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0004.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0004.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0004.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LADMDSC" id="LEFT_MENU.0005.LADMDSC">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LADMWAM" id="LEFT_MENU.0005.LADMWAM">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADMWR" id="LEFT_MENU.0005.LADMWR">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRVAL" id="LEFT_MENU.0005.LADRVAL">ABCDEFGHIJ</lxml:column>
        <lxml:column name="LADRFLD" id="LEFT_MENU.0005.LADRFLD">ABCDEFGHIJ</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="LS_MLNVAR" row-count="5">
        <lxml:list-header>
        <lxml:header name="FXVARNAM">
        <lxml:heading-1>Variable</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        <lxml:header name="FXVARTXT">
        <lxml:heading-1>Variable</lxml:heading-1>
        <lxml:heading-2>Text</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0001.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0001.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0002.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0002.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0003.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0003.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0004.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0004.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="FXVARNAM" id="LS_MLNVAR.0005.FXVARNAM">ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI</lxml:column>
        <lxml:column name="FXVARTXT" id="LS_MLNVAR.0005.FXVARTXT">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="SFLIST" row-count="5">
        <lxml:list-header>
        <lxml:header name="LW3SFID">
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>ID</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LW3NAME">
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>Name</lxml:heading-3>
        </lxml:header>
        <lxml:header name="LW3URL">
        <lxml:heading-1>URL</lxml:heading-1>
        <lxml:heading-2> </lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        <lxml:header name="LW3DOMAIN">
        <lxml:heading-1>Domain</lxml:heading-1>
        <lxml:heading-2>Name</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="LW3SFID" id="SFLIST.0001.LW3SFID">12</lxml:column>
        <lxml:column name="LW3NAME" id="SFLIST.0001.LW3NAME">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LW3URL" id="SFLIST.0001.LW3URL">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        <lxml:column name="LW3DOMAIN" id="SFLIST.0001.LW3DOMAIN">ABCDEFGHIJKLMNOPQRSTUVWXYZABCD</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LW3SFID" id="SFLIST.0002.LW3SFID">12</lxml:column>
        <lxml:column name="LW3NAME" id="SFLIST.0002.LW3NAME">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LW3URL" id="SFLIST.0002.LW3URL">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        <lxml:column name="LW3DOMAIN" id="SFLIST.0002.LW3DOMAIN">ABCDEFGHIJKLMNOPQRSTUVWXYZABCD</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LW3SFID" id="SFLIST.0003.LW3SFID">12</lxml:column>
        <lxml:column name="LW3NAME" id="SFLIST.0003.LW3NAME">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LW3URL" id="SFLIST.0003.LW3URL">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        <lxml:column name="LW3DOMAIN" id="SFLIST.0003.LW3DOMAIN">ABCDEFGHIJKLMNOPQRSTUVWXYZABCD</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LW3SFID" id="SFLIST.0004.LW3SFID">12</lxml:column>
        <lxml:column name="LW3NAME" id="SFLIST.0004.LW3NAME">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LW3URL" id="SFLIST.0004.LW3URL">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        <lxml:column name="LW3DOMAIN" id="SFLIST.0004.LW3DOMAIN">ABCDEFGHIJKLMNOPQRSTUVWXYZABCD</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="LW3SFID" id="SFLIST.0005.LW3SFID">12</lxml:column>
        <lxml:column name="LW3NAME" id="SFLIST.0005.LW3NAME">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        <lxml:column name="LW3URL" id="SFLIST.0005.LW3URL">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZaAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxX</lxml:column>
        <lxml:column name="LW3DOMAIN" id="SFLIST.0005.LW3DOMAIN">ABCDEFGHIJKLMNOPQRSTUVWXYZABCD</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        <lxml:list name="HSFLIST" row-count="5">
        <lxml:list-header>
        <lxml:header name="W_SFID">
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3> </lxml:heading-3>
        </lxml:header>
        <lxml:header name="W_SFNM">
        <lxml:heading-1>Store</lxml:heading-1>
        <lxml:heading-2>Front</lxml:heading-2>
        <lxml:heading-3>Name</lxml:heading-3>
        </lxml:header>
        </lxml:list-header>
        <lxml:list-entries>
        <lxml:entry>
        <lxml:column name="W_SFID" id="HSFLIST.0001.W_SFID">12</lxml:column>
        <lxml:column name="W_SFNM" id="HSFLIST.0001.W_SFNM">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="W_SFID" id="HSFLIST.0002.W_SFID">12</lxml:column>
        <lxml:column name="W_SFNM" id="HSFLIST.0002.W_SFNM">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="W_SFID" id="HSFLIST.0003.W_SFID">12</lxml:column>
        <lxml:column name="W_SFNM" id="HSFLIST.0003.W_SFNM">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="W_SFID" id="HSFLIST.0004.W_SFID">12</lxml:column>
        <lxml:column name="W_SFNM" id="HSFLIST.0004.W_SFNM">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        </lxml:entry>
        <lxml:entry>
        <lxml:column name="W_SFID" id="HSFLIST.0005.W_SFID">12</lxml:column>
        <lxml:column name="W_SFNM" id="HSFLIST.0005.W_SFNM">aAbBcCdDeEfFgGhHiIjJkKlLmMnNoO</lxml:column>
        </lxml:entry>
        </lxml:list-entries>
        </lxml:list>
        
        </lxml:lists>
        
        </lxml:data>
        

      Designs:
      - Language:           ENG
        Technology Service: LANSA JQMOBILE

        XSL: |
          <?xml version="1.0" encoding="UTF-8"?>
          
          <!-- WAM       : WMANSF - Store Front Maintenance
               Webroutine: sfmain - Store Front Maintenance
               Timestamp : 2014-06-13T12:10:21-04:00 -->
          
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          
          <xsl:import href="std_keys.xsl" />
          <xsl:import href="std_variables.xsl" />
          <xsl:import href="std_hidden.xsl" />
          <xsl:import href="wmansf_layout.xsl" />
          <xsl:import href="std_html_list.xsl" />
          <xsl:import href="std_html_li.xsl" />
          <xsl:import href="std_repeater.xsl" />
          <xsl:import href="std_input.xsl" />
          
          <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no" />
          
          <lxml:data>
          <lxml:internal_id id="std_html_list_TOP_MENU" />
          <lxml:internal_id id="std_html_li_h_TOP_MENU" />
          <lxml:internal_id id="std_repeater_TOP_MENU" />
          <lxml:internal_id id="std_html_li_TOP_MENU" />
          <lxml:internal_id id="std_html_list_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_h_LEFT_MENU" />
          <lxml:internal_id id="std_repeater_LEFT_MENU" />
          <lxml:internal_id id="std_html_li_LEFT_MENU" />
          <lxml:internal_id id="std_html_list_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_h_LS_MLNVAR" />
          <lxml:internal_id id="std_repeater_LS_MLNVAR" />
          <lxml:internal_id id="std_html_li_LS_MLNVAR" />
          <lxml:internal_id id="std_html_list_SFLIST" />
          <lxml:internal_id id="std_html_li_h_SFLIST" />
          <lxml:internal_id id="std_repeater_SFLIST" />
          <lxml:internal_id id="std_html_li_SFLIST" />
          <lxml:internal_id id="std_html_list_HSFLIST" />
          <lxml:internal_id id="std_html_li_h_HSFLIST" />
          <lxml:internal_id id="std_repeater_HSFLIST" />
          <lxml:internal_id id="std_html_li_HSFLIST" />
          </lxml:data>
          
          <xsl:template match="/">
          <xsl:call-template name="layout" />
          </xsl:template>
          
          <xsl:template match="/lxml:data">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADMID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADMID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADMID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LADAID'" />
          <xsl:with-param name="value" select="key('field-value', 'LADAID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LADAID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT1'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT1')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT1')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'ADMCNT2'" />
          <xsl:with-param name="value" select="key('field-value', 'ADMCNT2')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'ADMCNT2')/lxml:description" />
          <xsl:with-param name="maxlength" select="12" />
          <xsl:with-param name="rdmlxDataType" select="'packed|7|0|.'" />
          <xsl:with-param name="size" select="12" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3MHTML'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3MHTML')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3MHTML')/lxml:description" />
          <xsl:with-param name="maxlength" select="65535" />
          <xsl:with-param name="rdmlxDataType" select="'varchar| |65535'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3WEBUSR'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3WEBUSR')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3WEBUSR')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3SFID'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3SFID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3SFID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWAMNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWAMNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWAMNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'FXWRTNAM'" />
          <xsl:with-param name="value" select="key('field-value', 'FXWRTNAM')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'FXWRTNAM')/lxml:description" />
          <xsl:with-param name="maxlength" select="20" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |20'" />
          <xsl:with-param name="size" select="20" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'W_SFID'" />
          <xsl:with-param name="value" select="key('field-value', 'W_SFID')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'W_SFID')/lxml:description" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'STDRENTRY'" />
          <xsl:with-param name="value" select="key('field-value', 'STDRENTRY')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'STDRENTRY')/lxml:description" />
          <xsl:with-param name="maxlength" select="1" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |1'" />
          <xsl:with-param name="size" select="1" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'S_PARAG'" />
          <xsl:with-param name="value" select="key('field-value', 'S_PARAG')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'S_PARAG')/lxml:description" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="'LW3NAME'" />
          <xsl:with-param name="value" select="key('field-value', 'LW3NAME')" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="key('field-caption', 'LW3NAME')/lxml:description" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <br />
          <xsl:call-template name="std_html_list" wd:listname="TOP_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_TOP_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LEFT_MENU">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LEFT_MENU']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="LS_MLNVAR">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_LS_MLNVAR']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="SFLIST">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_SFLIST']" />
          </xsl:call-template>
          <xsl:call-template name="std_html_list" wd:listname="HSFLIST">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_list_HSFLIST']" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_TOP_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_TOP_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_TOP_MENU']" />
          <xsl:with-param name="listname" select="'TOP_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_TOP_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','TOP_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_TOP_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_TOP_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_TOP_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_TOP_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_TOP_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_TOP_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'TOP_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LEFT_MENU']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LEFT_MENU']" />
          <xsl:with-param name="listname" select="'LEFT_MENU'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LEFT_MENU_content_1.override">
          <span class="LADMDSC">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWAM">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADMWR">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRVAL">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LADRFLD">
          <xsl:for-each select="key('list','LEFT_MENU')/lxml:list-header/lxml:header[5]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LEFT_MENU']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LEFT_MENU']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LEFT_MENU']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LEFT_MENU_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LEFT_MENU_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMDSC']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMDSC']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMDSC')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADMWR']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADMWR']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADMWR')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRVAL']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRVAL']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRVAL')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LADRFLD']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LADRFLD']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-1,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-2,' ',key('column-caption', 'LEFT_MENU_LADRFLD')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="10" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |10'" />
          <xsl:with-param name="size" select="10" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_LS_MLNVAR']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_LS_MLNVAR']" />
          <xsl:with-param name="listname" select="'LS_MLNVAR'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_LS_MLNVAR_content_1.override">
          <span class="FXVARNAM">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="FXVARTXT">
          <xsl:for-each select="key('list','LS_MLNVAR')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_LS_MLNVAR']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_LS_MLNVAR']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_LS_MLNVAR']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_LS_MLNVAR_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_LS_MLNVAR_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARNAM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARNAM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARNAM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="35" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |35'" />
          <xsl:with-param name="size" select="35" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='FXVARTXT']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='FXVARTXT']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-1,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-2,' ',key('column-caption', 'LS_MLNVAR_FXVARTXT')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_SFLIST']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_SFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_SFLIST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_SFLIST']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_SFLIST']" />
          <xsl:with-param name="listname" select="'SFLIST'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_SFLIST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_SFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_SFLIST_content_1.override">
          <span class="LW3SFID">
          <xsl:for-each select="key('list','SFLIST')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LW3NAME">
          <xsl:for-each select="key('list','SFLIST')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LW3URL">
          <xsl:for-each select="key('list','SFLIST')/lxml:list-header/lxml:header[3]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="LW3DOMAIN">
          <xsl:for-each select="key('list','SFLIST')/lxml:list-header/lxml:header[4]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_SFLIST']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_SFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_SFLIST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_SFLIST']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_SFLIST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_SFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_SFLIST_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3SFID']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3SFID']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'SFLIST_LW3SFID')/lxml:heading-1,' ',key('column-caption', 'SFLIST_LW3SFID')/lxml:heading-2,' ',key('column-caption', 'SFLIST_LW3SFID')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3NAME']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3NAME']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'SFLIST_LW3NAME')/lxml:heading-1,' ',key('column-caption', 'SFLIST_LW3NAME')/lxml:heading-2,' ',key('column-caption', 'SFLIST_LW3NAME')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3URL']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3URL']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'SFLIST_LW3URL')/lxml:heading-1,' ',key('column-caption', 'SFLIST_LW3URL')/lxml:heading-2,' ',key('column-caption', 'SFLIST_LW3URL')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="256" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |256'" />
          <xsl:with-param name="size" select="60" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='LW3DOMAIN']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='LW3DOMAIN']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'SFLIST_LW3DOMAIN')/lxml:heading-1,' ',key('column-caption', 'SFLIST_LW3DOMAIN')/lxml:heading-2,' ',key('column-caption', 'SFLIST_LW3DOMAIN')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="lxml:internal_id[@id='std_html_list_HSFLIST']" mode="std_html_list.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_list_HSFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_list_HSFLIST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_h_HSFLIST']" />
          <xsl:with-param name="role" select="'list-divider'" />
          </xsl:call-template>
          <xsl:call-template name="std_repeater">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_repeater_HSFLIST']" />
          <xsl:with-param name="listname" select="'HSFLIST'" />
          <xsl:with-param name="isOutputOnly" select="false()" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_h_HSFLIST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_h_HSFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_h_HSFLIST_content_1.override">
          <span class="W_SFID">
          <xsl:for-each select="key('list','HSFLIST')/lxml:list-header/lxml:header[1]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          <span class="W_SFNM">
          <xsl:for-each select="key('list','HSFLIST')/lxml:list-header/lxml:header[2]/*[.//text()[normalize-space(.)!='']]" wd:edit-as-list="false">
          <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
          </span>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_repeater_HSFLIST']" mode="std_repeater.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_repeater_HSFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_repeater_HSFLIST_content_1.override">
          <xsl:call-template name="std_html_li">
          <xsl:with-param name="internal_id" select="document('')/*/lxml:data/lxml:internal_id[@id='std_html_li_HSFLIST']" />
          </xsl:call-template>
          </xsl:template>
          <xsl:template match="lxml:internal_id[@id='std_html_li_HSFLIST']" mode="std_html_li.private.override">
          <xsl:param name="context" />
          <xsl:param name="index" />
          <xsl:choose>
          <xsl:when test="$index=1">
          <xsl:apply-templates select="$context" mode="_std_html_li_HSFLIST_content_1.override" />
          </xsl:when>
          </xsl:choose>
          </xsl:template>
          <xsl:template match="*" mode="_std_html_li_HSFLIST_content_1.override">
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_SFID']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_SFID']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'HSFLIST_W_SFID')/lxml:heading-1,' ',key('column-caption', 'HSFLIST_W_SFID')/lxml:heading-2,' ',key('column-caption', 'HSFLIST_W_SFID')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="5" />
          <xsl:with-param name="rdmlxDataType" select="'packed|2|0|.'" />
          <xsl:with-param name="size" select="5" />
          </xsl:call-template>
          <xsl:call-template name="std_input">
          <xsl:with-param name="name" select="lxml:column[@name='W_SFNM']/@id" />
          <xsl:with-param name="value" select="lxml:column[@name='W_SFNM']" />
          <xsl:with-param name="displayMode" select="'input'" />
          <xsl:with-param name="label" select="normalize-space(concat(key('column-caption', 'HSFLIST_W_SFNM')/lxml:heading-1,' ',key('column-caption', 'HSFLIST_W_SFNM')/lxml:heading-2,' ',key('column-caption', 'HSFLIST_W_SFNM')/lxml:heading-3))" />
          <xsl:with-param name="maxlength" select="30" />
          <xsl:with-param name="rdmlxDataType" select="'alpha| |30'" />
          <xsl:with-param name="size" select="30" />
          </xsl:call-template>
          </xsl:template>
          
          <xsl:template match="/lxml:data" mode="content.hidden">
          <xsl:apply-imports />
          
          <input type="hidden" id="{$lweb_WRName}_LW3SFCUR" name="LW3SFCUR" value="{key('field-value', 'LW3SFCUR')}" data-lstddatatype="packed|2|0|." wd:caption="{key('field-caption', 'LW3SFCUR')/lxml:description}" />
          
          </xsl:template>
          </xsl:transform>

      - Language:           ENG
        Technology Service: LANSA XHTML

        XSL: |
          <?xml version="1.0"?>
          
          <!-- Web application : WMANSF              Store Front Maintenance                 -->
          <!-- Web routine     : sfmain                                                      -->
          <!-- Timestamp       : 2007-12-11T12:18:49-05:00                                   -->
          <xsl:transform version="1.0" exclude-result-prefixes="lxml wd" xmlns:lxml="http://www.lansa.com/2002/XML/Runtime-Data" xmlns:wd="http://www.lansa.com/2002/XSL/Weblet-Design" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
             <xsl:import href="std_keys.xsl"/>
             <xsl:import href="std_variables.xsl"/>
             <xsl:import href="std_anchor.xsl"/>
             <xsl:import href="std_button.xsl"/>
             <xsl:import href="wadmlgn1_layout.xsl"/>
             <xsl:import href="desc_lookup.xsl"/>
             <xsl:import href="multi_button.xsl"/>
             <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="no"/>
             <xsl:template match="/">
                <xsl:comment> Web application : WMANSF              Store Front Maintenance</xsl:comment>
                <xsl:comment> Web routine     : sfmain</xsl:comment>
                <xsl:call-template name="layout">
                   <!-- <xsl:with-param name="has_form" select="?" /> -->
                   <!-- <xsl:with-param name="no_layout" select="?" /> -->
                   <!-- <xsl:with-param name="body_class" select="?" /> -->
                   <!-- <xsl:with-param name="form_class" select="?" /> -->
                   <xsl:with-param name="show_title" select="false()"/>
                   <!-- <xsl:with-param name="title_text" select="?" /> -->
                   <!-- <xsl:with-param name="show_messages" select="?" /> -->
                   <!-- <xsl:with-param name="onload_script" select="?" /> -->
                   <!-- <xsl:with-param name="onunload_script" select="?" /> -->
                   <!-- <xsl:with-param name="javascript_files" select="?" /> -->
                   <!-- <xsl:with-param name="theme_css_filename" select="?" /> -->
                   <!-- <xsl:with-param name="css_files" select="?" /> -->
                </xsl:call-template>
             </xsl:template>
             <xsl:template match="/lxml:data">
                <xsl:call-template name="desc_lookup">
                   <xsl:with-param name="name" select="'TXT_NEWSTORE_HDR'"/>
                </xsl:call-template>
                <script type="text/javascript" src="/js/stickytooltips.js">
          /***********************************************
          * Sticky Tooltip script- (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
          * This notice MUST stay intact for legal use
          * Visit Dynamic Drive at http://www.dynamicdrive.com/ for this script and 100s more
          ***********************************************/
                </script>
                <div class="hidden">
                   <input type="hidden" name="LW3SFCUR" value="{key('field-value', 'LW3SFCUR')}"/>
                </div>
                <table width="100%">
                   <tbody>
                      <tr>
                         <td class=" " colspan="2" align="left">
                            <h1 style="color: #002888;">
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'WMANSF_SFMAIN'"/>
                               </xsl:call-template>
                            </h1>
                            <div>
                               <table>
                                  <tbody>
                                     <tr>
                                        <td>
                                           <span data-tooltip="sticky1">
                                              <img src="/img/QmarkHelp.gif" width="20" height="20"/>
                                           </span>
                                           <!--HTML for the tooltips-->
                                           <div id="mystickytooltip" class="stickytooltip">
                                              <div style="padding:5px">
                                                 <div id="sticky1" class="atip" style="width:250px">
                                                    <h1></h1>
                                                    <p>
                                                       <xsl:call-template name="desc_lookup">
                                                          <xsl:with-param name="name" select="'TXT_NEWSTORE_HELP1'"/>
                                                       </xsl:call-template>
                                                       <xsl:call-template name="desc_lookup">
                                                          <xsl:with-param name="name" select="'TXT_NEWSTORE_HELP2'"/>
                                                       </xsl:call-template>
                                                       <xsl:call-template name="desc_lookup">
                                                          <xsl:with-param name="name" select="'TXT_NEWSTORE_HELP3'"/>
                                                       </xsl:call-template>
                                                       <xsl:call-template name="desc_lookup">
                                                          <xsl:with-param name="name" select="'TXT_NEWSTORE_HELP4'"/>
                                                       </xsl:call-template>
                                                       <xsl:call-template name="desc_lookup">
                                                          <xsl:with-param name="name" select="'TXT_NEWSTORE_HELP5'"/>
                                                       </xsl:call-template>
                                                    </p>
                                                 </div>
                                                 <!-- <div class="stickystatus"></div> -->
                                              </div>
                                           </div>
                                        </td>
                                     </tr>
                                  </tbody>
                               </table>
                            </div>
                            <div class="main_separator" style=" "></div>
                         </td>
                      </tr>
                   </tbody>
                </table>
                <fieldset>
                   <legend class="bold">
                      <xsl:call-template name="desc_lookup">
                         <xsl:with-param name="name" select="'LBL_STOREFRONT_LIST'"/>
                      </xsl:call-template>
                   </legend>
                   <table cellspacing="5" cellpadding="5" align="center">
                      <tbody>
                         <tr>
                            <td colspan="2">
                               <xsl:apply-templates select="/lxml:data/lxml:lists/lxml:list[@name='SFLIST']" wd:listname="SFLIST">
                                  <xsl:with-param name="allow_sort" select="true()"/>
                                  <xsl:with-param name="allow_col_resize" select="true()"/>
                               </xsl:apply-templates>
                            </td>
                         </tr>
                         <tr>
                            <td valign="top" nowrap="-1" align="right">
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="on_click_wrname" select="'chudsf'"/>
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_ADD_NEW_SF')"/>
                                  <xsl:with-param name="reentryvalue" select="'W'"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_22400')"/>
                                  <xsl:with-param name="moclass" select="'multi_button_mo'"/>
                                  <xsl:with-param name="reentryfield" select="'STDRENTRY'"/>
                                  <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="height_design" select="?" /> -->
                                  <!-- <xsl:with-param name="on_click_wamname" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="title" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="default_button" select="?" /> -->
                               </xsl:call-template>
                            </td>
                            <td valign="top" nowrap="-1" align="right">
                               <xsl:call-template name="multi_button">
                                  <xsl:with-param name="caption" select="key('desc-lookup', 'BTN_BUILD_KEYWORDS')"/>
                                  <xsl:with-param name="on_click_wrname" select="'sfmain'"/>
                                  <xsl:with-param name="on_click_wamname" select="'WMANSF'"/>
                                  <xsl:with-param name="reentryvalue" select="'J'"/>
                                  <xsl:with-param name="name" select="concat('o', position(), '_LANSA_22400')"/>
                                  <xsl:with-param name="moclass" select="'multi_button_mo'"/>
                                  <xsl:with-param name="reentryfield" select="'STDRENTRY'"/>
                                  <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="height_design" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="disabled" select="?" /> -->
                                  <!-- <xsl:with-param name="title" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!-- <xsl:with-param name="default_button" select="?" /> -->
                               </xsl:call-template>
                            </td>
                         </tr>
                      </tbody>
                   </table>
                </fieldset>
             </xsl:template>
             <xsl:template match="/lxml:data/lxml:lists/lxml:list[@name='SFLIST']">
                <xsl:param name="allow_sort" select="true()" wd:type="std:boolean" wd:tip_id=""/>
                <xsl:param name="allow_col_resize" select="true()" wd:type="std:boolean" wd:tip_id=""/>
                <xsl:variable name="thelist" select="/lxml:data/lxml:lists/lxml:list[@name='SFLIST']"/>
                <script language="javascript">
                   <xsl:text disable-output-escaping="yes">//&lt;![CDATA[</xsl:text>
                      function init_stdGrid_SFLIST() {
                      var g = register_std_grid('SFLIST',2);
                      g.allowSort = <xsl:value-of select="$allow_sort"/>;
                      g.allowColResize = <xsl:value-of select="$allow_col_resize"/>;
                      var col = 0;
                      var ss = document.styleSheets[0];
                      var gid = '.std_grid#SFLIST ';
                      
                      }
                      init_stdGrid_SFLIST();
                      <xsl:text disable-output-escaping="yes">//]]&gt;</xsl:text>
                </script>
                <input type="hidden" name="SFLIST.." value="{count(lxml:list-entries/lxml:entry[1])}"/>
                <div id="SFLIST_wrap" class="std_grid_wrapper">
                   <xsl:if test="/lxml:data/lxml:context[@design]">
                      <xsl:attribute name="class">std_grid_wrapper_designtime</xsl:attribute>
                   </xsl:if>
                   <table id="SFLIST" class="std_grid" cellspacing="0" cellpadding="0" width="100%">
                      <thead>
                         <tr class="list-h">
                            <th>
                               <xsl:call-template name="desc_lookup">
                                  <xsl:with-param name="name" select="'LBL_STOREFRONT'"/>
                               </xsl:call-template>
                            </th>
                            <th class="number LW3SFID std_grid_sort_indicator" __decimalseparator="." __formattype="packed" __mode="input" __allowsort="true">
                               <div class="std_grid_cell_sizer">
                                  <xsl:if test="boolean(/lxml:data/lxml:context[@design])">
                                     <xsl:attribute name="class">hidden__</xsl:attribute>
                                  </xsl:if>
                                  <xsl:comment>
                                  </xsl:comment>
                               </div>
                            </th>
                         </tr>
                      </thead>
                      <tbody>
                         <xsl:for-each select="$thelist/lxml:list-entries/lxml:entry">
                            <xsl:variable name="LW3SFID" select="lxml:column[1]"/>
                            <xsl:variable name="LW3NAME" select="lxml:column[2]"/>
                            <xsl:variable name="LW3URL" select="lxml:column[3]"/>
                            <tr __oddrc="list-o" __evenrc="list-e">
                               <xsl:attribute name="class">
                                  <xsl:choose>
                                     <xsl:when test="position() mod 2">list-o</xsl:when>
                                     <xsl:otherwise>list-e</xsl:otherwise>
                                  </xsl:choose>
                               </xsl:attribute>
                               <td>
                                  <xsl:value-of select="$LW3NAME"/>
                               </td>
                               <td class="LW3SFID">
                                  <xsl:attribute name="__cellValue">
                                     <xsl:value-of select="$LW3SFID"/>
                                  </xsl:attribute>
                                  <input type="hidden" name="{$LW3SFID/@id}" value="{$LW3SFID}"/>
                                  <input type="hidden" name="{$LW3NAME/@id}" value="{$LW3NAME}"/>
                                  <xsl:call-template name="std_anchor">
                                     <xsl:with-param name="currentrownumval" select="$LW3SFID"/>
                                     <!-- <xsl:with-param name="presubmit_js" select="?" /> -->
                                     <xsl:with-param name="currentrowhfield" select="'LW3SFID'"/>
                                     <xsl:with-param name="on_click_wrname" select="'chudsf'"/>
                                     <xsl:with-param name="reentryvalue" select="'Q'"/>
                                     <xsl:with-param name="value" select="key('desc-lookup', 'LNK_CHANGE_DELETE')"/>
                                     <xsl:with-param name="name" select="concat('o', position(), '_LANSA_9574')"/>
                                     <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                     <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                     <!-- <xsl:with-param name="formname" select="?" /> -->
                                     <!-- <xsl:with-param name="url" select="?" /> -->
                                     <!-- <xsl:with-param name="on_click_wamname" select="?" /> -->
                                     <!-- <xsl:with-param name="protocol" select="?" /> -->
                                     <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                     <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                     <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                     <!-- <xsl:with-param name="width_design" select="?" /> -->
                                     <!-- <xsl:with-param name="relative-image-path" select="?" /> -->
                                     <!-- <xsl:with-param name="absolute-image-path" select="?" /> -->
                                     <!-- <xsl:with-param name="class" select="?" /> -->
                                     <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                     <!-- <xsl:with-param name="text_class" select="?" /> -->
                                     <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                     <!---->
                                     <!-- NOTE: Uncomment <xsl:with-param> tags above and replace "Replace_With_Field_Name" -->
                                     <!--       placeholders with the name of the field you wish to use for this Weblet. -->
                                     <!--       Refer to Field View pane for available fields. -->
                                     <!--       Also provide other parameter values, if any. -->
                                     <!---->
                                  </xsl:call-template>
                                  <!-- <xsl:call-template name="std_anchor"> -->
                                  <!-- <xsl:with-param name="reentryvalue" select="''" /> -->
                                  <!-- <xsl:with-param name="presubmit_js"
                                                     select="concat('document.LANSA.LW3SFID.value=&quot;', lxml:column[@name='LW3SFID'], '&quot;;')" /> -->
                                  <!-- <xsl:with-param name="currentrownumval"
                                                     select="$LW3SFID" /> -->
                                  <!-- <xsl:with-param name="currentrowhfield"
                                                     select="LW3SFID" /> -->
                                  <!-- <xsl:with-param name="on_click_wrname"
                                                     select="'LSTCAT'" /> -->
                                  <!-- <xsl:with-param name="on_click_wamname"
                                                     select="'WMNTCAT1'" /> -->
                                  <!-- <xsl:with-param name="value" select="'Categories'" /> -->
                                  <!-- <xsl:with-param name="name"
                                                     select="concat('o', position(), '_LANSA_13163')" /> -->
                                  <!-- <xsl:with-param name="reentryfield" select="?" /> -->
                                  <!-- <xsl:with-param name="hide_if" select="?" /> -->
                                  <!-- <xsl:with-param name="formname" select="?" /> -->
                                  <!-- <xsl:with-param name="url" select="?" /> -->
                                  <!-- <xsl:with-param name="protocol" select="?" /> -->
                                  <!-- <xsl:with-param name="show_in_new_window" select="?" /> -->
                                  <!-- <xsl:with-param name="target_window_name" select="?" /> -->
                                  <!-- <xsl:with-param name="pos_absolute_design" select="?" /> -->
                                  <!-- <xsl:with-param name="width_design" select="?" /> -->
                                  <!-- <xsl:with-param name="relative-image-path" select="?" /> -->
                                  <!-- <xsl:with-param name="absolute-image-path" select="?" /> -->
                                  <!-- <xsl:with-param name="class" select="?" /> -->
                                  <!-- <xsl:with-param name="mouseover_class" select="?" /> -->
                                  <!-- <xsl:with-param name="text_class" select="?" /> -->
                                  <!-- <xsl:with-param name="tab_index" select="?" /> -->
                                  <!---->
                                  <!-- NOTE: Uncomment <xsl:with-param> tags above and replace "Replace_With_Field_Name" -->
                                  <!--       placeholders with the name of the field you wish to use for this Weblet. -->
                                  <!--       Refer to Field View pane for available fields. -->
                                  <!--       Also provide other parameter values, if any. -->
                                  <!---->
                                  <!-- </xsl:call-template>&#160;&#160; -->
                                  <!-- <a href="{$LW3URL}">Launch Site</a> -->
                               </td>
                            </tr>
                         </xsl:for-each>
                      </tbody>
                   </table>
                </div>
             </xsl:template>
          </xsl:transform>
